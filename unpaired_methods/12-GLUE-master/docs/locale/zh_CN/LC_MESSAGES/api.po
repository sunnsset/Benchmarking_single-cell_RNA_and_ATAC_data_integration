# Copyright (C) Gao Lab, 2022
# This file is distributed under the same license as the scglue package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scglue 0.2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-22 14:24+0800\n"
"Last-Translator: Pei-Wen Ji <jipw@mail.cbi.pku.edu.cn>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../api.rst:2
msgid "API documentation"
msgstr "API文档"

#: ../../api.rst:4
msgid ""
"This section provides detailed API documentation for all public functions"
" and classes in ``scglue``."
msgstr "本节提供所有公共函数和 ``scglue`` 中的类的详细API文档。"

#: ../../api.rst:12:<autosummary>:1
msgid ":py:obj:`scglue <scglue>`\\"
msgstr ""

#: ../../api.rst:12:<autosummary>:1 of scglue:1
msgid "GLUE (Graph-Linked Unified Embedding)"
msgstr ""

#: ../../api/scglue.rst:2
msgid "scglue"
msgstr ""

#: ../../api/scglue.models.rst:35 ../../api/scglue.rst:25
msgid "Submodules"
msgstr "子模块"

#: ../../api/scglue.rst:41:<autosummary>:1
msgid ":py:obj:`scglue.check <scglue.check>`\\"
msgstr ""

#: ../../api/scglue.rst:41:<autosummary>:1 of scglue.check:1
msgid "Dependency checking"
msgstr "依赖检查"

#: ../../api/scglue.rst:41:<autosummary>:1
msgid ":py:obj:`scglue.data <scglue.data>`\\"
msgstr ""

#: ../../api/scglue.rst:41:<autosummary>:1 of scglue.data:1
msgid ""
"Auxiliary functions for :class:`anndata.AnnData` objects that are not "
"covered in :mod:`scanpy`."
msgstr "没有包含在 :mod:`scanpy` 里，:class:`anndata.AnnData` 对象的辅助函数。"

#: ../../api/scglue.rst:41:<autosummary>:1
msgid ":py:obj:`scglue.genomics <scglue.genomics>`\\"
msgstr ""

#: ../../api/scglue.rst:41:<autosummary>:1 of scglue.genomics:1
msgid "Genomics operations"
msgstr "基因组学相关的操作"

#: ../../api/scglue.rst:41:<autosummary>:1
msgid ":py:obj:`scglue.graph <scglue.graph>`\\"
msgstr ""

#: ../../api/scglue.rst:41:<autosummary>:1 of scglue.graph:1
msgid "Graph-related functions"
msgstr "图相关的函数"

#: ../../api/scglue.rst:41:<autosummary>:1
msgid ":py:obj:`scglue.metrics <scglue.metrics>`\\"
msgstr ""

#: ../../api/scglue.rst:41:<autosummary>:1 of scglue.metrics:1
msgid "Performance evaluation metrics"
msgstr "性能评估指标"

#: ../../api/scglue.rst:41:<autosummary>:1
msgid ":py:obj:`scglue.models <scglue.models>`\\"
msgstr ""

#: ../../api/scglue.rst:41:<autosummary>:1 of scglue.models:1
msgid "Integration models"
msgstr "整合模型"

#: ../../api/scglue.rst:41:<autosummary>:1
msgid ":py:obj:`scglue.num <scglue.num>`\\"
msgstr ""

#: ../../api/scglue.rst:41:<autosummary>:1 of scglue.num:1
msgid "Numeric operations"
msgstr "数值运算"

#: ../../api/scglue.rst:41:<autosummary>:1
msgid ":py:obj:`scglue.plot <scglue.plot>`\\"
msgstr ""

#: ../../api/scglue.rst:41:<autosummary>:1 of scglue.plot:1
msgid "Plotting functions"
msgstr "画图函数"

#: ../../api/scglue.rst:41:<autosummary>:1
msgid ":py:obj:`scglue.typehint <scglue.typehint>`\\"
msgstr ""

#: ../../api/scglue.rst:41:<autosummary>:1 of scglue.typehint:1
msgid "Type hint definitions"
msgstr "定义类型提示"

#: ../../api/scglue.rst:41:<autosummary>:1
msgid ":py:obj:`scglue.utils <scglue.utils>`\\"
msgstr ""

#: ../../api/scglue.rst:41:<autosummary>:1 of scglue.utils:1
msgid "Miscellaneous utilities"
msgstr "其他实用功能"

#: ../../api/scglue.check.rst:2
msgid "scglue.check"
msgstr ""

#: ../../api/scglue.check.rst:13 ../../api/scglue.data.rst:13
#: ../../api/scglue.genomics.rst:13 ../../api/scglue.graph.rst:13
#: ../../api/scglue.metrics.rst:13 ../../api/scglue.models.dx.rst:13
#: ../../api/scglue.models.nn.rst:13 ../../api/scglue.models.rst:13
#: ../../api/scglue.models.scclue.rst:13 ../../api/scglue.models.scglue.rst:13
#: ../../api/scglue.num.rst:13 ../../api/scglue.plot.rst:13
#: ../../api/scglue.utils.rst:13
msgid "Functions"
msgstr "函数"

#: ../../api/scglue.check.rst:23:<autosummary>:1
msgid ":py:obj:`check_deps <scglue.check.check_deps>`"
msgstr ""

#: ../../api/scglue.check.rst:23:<autosummary>:1 of scglue.check.check_deps:1
msgid "Check whether certain dependencies are installed"
msgstr ""

#: ../../api/scglue.check.rst:25 ../../api/scglue.genomics.rst:38
#: ../../api/scglue.models.base.rst:17 ../../api/scglue.models.data.rst:17
#: ../../api/scglue.models.glue.rst:17 ../../api/scglue.models.nn.rst:27
#: ../../api/scglue.models.plugins.rst:17 ../../api/scglue.models.prob.rst:17
#: ../../api/scglue.models.sc.rst:17 ../../api/scglue.models.scclue.rst:25
#: ../../api/scglue.models.scglue.rst:25 ../../api/scglue.utils.rst:28
msgid "Classes"
msgstr "类"

#: ../../api/scglue.check.rst:33:<autosummary>:1
msgid ":py:obj:`Checker <scglue.check.Checker>`"
msgstr ""

#: ../../api/scglue.check.rst:33:<autosummary>:1 of scglue.check.Checker:1
msgid "Checks availability and version of a dependency"
msgstr ""

#: ../../api/scglue.check.rst:33:<autosummary>:1
msgid ":py:obj:`CmdChecker <scglue.check.CmdChecker>`"
msgstr ""

#: ../../api/scglue.check.rst:33:<autosummary>:1 of scglue.check.CmdChecker:1
msgid "Checks availability and version of a command line dependency"
msgstr ""

#: ../../api/scglue.check.rst:33:<autosummary>:1
msgid ":py:obj:`ModuleChecker <scglue.check.ModuleChecker>`"
msgstr ""

#: ../../api/scglue.check.rst:33:<autosummary>:1 of
#: scglue.check.ModuleChecker:1
msgid "Checks availability and version of a Python module dependency"
msgstr ""

#: ../../api/scglue.check.Checker.rst:2
msgid "scglue.check.Checker"
msgstr ""

#: of scglue.check.Checker:1 scglue.models.base.Model:1
#: scglue.models.base.Trainer:1 scglue.models.base.TrainingPlugin:1
#: scglue.models.data.ParallelDataLoader:1 scglue.utils.ConfigManager:1
#: scglue.utils.DelayedKeyboardInterrupt:1 scglue.utils.LogManager:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: of scglue.check.Checker scglue.check.CmdChecker scglue.check.ModuleChecker
#: scglue.check.check_deps scglue.data.aggregate_obs scglue.data.bedmap2anndata
#: scglue.data.count_prep scglue.data.estimate_balancing_weight
#: scglue.data.extract_rank_genes_groups scglue.data.get_gene_annotation
#: scglue.data.get_metacells scglue.data.lsi scglue.data.metacell_corr
#: scglue.data.metacell_regr scglue.data.transfer_labels
#: scglue.genomics.Bed.expand scglue.genomics.Bed.nucleotide_content
#: scglue.genomics.Bed.read_bed scglue.genomics.Bed.rectify
#: scglue.genomics.Bed.verify scglue.genomics.Bed.write_bed
#: scglue.genomics.Gtf.read_gtf scglue.genomics.Gtf.rectify
#: scglue.genomics.Gtf.to_bed scglue.genomics.Gtf.verify
#: scglue.genomics.cis_regulatory_ranking scglue.genomics.dist_power_decay
#: scglue.genomics.ens_trim_version scglue.genomics.get_chr_len_from_fai
#: scglue.genomics.interval_dist scglue.genomics.read_ctx_grn
#: scglue.genomics.regulatory_inference
#: scglue.genomics.rna_anchored_guidance_graph scglue.genomics.window_graph
#: scglue.genomics.write_links scglue.genomics.write_scenic_feather
#: scglue.graph.check_graph scglue.graph.collapse_multigraph
#: scglue.graph.compose_multigraph scglue.graph.reachable_vertices
#: scglue.metrics.avg_silhouette_width
#: scglue.metrics.avg_silhouette_width_batch scglue.metrics.foscttm
#: scglue.metrics.graph_connectivity scglue.metrics.mean_average_precision
#: scglue.metrics.neighbor_conservation scglue.metrics.normalized_mutual_info
#: scglue.metrics.seurat_alignment_score scglue.models.base.Model
#: scglue.models.base.Model.compile scglue.models.base.Model.fit
#: scglue.models.base.Model.get_losses scglue.models.base.Model.save
#: scglue.models.base.Trainer scglue.models.base.Trainer.fit
#: scglue.models.base.Trainer.get_losses
#: scglue.models.base.Trainer.load_state_dict
#: scglue.models.base.Trainer.report_metrics
#: scglue.models.base.Trainer.train_step scglue.models.base.Trainer.val_step
#: scglue.models.base.TrainingPlugin.attach scglue.models.configure_dataset
#: scglue.models.data.AnnDataset scglue.models.data.AnnDataset.accept_shuffle
#: scglue.models.data.AnnDataset.propose_shuffle
#: scglue.models.data.AnnDataset.random_split scglue.models.data.ArrayDataset
#: scglue.models.data.ArrayDataset.accept_shuffle
#: scglue.models.data.ArrayDataset.propose_shuffle
#: scglue.models.data.ArrayDataset.random_split scglue.models.data.Dataset
#: scglue.models.data.Dataset.accept_shuffle
#: scglue.models.data.Dataset.prepare_shuffle
#: scglue.models.data.Dataset.propose_shuffle scglue.models.data.GraphDataset
#: scglue.models.data.GraphDataset.accept_shuffle
#: scglue.models.data.GraphDataset.graph2triplet
#: scglue.models.data.GraphDataset.propose_shuffle
#: scglue.models.data.ParallelDataLoader
#: scglue.models.dx.integration_consistency scglue.models.fit_SCGLUE
#: scglue.models.glue.DataDecoder.forward
#: scglue.models.glue.DataEncoder.forward
#: scglue.models.glue.Discriminator.forward scglue.models.glue.GLUE
#: scglue.models.glue.GLUETrainer scglue.models.glue.GLUETrainer.compute_losses
#: scglue.models.glue.GLUETrainer.fit scglue.models.glue.GLUETrainer.get_losses
#: scglue.models.glue.GLUETrainer.load_state_dict
#: scglue.models.glue.GLUETrainer.train_step
#: scglue.models.glue.GLUETrainer.val_step
#: scglue.models.glue.GraphDecoder.forward
#: scglue.models.glue.GraphEncoder.forward scglue.models.load_model
#: scglue.models.nn.GraphAttent scglue.models.nn.GraphAttent.forward
#: scglue.models.nn.GraphConv.forward scglue.models.nn.freeze_running_stats
#: scglue.models.plugins.EarlyStopping
#: scglue.models.plugins.EarlyStopping.attach scglue.models.plugins.LRScheduler
#: scglue.models.plugins.LRScheduler.attach
#: scglue.models.plugins.Tensorboard.attach scglue.models.prob.MSE
#: scglue.models.prob.MSE.log_prob scglue.models.prob.RMSE
#: scglue.models.prob.RMSE.log_prob scglue.models.prob.ZILN
#: scglue.models.prob.ZIN scglue.models.prob.ZIN.log_prob
#: scglue.models.prob.ZINB scglue.models.prob.ZINB.log_prob
#: scglue.models.sc.Classifier scglue.models.sc.DataDecoder
#: scglue.models.sc.DataDecoder.forward scglue.models.sc.DataEncoder
#: scglue.models.sc.DataEncoder.compute_l scglue.models.sc.DataEncoder.forward
#: scglue.models.sc.DataEncoder.normalize scglue.models.sc.Discriminator
#: scglue.models.sc.Discriminator.forward scglue.models.sc.GraphDecoder.forward
#: scglue.models.sc.GraphEncoder scglue.models.sc.GraphEncoder.forward
#: scglue.models.sc.IndDataDecoder scglue.models.sc.IndDataDecoder.forward
#: scglue.models.sc.NBDataDecoder scglue.models.sc.NBDataDecoder.forward
#: scglue.models.sc.NBDataEncoder scglue.models.sc.NBDataEncoder.compute_l
#: scglue.models.sc.NBDataEncoder.normalize scglue.models.sc.NormalDataDecoder
#: scglue.models.sc.NormalDataDecoder.forward scglue.models.sc.Prior
#: scglue.models.sc.VanillaDataEncoder
#: scglue.models.sc.VanillaDataEncoder.compute_l
#: scglue.models.sc.VanillaDataEncoder.normalize
#: scglue.models.sc.ZILNDataDecoder scglue.models.sc.ZILNDataDecoder.forward
#: scglue.models.sc.ZINBDataDecoder scglue.models.sc.ZINBDataDecoder.forward
#: scglue.models.sc.ZINDataDecoder scglue.models.sc.ZINDataDecoder.forward
#: scglue.models.scclue.BatchedTransferrable.transfer_weights_from
#: scglue.models.scclue.Classifier scglue.models.scclue.SCCLUEModel.compile
#: scglue.models.scclue.SCCLUEModel.encode_data
#: scglue.models.scclue.SCCLUEModel.fit scglue.models.scclue.SCCLUETrainer.fit
#: scglue.models.scclue.SCCLUETrainer.load_state_dict
#: scglue.models.scclue.SCCLUETrainer.train_step
#: scglue.models.scclue.SCCLUETrainer.val_step
#: scglue.models.scclue.Transferrable.transfer_weights_from
#: scglue.models.scclue.register_prob_model scglue.models.scglue.IndSCGLUE
#: scglue.models.scglue.PairedSCGLUEModel
#: scglue.models.scglue.PairedSCGLUEModel.compile
#: scglue.models.scglue.PairedSCGLUETrainer
#: scglue.models.scglue.PairedSCGLUETrainer.compute_losses
#: scglue.models.scglue.SCGLUE scglue.models.scglue.SCGLUEModel
#: scglue.models.scglue.SCGLUEModel.adopt_pretrained_model
#: scglue.models.scglue.SCGLUEModel.compile
#: scglue.models.scglue.SCGLUEModel.decode_data
#: scglue.models.scglue.SCGLUEModel.encode_data
#: scglue.models.scglue.SCGLUEModel.encode_graph
#: scglue.models.scglue.SCGLUEModel.fit
#: scglue.models.scglue.SCGLUEModel.get_losses
#: scglue.models.scglue.SCGLUETrainer
#: scglue.models.scglue.SCGLUETrainer.compute_losses
#: scglue.models.scglue.SCGLUETrainer.train_step
#: scglue.models.scglue.register_prob_model scglue.num.all_counts
#: scglue.num.col_pcc scglue.num.col_spr scglue.num.col_var scglue.num.cov_mat
#: scglue.num.densify scglue.num.normalize_edges scglue.num.pcc_mat
#: scglue.num.prob_or scglue.num.prod scglue.num.sigmoid scglue.num.spr_mat
#: scglue.num.tfidf scglue.num.vertex_degrees scglue.plot.prc scglue.plot.roc
#: scglue.plot.sankey scglue.utils.ConstrainedDataFrame.rectify
#: scglue.utils.ConstrainedDataFrame.verify scglue.utils.get_chained_attr
#: scglue.utils.get_rs scglue.utils.run_command
msgid "Parameters"
msgstr "参数"

#: of scglue.check.Checker:4 scglue.check.CmdChecker:4
#: scglue.check.ModuleChecker:4
msgid "Name of the dependency"
msgstr ""

#: of scglue.check.Checker:6 scglue.check.CmdChecker:10
#: scglue.check.ModuleChecker:6
msgid "Minimal required version"
msgstr ""

#: of scglue.check.Checker:8 scglue.check.CmdChecker:12
#: scglue.check.ModuleChecker:8
msgid "Install hint message to be printed if dependency is unavailable"
msgstr ""

#: ../../api/scglue.check.Checker.rst:12
#: ../../api/scglue.check.CmdChecker.rst:12
#: ../../api/scglue.check.ModuleChecker.rst:12
#: ../../api/scglue.genomics.Bed.rst:12 ../../api/scglue.genomics.Gtf.rst:12
#: ../../api/scglue.models.base.Model.rst:12
#: ../../api/scglue.models.base.Trainer.rst:12
#: ../../api/scglue.models.base.TrainingPlugin.rst:12
#: ../../api/scglue.models.data.AnnDataset.rst:12
#: ../../api/scglue.models.data.ArrayDataset.rst:12
#: ../../api/scglue.models.data.DataLoader.rst:12
#: ../../api/scglue.models.data.Dataset.rst:12
#: ../../api/scglue.models.data.GraphDataset.rst:12
#: ../../api/scglue.models.data.ParallelDataLoader.rst:12
#: ../../api/scglue.models.glue.DataDecoder.rst:12
#: ../../api/scglue.models.glue.DataEncoder.rst:12
#: ../../api/scglue.models.glue.Discriminator.rst:12
#: ../../api/scglue.models.glue.GLUE.rst:12
#: ../../api/scglue.models.glue.GLUETrainer.rst:12
#: ../../api/scglue.models.glue.GraphDecoder.rst:12
#: ../../api/scglue.models.glue.GraphEncoder.rst:12
#: ../../api/scglue.models.glue.Prior.rst:12
#: ../../api/scglue.models.nn.GraphAttent.rst:12
#: ../../api/scglue.models.nn.GraphConv.rst:12
#: ../../api/scglue.models.plugins.EarlyStopping.rst:12
#: ../../api/scglue.models.plugins.LRScheduler.rst:12
#: ../../api/scglue.models.plugins.Tensorboard.rst:12
#: ../../api/scglue.models.prob.MSE.rst:12
#: ../../api/scglue.models.prob.RMSE.rst:12
#: ../../api/scglue.models.prob.ZILN.rst:12
#: ../../api/scglue.models.prob.ZIN.rst:12
#: ../../api/scglue.models.prob.ZINB.rst:12
#: ../../api/scglue.models.sc.Classifier.rst:12
#: ../../api/scglue.models.sc.DataDecoder.rst:12
#: ../../api/scglue.models.sc.DataEncoder.rst:12
#: ../../api/scglue.models.sc.Discriminator.rst:12
#: ../../api/scglue.models.sc.GraphDecoder.rst:12
#: ../../api/scglue.models.sc.GraphEncoder.rst:12
#: ../../api/scglue.models.sc.IndDataDecoder.rst:12
#: ../../api/scglue.models.sc.IndNBDataDecoder.rst:12
#: ../../api/scglue.models.sc.IndNormalDataDocoder.rst:12
#: ../../api/scglue.models.sc.IndZILNDataDecoder.rst:12
#: ../../api/scglue.models.sc.IndZINBDataDecoder.rst:12
#: ../../api/scglue.models.sc.IndZINDataDecoder.rst:12
#: ../../api/scglue.models.sc.NBDataDecoder.rst:12
#: ../../api/scglue.models.sc.NBDataEncoder.rst:12
#: ../../api/scglue.models.sc.NormalDataDecoder.rst:12
#: ../../api/scglue.models.sc.Prior.rst:12
#: ../../api/scglue.models.sc.VanillaDataEncoder.rst:12
#: ../../api/scglue.models.sc.ZILNDataDecoder.rst:12
#: ../../api/scglue.models.sc.ZINBDataDecoder.rst:12
#: ../../api/scglue.models.sc.ZINDataDecoder.rst:12
#: ../../api/scglue.models.scclue.BatchedTransferrable.rst:12
#: ../../api/scglue.models.scclue.BernoulliDataDecoder.rst:12
#: ../../api/scglue.models.scclue.Classifier.rst:12
#: ../../api/scglue.models.scclue.CompositeDataEncoder.rst:12
#: ../../api/scglue.models.scclue.DataDecoder.rst:12
#: ../../api/scglue.models.scclue.Discriminator.rst:12
#: ../../api/scglue.models.scclue.ElementDataEncoder.rst:12
#: ../../api/scglue.models.scclue.MSEDataDecoder.rst:12
#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.rst:12
#: ../../api/scglue.models.scclue.NBDataDecoder.rst:12
#: ../../api/scglue.models.scclue.NormalDataDecoder.rst:12
#: ../../api/scglue.models.scclue.RMSEDataDecoder.rst:12
#: ../../api/scglue.models.scclue.SCCLUE.rst:12
#: ../../api/scglue.models.scclue.SCCLUEModel.rst:12
#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:12
#: ../../api/scglue.models.scclue.Transferrable.rst:12
#: ../../api/scglue.models.scclue.VanillaCompositeDataEncoder.rst:12
#: ../../api/scglue.models.scclue.ZILNDataDecoder.rst:12
#: ../../api/scglue.models.scclue.ZINDataDecoder.rst:12
#: ../../api/scglue.models.scglue.IndSCGLUE.rst:12
#: ../../api/scglue.models.scglue.PairedSCGLUEModel.rst:12
#: ../../api/scglue.models.scglue.PairedSCGLUETrainer.rst:12
#: ../../api/scglue.models.scglue.SCGLUE.rst:12
#: ../../api/scglue.models.scglue.SCGLUEModel.rst:12
#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:12
#: ../../api/scglue.utils.ConfigManager.rst:12
#: ../../api/scglue.utils.ConstrainedDataFrame.rst:12
#: ../../api/scglue.utils.DelayedKeyboardInterrupt.rst:12
#: ../../api/scglue.utils.LogManager.rst:12
#: ../../api/scglue.utils.SingletonMeta.rst:12
msgid "Methods"
msgstr "方法"

#: ../../api/scglue.check.Checker.rst:17:<autosummary>:1
msgid ":py:obj:`check <scglue.check.Checker.check>`"
msgstr ""

#: ../../api/scglue.check.Checker.rst:17:<autosummary>:1
#: ../../api/scglue.check.CmdChecker.rst:17:<autosummary>:1
#: ../../api/scglue.check.ModuleChecker.rst:17:<autosummary>:1 of
#: scglue.check.Checker.check:1 scglue.check.CmdChecker.check:1
#: scglue.check.ModuleChecker.check:1
msgid "Check availability and version"
msgstr ""

#: ../../api/scglue.check.Checker.check.rst:2
msgid "scglue.check.Checker.check"
msgstr ""

#: of scglue.check.Checker.check scglue.check.CmdChecker.check
#: scglue.check.ModuleChecker.check scglue.check.check_deps
#: scglue.data.aggregate_obs scglue.data.bedmap2anndata scglue.data.count_prep
#: scglue.data.estimate_balancing_weight scglue.data.extract_rank_genes_groups
#: scglue.data.get_gene_annotation scglue.data.get_metacells scglue.data.lsi
#: scglue.data.metacell_corr scglue.data.metacell_regr
#: scglue.data.transfer_labels scglue.genomics.Bed.expand
#: scglue.genomics.Bed.nucleotide_content scglue.genomics.Bed.read_bed
#: scglue.genomics.Bed.rectify scglue.genomics.Bed.strand_specific_end_site
#: scglue.genomics.Bed.strand_specific_start_site
#: scglue.genomics.Bed.to_bedtool scglue.genomics.Bed.verify
#: scglue.genomics.Bed.write_bed scglue.genomics.Gtf.read_gtf
#: scglue.genomics.Gtf.rectify scglue.genomics.Gtf.split_attribute
#: scglue.genomics.Gtf.to_bed scglue.genomics.Gtf.verify
#: scglue.genomics.cis_regulatory_ranking scglue.genomics.dist_power_decay
#: scglue.genomics.ens_trim_version scglue.genomics.get_chr_len_from_fai
#: scglue.genomics.interval_dist scglue.genomics.read_ctx_grn
#: scglue.genomics.regulatory_inference
#: scglue.genomics.rna_anchored_guidance_graph
#: scglue.genomics.rna_anchored_prior_graph scglue.genomics.window_graph
#: scglue.genomics.write_links scglue.genomics.write_scenic_feather
#: scglue.graph.check_graph scglue.graph.collapse_multigraph
#: scglue.graph.compose_multigraph scglue.graph.reachable_vertices
#: scglue.metrics.avg_silhouette_width
#: scglue.metrics.avg_silhouette_width_batch scglue.metrics.foscttm
#: scglue.metrics.graph_connectivity scglue.metrics.mean_average_precision
#: scglue.metrics.neighbor_conservation scglue.metrics.normalized_mutual_info
#: scglue.metrics.seurat_alignment_score scglue.models.base.Model.compile
#: scglue.models.base.Model.fit scglue.models.base.Model.get_losses
#: scglue.models.base.Model.save scglue.models.base.Model.upgrade
#: scglue.models.base.Trainer.fit scglue.models.base.Trainer.get_losses
#: scglue.models.base.Trainer.load_state_dict
#: scglue.models.base.Trainer.report_metrics
#: scglue.models.base.Trainer.state_dict scglue.models.base.Trainer.train_step
#: scglue.models.base.Trainer.val_step scglue.models.base.TrainingPlugin.attach
#: scglue.models.configure_dataset scglue.models.data.AnnDataset.accept_shuffle
#: scglue.models.data.AnnDataset.propose_shuffle
#: scglue.models.data.AnnDataset.random_split
#: scglue.models.data.ArrayDataset.accept_shuffle
#: scglue.models.data.ArrayDataset.propose_shuffle
#: scglue.models.data.ArrayDataset.random_split
#: scglue.models.data.Dataset.accept_shuffle scglue.models.data.Dataset.clean
#: scglue.models.data.Dataset.prepare_shuffle
#: scglue.models.data.Dataset.propose_shuffle
#: scglue.models.data.Dataset.shuffle scglue.models.data.Dataset.shuffle_worker
#: scglue.models.data.GraphDataset.accept_shuffle
#: scglue.models.data.GraphDataset.graph2triplet
#: scglue.models.data.GraphDataset.propose_shuffle
#: scglue.models.dx.integration_consistency scglue.models.fit_SCGLUE
#: scglue.models.glue.DataDecoder.forward
#: scglue.models.glue.DataEncoder.forward
#: scglue.models.glue.Discriminator.forward scglue.models.glue.GLUE.forward
#: scglue.models.glue.GLUETrainer.compute_losses
#: scglue.models.glue.GLUETrainer.fit
#: scglue.models.glue.GLUETrainer.format_data
#: scglue.models.glue.GLUETrainer.get_losses
#: scglue.models.glue.GLUETrainer.load_state_dict
#: scglue.models.glue.GLUETrainer.state_dict
#: scglue.models.glue.GLUETrainer.train_step
#: scglue.models.glue.GLUETrainer.val_step
#: scglue.models.glue.GraphDecoder.forward
#: scglue.models.glue.GraphEncoder.forward scglue.models.glue.Prior.forward
#: scglue.models.load_model scglue.models.nn.GraphAttent.forward
#: scglue.models.nn.GraphConv.forward scglue.models.nn.autodevice
#: scglue.models.nn.freeze_running_stats
#: scglue.models.nn.get_default_numpy_dtype
#: scglue.models.plugins.EarlyStopping.attach
#: scglue.models.plugins.LRScheduler.attach
#: scglue.models.plugins.Tensorboard.attach scglue.models.prob.MSE.log_prob
#: scglue.models.prob.RMSE.log_prob scglue.models.prob.ZILN.log_prob
#: scglue.models.prob.ZIN.log_prob scglue.models.prob.ZINB.log_prob
#: scglue.models.sc.DataDecoder.forward scglue.models.sc.DataEncoder.compute_l
#: scglue.models.sc.DataEncoder.forward scglue.models.sc.DataEncoder.normalize
#: scglue.models.sc.Discriminator.forward scglue.models.sc.GraphDecoder.forward
#: scglue.models.sc.GraphEncoder.forward
#: scglue.models.sc.IndDataDecoder.forward
#: scglue.models.sc.NBDataDecoder.forward
#: scglue.models.sc.NBDataEncoder.compute_l
#: scglue.models.sc.NBDataEncoder.normalize
#: scglue.models.sc.NormalDataDecoder.forward scglue.models.sc.Prior.forward
#: scglue.models.sc.VanillaDataEncoder.compute_l
#: scglue.models.sc.VanillaDataEncoder.normalize
#: scglue.models.sc.ZILNDataDecoder.forward
#: scglue.models.sc.ZINBDataDecoder.forward
#: scglue.models.sc.ZINDataDecoder.forward
#: scglue.models.scclue.BatchedTransferrable.transfer_weights_from
#: scglue.models.scclue.BernoulliDataDecoder.compute_dist
#: scglue.models.scclue.CompositeDataEncoder.compute_l
#: scglue.models.scclue.CompositeDataEncoder.forward
#: scglue.models.scclue.CompositeDataEncoder.normalize
#: scglue.models.scclue.DataDecoder.compute_dist
#: scglue.models.scclue.DataDecoder.forward
#: scglue.models.scclue.Discriminator.forward
#: scglue.models.scclue.ElementDataEncoder.forward
#: scglue.models.scclue.MSEDataDecoder.compute_dist
#: scglue.models.scclue.NBCompositeDataEncoder.compute_l
#: scglue.models.scclue.NBCompositeDataEncoder.normalize
#: scglue.models.scclue.NBDataDecoder.compute_dist
#: scglue.models.scclue.NormalDataDecoder.compute_dist
#: scglue.models.scclue.RMSEDataDecoder.compute_dist
#: scglue.models.scclue.SCCLUE.forward
#: scglue.models.scclue.SCCLUE.transfer_weights_from
#: scglue.models.scclue.SCCLUEModel.adopt_pretrained_model
#: scglue.models.scclue.SCCLUEModel.compile
#: scglue.models.scclue.SCCLUEModel.cross_predict
#: scglue.models.scclue.SCCLUEModel.encode_data
#: scglue.models.scclue.SCCLUEModel.fit
#: scglue.models.scclue.SCCLUETrainer.compute_losses
#: scglue.models.scclue.SCCLUETrainer.fit
#: scglue.models.scclue.SCCLUETrainer.format_data
#: scglue.models.scclue.SCCLUETrainer.load_state_dict
#: scglue.models.scclue.SCCLUETrainer.state_dict
#: scglue.models.scclue.SCCLUETrainer.train_step
#: scglue.models.scclue.SCCLUETrainer.val_step
#: scglue.models.scclue.Transferrable.transfer_weights_from
#: scglue.models.scclue.VanillaCompositeDataEncoder.compute_l
#: scglue.models.scclue.VanillaCompositeDataEncoder.normalize
#: scglue.models.scclue.ZILNDataDecoder.compute_dist
#: scglue.models.scclue.ZINDataDecoder.compute_dist
#: scglue.models.scclue.register_prob_model
#: scglue.models.scglue.PairedSCGLUEModel.compile
#: scglue.models.scglue.PairedSCGLUETrainer.compute_losses
#: scglue.models.scglue.PairedSCGLUETrainer.format_data
#: scglue.models.scglue.SCGLUEModel.adopt_pretrained_model
#: scglue.models.scglue.SCGLUEModel.compile
#: scglue.models.scglue.SCGLUEModel.decode_data
#: scglue.models.scglue.SCGLUEModel.encode_data
#: scglue.models.scglue.SCGLUEModel.encode_graph
#: scglue.models.scglue.SCGLUEModel.fit
#: scglue.models.scglue.SCGLUEModel.freeze_cells
#: scglue.models.scglue.SCGLUEModel.get_losses
#: scglue.models.scglue.SCGLUEModel.unfreeze_cells
#: scglue.models.scglue.SCGLUEModel.upgrade
#: scglue.models.scglue.SCGLUETrainer.compute_losses
#: scglue.models.scglue.SCGLUETrainer.format_data
#: scglue.models.scglue.SCGLUETrainer.train_step
#: scglue.models.scglue.register_prob_model scglue.num.all_counts
#: scglue.num.col_pcc scglue.num.col_spr scglue.num.col_var scglue.num.cov_mat
#: scglue.num.densify scglue.num.normalize_edges scglue.num.pcc_mat
#: scglue.num.prob_or scglue.num.prod scglue.num.sigmoid scglue.num.spr_mat
#: scglue.num.tfidf scglue.num.vertex_degrees scglue.plot.prc scglue.plot.roc
#: scglue.plot.sankey scglue.plot.set_publication_params
#: scglue.utils.ConstrainedDataFrame.rectify
#: scglue.utils.ConstrainedDataFrame.verify scglue.utils.LogManager.get_logger
#: scglue.utils.get_chained_attr scglue.utils.get_rs scglue.utils.logged
#: scglue.utils.run_command
msgid "Return type"
msgstr "返回类型"

#: ../../api/scglue.models.scclue.SCCLUE.rst:23:<autosummary>:1
#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>:1 of
#: scglue.check.Checker.check:4 scglue.check.CmdChecker.check:4
#: scglue.check.ModuleChecker.check:4 scglue.check.check_deps:6
#: scglue.data.count_prep:8 scglue.data.estimate_balancing_weight:26
#: scglue.data.get_gene_annotation:23 scglue.data.lsi:15
#: scglue.data.transfer_labels:31 scglue.genomics.Bed.verify:7
#: scglue.genomics.Bed.write_bed:9 scglue.genomics.Gtf.verify:7
#: scglue.genomics.write_links:15 scglue.genomics.write_scenic_feather:12
#: scglue.graph.check_graph:21 scglue.models.base.Model.compile:10
#: scglue.models.base.Model.fit:9 scglue.models.base.Model.save:8
#: scglue.models.base.Model.upgrade:4 scglue.models.base.Trainer.fit:17
#: scglue.models.base.Trainer.load_state_dict:7
#: scglue.models.base.Trainer.report_metrics:9
#: scglue.models.base.TrainingPlugin.attach:19
#: scglue.models.configure_dataset:31
#: scglue.models.data.AnnDataset.accept_shuffle:7
#: scglue.models.data.ArrayDataset.accept_shuffle:7
#: scglue.models.data.Dataset.accept_shuffle:7
#: scglue.models.data.Dataset.clean:4
#: scglue.models.data.Dataset.prepare_shuffle:9
#: scglue.models.data.Dataset.shuffle:4
#: scglue.models.data.Dataset.shuffle_worker:4
#: scglue.models.data.GraphDataset.accept_shuffle:7
#: scglue.models.glue.GLUETrainer.fit:34
#: scglue.models.glue.GLUETrainer.load_state_dict:7
#: scglue.models.nn.freeze_running_stats:7
#: scglue.models.plugins.EarlyStopping.attach:19
#: scglue.models.plugins.LRScheduler.attach:19
#: scglue.models.plugins.Tensorboard.attach:19
#: scglue.models.prob.MSE.log_prob:9 scglue.models.prob.RMSE.log_prob:9
#: scglue.models.scclue.BatchedTransferrable.transfer_weights_from:7
#: scglue.models.scclue.SCCLUE.transfer_weights_from:2
#: scglue.models.scclue.SCCLUEModel.adopt_pretrained_model:2
#: scglue.models.scclue.SCCLUEModel.compile:10
#: scglue.models.scclue.SCCLUEModel.fit:9
#: scglue.models.scclue.SCCLUETrainer.fit:15
#: scglue.models.scclue.SCCLUETrainer.load_state_dict:7
#: scglue.models.scclue.Transferrable.transfer_weights_from:7
#: scglue.models.scclue.register_prob_model:11
#: scglue.models.scglue.PairedSCGLUEModel.compile:27
#: scglue.models.scglue.SCGLUEModel.adopt_pretrained_model:9
#: scglue.models.scglue.SCGLUEModel.compile:22
#: scglue.models.scglue.SCGLUEModel.fit:32
#: scglue.models.scglue.SCGLUEModel.freeze_cells:4
#: scglue.models.scglue.SCGLUEModel.unfreeze_cells:4
#: scglue.models.scglue.SCGLUEModel.upgrade:4
#: scglue.models.scglue.register_prob_model:11
#: scglue.plot.set_publication_params:4
#: scglue.utils.ConstrainedDataFrame.verify:7
msgid ":py:obj:`None`"
msgstr ""

#: ../../api/scglue.check.CmdChecker.rst:2
msgid "scglue.check.CmdChecker"
msgstr ""

#: of scglue.check.CmdChecker:1 scglue.check.ModuleChecker:1
msgid "Bases: :py:class:`~scglue.check.Checker`"
msgstr ""

#: of scglue.check.CmdChecker:6
msgid "Command used to check version"
msgstr ""

#: of scglue.check.CmdChecker:8
msgid "Regular expression used to extract version from command output"
msgstr ""

#: ../../api/scglue.check.CmdChecker.rst:17:<autosummary>:1
msgid ":py:obj:`check <scglue.check.CmdChecker.check>`"
msgstr ""

#: ../../api/scglue.check.CmdChecker.check.rst:2
msgid "scglue.check.CmdChecker.check"
msgstr ""

#: ../../api/scglue.check.ModuleChecker.rst:2
msgid "scglue.check.ModuleChecker"
msgstr ""

#: ../../api/scglue.check.ModuleChecker.rst:17:<autosummary>:1
msgid ":py:obj:`check <scglue.check.ModuleChecker.check>`"
msgstr ""

#: ../../api/scglue.check.ModuleChecker.check.rst:2
msgid "scglue.check.ModuleChecker.check"
msgstr ""

#: ../../api/scglue.check.check_deps.rst:2
msgid "scglue.check.check\\_deps"
msgstr ""

#: of scglue.check.check_deps:3
msgid "A list of dependencies to check"
msgstr ""

#: ../../api/scglue.data.rst:2
msgid "scglue.data"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ":py:obj:`aggregate_obs <scglue.data.aggregate_obs>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of scglue.data.aggregate_obs:1
msgid "Aggregate obs in a given dataset by certain categories"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ":py:obj:`bedmap2anndata <scglue.data.bedmap2anndata>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of scglue.data.bedmap2anndata:1
msgid "Convert bedmap result to :class:`anndata.AnnData` object"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ":py:obj:`count_prep <scglue.data.count_prep>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of scglue.data.count_prep:1
msgid ""
"Standard preprocessing of count-based dataset with total count "
"normalization and log-transformation"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ""
":py:obj:`estimate_balancing_weight "
"<scglue.data.estimate_balancing_weight>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of
#: scglue.data.estimate_balancing_weight:1
msgid "Estimate balancing weights in an unsupervised manner"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ""
":py:obj:`extract_rank_genes_groups "
"<scglue.data.extract_rank_genes_groups>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of
#: scglue.data.extract_rank_genes_groups:1
msgid ""
"Extract result of :func:`scanpy.tl.rank_genes_groups` in the form of "
"marker gene data frame for specific cell groups"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ":py:obj:`get_gene_annotation <scglue.data.get_gene_annotation>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of
#: scglue.data.get_gene_annotation:1
msgid "Get genomic annotation of genes by joining with a GTF file."
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ":py:obj:`get_metacells <scglue.data.get_metacells>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of scglue.data.get_metacells:1
msgid "Aggregate datasets into metacells"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ":py:obj:`lsi <scglue.data.lsi>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of scglue.data.lsi:1
msgid "LSI analysis (following the Seurat v3 approach)"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ":py:obj:`metacell_corr <scglue.data.metacell_corr>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of scglue.data.metacell_corr:1
msgid "Metacell based correlation"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ":py:obj:`metacell_regr <scglue.data.metacell_regr>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of scglue.data.metacell_regr:1
msgid "Metacell-based regression"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1
msgid ":py:obj:`transfer_labels <scglue.data.transfer_labels>`"
msgstr ""

#: ../../api/scglue.data.rst:28:<autosummary>:1 of
#: scglue.data.transfer_labels:1
msgid "Transfer discrete labels from reference dataset to query dataset"
msgstr ""

#: ../../api/scglue.data.aggregate_obs.rst:2
msgid "scglue.data.aggregate\\_obs"
msgstr ""

#: of scglue.data.aggregate_obs:4
msgid "Dataset to be aggregated"
msgstr ""

#: of scglue.data.aggregate_obs:6
msgid "Specify a column in ``adata.obs`` used for aggregation, must be discrete."
msgstr ""

#: of scglue.data.aggregate_obs:9
msgid ""
"Aggregation function for ``adata.X``, must be one of ``{\"sum\", "
"\"mean\", ``None``}``. Setting to ``None`` discards the ``adata.X`` "
"matrix."
msgstr ""

#: of scglue.data.aggregate_obs:13
msgid ""
"Aggregation methods for ``adata.obs``, indexed by obs columns, must be "
"one of ``{\"sum\", \"mean\", \"majority\"}``, where ``\"sum\"`` and "
"``\"mean\"`` are for continuous data, and ``\"majority\"`` is for "
"discrete data. Fields not specified will be discarded."
msgstr ""

#: of scglue.data.aggregate_obs:18
msgid ""
"Aggregation methods for ``adata.obsm``, indexed by obsm keys, must be one"
" of ``{\"sum\", \"mean\"}``. Fields not specified will be discarded."
msgstr ""

#: of scglue.data.aggregate_obs:22
msgid ""
"Aggregation methods for ``adata.layers``, indexed by layer keys, must be "
"one of ``{\"sum\", \"mean\"}``. Fields not specified will be discarded."
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>:1 of
#: scglue.data.aggregate_obs:26 scglue.data.bedmap2anndata:10
#: scglue.models.scclue.SCCLUEModel.cross_predict:2
msgid ":py:class:`~anndata.AnnData`"
msgstr ""

#: of scglue.data.aggregate_obs scglue.data.bedmap2anndata
#: scglue.data.extract_rank_genes_groups scglue.data.get_metacells
#: scglue.data.metacell_corr scglue.data.metacell_regr
#: scglue.genomics.Bed.expand scglue.genomics.Bed.nucleotide_content
#: scglue.genomics.Bed.read_bed scglue.genomics.Bed.rectify
#: scglue.genomics.Bed.strand_specific_end_site
#: scglue.genomics.Bed.strand_specific_start_site
#: scglue.genomics.Bed.to_bedtool scglue.genomics.Gtf.read_gtf
#: scglue.genomics.Gtf.rectify scglue.genomics.Gtf.split_attribute
#: scglue.genomics.Gtf.to_bed scglue.genomics.cis_regulatory_ranking
#: scglue.genomics.dist_power_decay scglue.genomics.ens_trim_version
#: scglue.genomics.get_chr_len_from_fai scglue.genomics.interval_dist
#: scglue.genomics.read_ctx_grn scglue.genomics.regulatory_inference
#: scglue.genomics.rna_anchored_guidance_graph scglue.genomics.window_graph
#: scglue.graph.collapse_multigraph scglue.graph.compose_multigraph
#: scglue.graph.reachable_vertices scglue.metrics.avg_silhouette_width
#: scglue.metrics.avg_silhouette_width_batch scglue.metrics.foscttm
#: scglue.metrics.graph_connectivity scglue.metrics.mean_average_precision
#: scglue.metrics.neighbor_conservation scglue.metrics.normalized_mutual_info
#: scglue.metrics.seurat_alignment_score scglue.models.base.Model.get_losses
#: scglue.models.base.Trainer.get_losses scglue.models.base.Trainer.state_dict
#: scglue.models.base.Trainer.train_step scglue.models.base.Trainer.val_step
#: scglue.models.data.AnnDataset.propose_shuffle
#: scglue.models.data.AnnDataset.random_split
#: scglue.models.data.ArrayDataset.propose_shuffle
#: scglue.models.data.ArrayDataset.random_split
#: scglue.models.data.Dataset.propose_shuffle
#: scglue.models.data.GraphDataset.graph2triplet
#: scglue.models.data.GraphDataset.propose_shuffle
#: scglue.models.dx.integration_consistency scglue.models.fit_SCGLUE
#: scglue.models.glue.DataDecoder.forward
#: scglue.models.glue.DataEncoder.forward
#: scglue.models.glue.Discriminator.forward
#: scglue.models.glue.GLUETrainer.compute_losses
#: scglue.models.glue.GLUETrainer.get_losses
#: scglue.models.glue.GLUETrainer.state_dict
#: scglue.models.glue.GLUETrainer.train_step
#: scglue.models.glue.GLUETrainer.val_step
#: scglue.models.glue.GraphDecoder.forward
#: scglue.models.glue.GraphEncoder.forward scglue.models.glue.Prior.forward
#: scglue.models.load_model scglue.models.nn.GraphAttent.forward
#: scglue.models.nn.GraphConv.forward scglue.models.nn.autodevice
#: scglue.models.nn.get_default_numpy_dtype
#: scglue.models.sc.DataDecoder.forward scglue.models.sc.DataEncoder.compute_l
#: scglue.models.sc.DataEncoder.forward scglue.models.sc.DataEncoder.normalize
#: scglue.models.sc.Discriminator.forward scglue.models.sc.GraphDecoder.forward
#: scglue.models.sc.GraphEncoder.forward
#: scglue.models.sc.IndDataDecoder.forward
#: scglue.models.sc.NBDataDecoder.forward
#: scglue.models.sc.NBDataEncoder.compute_l
#: scglue.models.sc.NBDataEncoder.normalize
#: scglue.models.sc.NormalDataDecoder.forward scglue.models.sc.Prior.forward
#: scglue.models.sc.VanillaDataEncoder.compute_l
#: scglue.models.sc.VanillaDataEncoder.normalize
#: scglue.models.sc.ZILNDataDecoder.forward
#: scglue.models.sc.ZINBDataDecoder.forward
#: scglue.models.sc.ZINDataDecoder.forward
#: scglue.models.scclue.SCCLUEModel.encode_data
#: scglue.models.scclue.SCCLUETrainer.state_dict
#: scglue.models.scclue.SCCLUETrainer.train_step
#: scglue.models.scclue.SCCLUETrainer.val_step
#: scglue.models.scglue.PairedSCGLUETrainer.compute_losses
#: scglue.models.scglue.SCGLUEModel.decode_data
#: scglue.models.scglue.SCGLUEModel.encode_data
#: scglue.models.scglue.SCGLUEModel.encode_graph
#: scglue.models.scglue.SCGLUEModel.get_losses
#: scglue.models.scglue.SCGLUETrainer.compute_losses
#: scglue.models.scglue.SCGLUETrainer.train_step scglue.num.all_counts
#: scglue.num.col_pcc scglue.num.col_spr scglue.num.col_var scglue.num.cov_mat
#: scglue.num.densify scglue.num.normalize_edges scglue.num.pcc_mat
#: scglue.num.prob_or scglue.num.prod scglue.num.sigmoid scglue.num.spr_mat
#: scglue.num.tfidf scglue.num.vertex_degrees scglue.plot.prc scglue.plot.roc
#: scglue.plot.sankey scglue.utils.ConstrainedDataFrame.rectify
#: scglue.utils.get_chained_attr scglue.utils.get_rs scglue.utils.run_command
msgid "Returns"
msgstr "返回"

#: of scglue.data.aggregate_obs:27
msgid "*aggregated* -- Aggregated dataset"
msgstr ""

#: ../../api/scglue.data.bedmap2anndata.rst:2
msgid "scglue.data.bedmap2anndata"
msgstr ""

#: of scglue.data.bedmap2anndata:4
msgid "Path to bedmap result"
msgstr ""

#: of scglue.data.bedmap2anndata:6
msgid "Variable column (0-based)"
msgstr ""

#: of scglue.data.bedmap2anndata:8
msgid "Observation column (0-based)"
msgstr ""

#: of scglue.data.bedmap2anndata:11
msgid "*adata* -- Converted :class:`anndata.AnnData` object"
msgstr ""

#: of scglue.data.bedmap2anndata:15
msgid ""
"Similar to ``rliger::makeFeatureMatrix``, but more automated and memory "
"efficient."
msgstr ""

#: ../../api/scglue.data.count_prep.rst:2
msgid "scglue.data.count\\_prep"
msgstr ""

#: of scglue.data.count_prep:5
msgid "Dataset to be preprocessed"
msgstr ""

#: ../../api/scglue.data.estimate_balancing_weight.rst:2
msgid "scglue.data.estimate\\_balancing\\_weight"
msgstr ""

#: of scglue.data.estimate_balancing_weight:3
msgid "Datasets to be balanced"
msgstr ""

#: of scglue.data.estimate_balancing_weight:5
msgid "Data representation based on which to match clusters"
msgstr ""

#: of scglue.data.estimate_balancing_weight:7
msgid ""
"Estimate balancing per batch (batch keys and categories must match across"
" all datasets)"
msgstr ""

#: of scglue.data.estimate_balancing_weight:10
msgid "Leiden clustering resolution"
msgstr ""

#: of scglue.data.estimate_balancing_weight:12
msgid "Cosine similarity cutoff"
msgstr ""

#: of scglue.data.estimate_balancing_weight:14
msgid "Cosine similarity power (for increasing contrast)"
msgstr ""

#: of scglue.data.estimate_balancing_weight:16
msgid "New ``obs`` key added for the balancing weight"
msgstr ""

#: of scglue.data.estimate_balancing_weight:20
msgid ""
"While the joint similarity array would have a size of :math:`K^n` (where "
":math:`K` is the average number of clusters per dataset, and :math:`n` is"
" the number of datasets), a sparse implementation was used, so the "
"scalability regarding dataset number should be good."
msgstr ""

#: ../../api/scglue.data.extract_rank_genes_groups.rst:2
msgid "scglue.data.extract\\_rank\\_genes\\_groups"
msgstr ""

#: of scglue.data.extract_rank_genes_groups:5 scglue.data.get_gene_annotation:4
#: scglue.data.lsi:4 scglue.models.scclue.SCCLUEModel.encode_data:6
#: scglue.models.scglue.SCGLUEModel.encode_data:6
msgid "Input dataset"
msgstr ""

#: of scglue.data.extract_rank_genes_groups:7
msgid ""
"Target groups for which markers should be extracted, by default extract "
"all groups."
msgstr ""

#: of scglue.data.extract_rank_genes_groups:10
msgid "Marker filtering criteria (passed to :meth:`pandas.DataFrame.query`)"
msgstr ""

#: of scglue.data.extract_rank_genes_groups:12
msgid "Column used for sorting markers"
msgstr ""

#: of scglue.data.extract_rank_genes_groups:14
msgid "Whether to sort in ascending order"
msgstr ""

#: of scglue.data.extract_rank_genes_groups:16
#: scglue.genomics.Bed.nucleotide_content:6 scglue.genomics.Bed.rectify:6
#: scglue.genomics.Gtf.rectify:6 scglue.genomics.cis_regulatory_ranking:22
#: scglue.models.dx.integration_consistency:13
#: scglue.utils.ConstrainedDataFrame.rectify:6
msgid ":py:class:`~pandas.DataFrame`"
msgstr ""

#: of scglue.data.extract_rank_genes_groups:17
msgid "*marker_df* -- Extracted marker data frame"
msgstr ""

#: of scglue.data.extract_rank_genes_groups:21
msgid ""
"Markers shared by multiple groups will be assign to the group with "
"highest score."
msgstr ""

#: ../../api/scglue.data.get_gene_annotation.rst:2
msgid "scglue.data.get\\_gene\\_annotation"
msgstr ""

#: of scglue.data.get_gene_annotation:6
msgid ""
"Specify a column in ``adata.var`` used to merge with GTF attributes, "
"otherwise ``adata.var_names`` is used by default."
msgstr ""

#: of scglue.data.get_gene_annotation:9
msgid "Path to the GTF file"
msgstr ""

#: of scglue.data.get_gene_annotation:11
msgid ""
"Specify a field in the GTF attributes used to merge with ``adata.var``, "
"e.g. \"gene_id\", \"gene_name\"."
msgstr ""

#: of scglue.data.get_gene_annotation:14
msgid ""
"Specify an element-wise function used to transform merging fields, e.g. "
"removing suffix in gene IDs."
msgstr ""

#: of scglue.data.get_gene_annotation:19
msgid ""
"The genomic locations are converted to 0-based as specified in bed format"
" rather than 1-based as specified in GTF format."
msgstr ""

#: ../../api/scglue.data.get_metacells.rst:2
msgid "scglue.data.get\\_metacells"
msgstr ""

#: of scglue.data.get_metacells:3 scglue.data.metacell_corr:3
msgid "Datasets to be correlated"
msgstr ""

#: of scglue.data.get_metacells:5 scglue.data.metacell_regr:6
msgid "Data representation based on which to cluster meta-cells"
msgstr ""

#: of scglue.data.get_metacells:7 scglue.data.metacell_regr:8
msgid "Number of metacells to use"
msgstr ""

#: of scglue.data.get_metacells:9
msgid "Whether to return only metacells common to all datasets"
msgstr ""

#: of scglue.data.get_metacells:11
msgid "Random seed for k-Means clustering"
msgstr ""

#: of scglue.data.get_metacells:13
msgid "Keyword arguments per dataset passed to :func:`aggregate_obs`"
msgstr ""

#: of scglue.data.get_metacells:15
msgid ":py:class:`typing.List`\\[:py:class:`~anndata.AnnData`]"
msgstr ""

#: of scglue.data.get_metacells:16
msgid "*adatas* -- A list of AnnData objects containing the metacells"
msgstr ""

#: of scglue.data.get_metacells:20
msgid ""
"When a single dataset is provided, the metacells are clustered with the "
"dataset itself. When multiple datasets are provided, the metacells are "
"clustered jointly with all datasets."
msgstr ""

#: ../../api/scglue.data.lsi.rst:2
msgid "scglue.data.lsi"
msgstr ""

#: of scglue.data.lsi:6
msgid "Number of dimensions to use"
msgstr ""

#: of scglue.data.lsi:8
msgid ""
"Whether to use highly variable features only, stored in "
"``adata.var['highly_variable']``. By default uses them if they have been "
"determined beforehand."
msgstr ""

#: of scglue.data.lsi:11
msgid ""
"Additional keyword arguments are passed to "
":func:`sklearn.utils.extmath.randomized_svd`"
msgstr ""

#: ../../api/scglue.data.metacell_corr.rst:2
msgid "scglue.data.metacell\\_corr"
msgstr ""

#: of scglue.data.metacell_corr:5 scglue.data.metacell_regr:10
msgid "Skeleton graph determining which pair of features to correlate"
msgstr ""

#: of scglue.data.metacell_corr:7
msgid "Correlation method, must be one of {\"pcc\", \"spr\"}"
msgstr ""

#: of scglue.data.metacell_corr:9
msgid ""
"Aggregation functions used to obtain metacells for each dataset, must be "
"one of {\"sum\", \"mean\"}"
msgstr ""

#: of scglue.data.metacell_corr:12
msgid ""
"Preprocessing functions to be applied to metacells for each dataset, "
"``None`` indicates no preprocessing"
msgstr ""

#: of scglue.data.metacell_corr:14
msgid "Additional keyword arguments are passed to :func:`get_metacells`"
msgstr ""

#: of scglue.data.metacell_corr:16 scglue.genomics.regulatory_inference:14
#: scglue.graph.collapse_multigraph:10
msgid ":py:class:`~networkx.Graph`"
msgstr ""

#: of scglue.data.metacell_corr:17
msgid ""
"*corr* -- A skeleton-based graph containing correlation as edge attribute"
" \"corr\""
msgstr ""

#: of scglue.data.metacell_corr:20
msgid "All aggregation, preprocessing and correlation apply to ``adata.X``."
msgstr ""

#: ../../api/scglue.data.metacell_regr.rst:2
msgid "scglue.data.metacell\\_regr"
msgstr ""

#: of scglue.data.metacell_regr:3
msgid ""
"Datasets to be correlated, where ``.X`` are raw counts (indexed by "
"modality name)"
msgstr ""

#: of scglue.data.metacell_regr:12
msgid ""
"Regression model (should be a class name under "
":mod:`sklearn.linear_model`)"
msgstr ""

#: of scglue.data.metacell_regr:14
msgid "Additional keyword arguments are passed to the regression model"
msgstr ""

#: of scglue.data.metacell_regr:16 scglue.genomics.read_ctx_grn:6
msgid ":py:class:`~networkx.DiGraph`"
msgstr ""

#: of scglue.data.metacell_regr:17
msgid ""
"*regr* -- A skeleton-based graph containing regression weights as edge "
"attribute \"regr\""
msgstr ""

#: ../../api/scglue.data.transfer_labels.rst:2
msgid "scglue.data.transfer\\_labels"
msgstr ""

#: of scglue.data.transfer_labels:4
msgid "Reference dataset"
msgstr ""

#: of scglue.data.transfer_labels:6
msgid "Query dataset"
msgstr ""

#: of scglue.data.transfer_labels:8
msgid "Field to be transferred in ``ref.obs`` (must be discrete)"
msgstr ""

#: of scglue.data.transfer_labels:10
msgid "Number of nearest neighbors used for label transfer"
msgstr ""

#: of scglue.data.transfer_labels:12
msgid ""
"Data representation based on which to find nearest neighbors, by default "
"uses ``{ref, query}.X``."
msgstr ""

#: of scglue.data.transfer_labels:15
msgid ""
"New ``query.obs`` key added for the transfered labels, by default the "
"same as ``field``."
msgstr ""

#: of scglue.data.transfer_labels:17 scglue.metrics.mean_average_precision:9
#: scglue.metrics.neighbor_conservation:8
#: scglue.metrics.seurat_alignment_score:13
msgid ""
"Additional keyword arguments are passed to "
":class:`sklearn.neighbors.NearestNeighbors`"
msgstr ""

#: of scglue.data.transfer_labels:22
msgid ""
"First, nearest neighbors between reference and query cells are searched "
"and weighted by Jaccard index of SNN (shared nearest neighbors). The "
"Jaccard indices are then normalized per query cell to form a mapping "
"matrix. To obtain predictions for query cells, we multiply the above "
"mapping matrix to the one-hot matrix of reference labels. The category "
"with the highest score is taken as the final prediction, while its score "
"is interpreted as transfer confidence (stored as "
"\"{key_added}_confidence\" in ``query.obs``)."
msgstr ""

#: ../../api/scglue.genomics.rst:2
msgid "scglue.genomics"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`cis_regulatory_ranking <scglue.genomics.cis_regulatory_ranking>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.cis_regulatory_ranking:1
msgid "Generate cis-regulatory ranking between genes and transcription factors"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`dist_power_decay <scglue.genomics.dist_power_decay>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.dist_power_decay:1
msgid ""
"Distance-based power decay weight, computed as :math:`w = {\\left( \\frac"
" {d + 1000} {1000} \\right)} ^ {-0.75}`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`ens_trim_version <scglue.genomics.ens_trim_version>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.ens_trim_version:1
msgid "Trim version suffix from Ensembl ID"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`get_chr_len_from_fai <scglue.genomics.get_chr_len_from_fai>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.get_chr_len_from_fai:1
msgid "Get chromosome length information from fasta index file"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`interval_dist <scglue.genomics.interval_dist>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.interval_dist:1
msgid "Compute distance and relative position between two bed intervals"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`read_bed <scglue.genomics.read_bed>`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.Bed.read_bed:1
msgid "Read BED file"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`read_ctx_grn <scglue.genomics.read_ctx_grn>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.read_ctx_grn:1
msgid "Read pruned TF-target GRN as generated by ``pyscenic ctx``"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`read_gtf <scglue.genomics.read_gtf>`"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rst:26:<autosummary>:1
#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.Gtf.read_gtf:1
msgid "Read GTF file"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`regulatory_inference <scglue.genomics.regulatory_inference>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.regulatory_inference:1
msgid "Regulatory inference based on feature embeddings"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ""
":py:obj:`rna_anchored_guidance_graph "
"<scglue.genomics.rna_anchored_guidance_graph>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.rna_anchored_guidance_graph:1
msgid "Build guidance graph anchored on RNA genes"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ""
":py:obj:`rna_anchored_prior_graph "
"<scglue.genomics.rna_anchored_prior_graph>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.rna_anchored_prior_graph:1
msgid "Deprecated, please use :func:`rna_anchored_guidance_graph` instead"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`window_graph <scglue.genomics.window_graph>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.window_graph:1
msgid ""
"Construct a window graph between two sets of genomic features, where "
"features pairs within a window size are connected."
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`write_links <scglue.genomics.write_links>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.write_links:1
msgid "Export regulatory graph into a links file"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1
msgid ":py:obj:`write_scenic_feather <scglue.genomics.write_scenic_feather>`"
msgstr ""

#: ../../api/scglue.genomics.rst:36:<autosummary>:1 of
#: scglue.genomics.write_scenic_feather:1
msgid "Write cis-regulatory ranking to a SCENIC-compatible feather file"
msgstr ""

#: ../../api/scglue.genomics.rst:45:<autosummary>:1
msgid ":py:obj:`Bed <scglue.genomics.Bed>`"
msgstr ""

#: ../../api/scglue.genomics.rst:45:<autosummary>:1 of scglue.genomics.Bed:1
msgid "BED format data frame"
msgstr ""

#: ../../api/scglue.genomics.rst:45:<autosummary>:1
msgid ":py:obj:`Gtf <scglue.genomics.Gtf>`"
msgstr ""

#: ../../api/scglue.genomics.rst:45:<autosummary>:1 of scglue.genomics.Gtf:1
msgid "GTF format data frame"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:2
msgid "scglue.genomics.Bed"
msgstr ""

#: of scglue.genomics.Bed:1 scglue.genomics.Gtf:1
msgid "Bases: :py:class:`~scglue.utils.ConstrainedDataFrame`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
msgid ":py:obj:`expand <scglue.genomics.Bed.expand>`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1 of
#: scglue.genomics.Bed.expand:1
msgid "Expand genomic features towards upstream and downstream"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
msgid ":py:obj:`nucleotide_content <scglue.genomics.Bed.nucleotide_content>`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1 of
#: scglue.genomics.Bed.nucleotide_content:1
msgid "Compute nucleotide content in the BED regions"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
msgid ":py:obj:`read_bed <scglue.genomics.Bed.read_bed>`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
msgid ":py:obj:`rectify <scglue.genomics.Bed.rectify>`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
#: ../../api/scglue.genomics.Gtf.rst:26:<autosummary>:1
#: ../../api/scglue.utils.ConstrainedDataFrame.rst:23:<autosummary>:1 of
#: scglue.genomics.Bed.rectify:1 scglue.genomics.Gtf.rectify:1
#: scglue.utils.ConstrainedDataFrame.rectify:1
msgid "Rectify data frame for format integrity"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
msgid ""
":py:obj:`strand_specific_end_site "
"<scglue.genomics.Bed.strand_specific_end_site>`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1 of
#: scglue.genomics.Bed.strand_specific_end_site:1
msgid "Convert to strand-specific end sites of genomic features"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
msgid ""
":py:obj:`strand_specific_start_site "
"<scglue.genomics.Bed.strand_specific_start_site>`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1 of
#: scglue.genomics.Bed.strand_specific_start_site:1
msgid "Convert to strand-specific start sites of genomic features"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
msgid ":py:obj:`to_bedtool <scglue.genomics.Bed.to_bedtool>`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1 of
#: scglue.genomics.Bed.to_bedtool:1
msgid "Convert to a :class:`pybedtools.BedTool` object"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
msgid ":py:obj:`verify <scglue.genomics.Bed.verify>`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
#: ../../api/scglue.genomics.Gtf.rst:26:<autosummary>:1
#: ../../api/scglue.utils.ConstrainedDataFrame.rst:23:<autosummary>:1 of
#: scglue.genomics.Bed.verify:1 scglue.genomics.Gtf.verify:1
#: scglue.utils.ConstrainedDataFrame.verify:1
msgid "Verify data frame for format integrity"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1
msgid ":py:obj:`write_bed <scglue.genomics.Bed.write_bed>`"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:30:<autosummary>:1 of
#: scglue.genomics.Bed.write_bed:1
msgid "Write BED file"
msgstr ""

#: ../../api/scglue.genomics.Bed.rst:32 ../../api/scglue.genomics.Gtf.rst:28
#: ../../api/scglue.models.base.Model.rst:28
#: ../../api/scglue.models.base.Trainer.rst:30
#: ../../api/scglue.models.base.TrainingPlugin.rst:24
#: ../../api/scglue.models.data.AnnDataset.rst:26
#: ../../api/scglue.models.data.ArrayDataset.rst:26
#: ../../api/scglue.models.data.DataLoader.rst:23
#: ../../api/scglue.models.data.Dataset.rst:29
#: ../../api/scglue.models.data.GraphDataset.rst:26
#: ../../api/scglue.models.glue.DataDecoder.rst:24
#: ../../api/scglue.models.glue.DataEncoder.rst:24
#: ../../api/scglue.models.glue.Discriminator.rst:24
#: ../../api/scglue.models.glue.GLUE.rst:24
#: ../../api/scglue.models.glue.GLUETrainer.rst:31
#: ../../api/scglue.models.glue.GraphDecoder.rst:24
#: ../../api/scglue.models.glue.GraphEncoder.rst:24
#: ../../api/scglue.models.glue.Prior.rst:24
#: ../../api/scglue.models.nn.GraphAttent.rst:24
#: ../../api/scglue.models.nn.GraphConv.rst:24
#: ../../api/scglue.models.plugins.EarlyStopping.rst:24
#: ../../api/scglue.models.plugins.LRScheduler.rst:24
#: ../../api/scglue.models.plugins.Tensorboard.rst:24
#: ../../api/scglue.models.prob.MSE.rst:24
#: ../../api/scglue.models.prob.RMSE.rst:24
#: ../../api/scglue.models.prob.ZILN.rst:24
#: ../../api/scglue.models.prob.ZIN.rst:24
#: ../../api/scglue.models.prob.ZINB.rst:24
#: ../../api/scglue.models.sc.Classifier.rst:23
#: ../../api/scglue.models.sc.DataDecoder.rst:24
#: ../../api/scglue.models.sc.DataEncoder.rst:26
#: ../../api/scglue.models.sc.Discriminator.rst:24
#: ../../api/scglue.models.sc.GraphDecoder.rst:24
#: ../../api/scglue.models.sc.GraphEncoder.rst:24
#: ../../api/scglue.models.sc.IndDataDecoder.rst:24
#: ../../api/scglue.models.sc.IndNBDataDecoder.rst:23
#: ../../api/scglue.models.sc.IndNormalDataDocoder.rst:23
#: ../../api/scglue.models.sc.IndZILNDataDecoder.rst:23
#: ../../api/scglue.models.sc.IndZINBDataDecoder.rst:23
#: ../../api/scglue.models.sc.IndZINDataDecoder.rst:23
#: ../../api/scglue.models.sc.NBDataDecoder.rst:24
#: ../../api/scglue.models.sc.NBDataEncoder.rst:25
#: ../../api/scglue.models.sc.NormalDataDecoder.rst:24
#: ../../api/scglue.models.sc.Prior.rst:24
#: ../../api/scglue.models.sc.VanillaDataEncoder.rst:25
#: ../../api/scglue.models.sc.ZILNDataDecoder.rst:24
#: ../../api/scglue.models.sc.ZINBDataDecoder.rst:24
#: ../../api/scglue.models.sc.ZINDataDecoder.rst:24
#: ../../api/scglue.models.scclue.BatchedTransferrable.rst:24
#: ../../api/scglue.models.scclue.BernoulliDataDecoder.rst:24
#: ../../api/scglue.models.scclue.Classifier.rst:23
#: ../../api/scglue.models.scclue.CompositeDataEncoder.rst:26
#: ../../api/scglue.models.scclue.DataDecoder.rst:25
#: ../../api/scglue.models.scclue.Discriminator.rst:24
#: ../../api/scglue.models.scclue.ElementDataEncoder.rst:24
#: ../../api/scglue.models.scclue.MSEDataDecoder.rst:24
#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.rst:25
#: ../../api/scglue.models.scclue.NBDataDecoder.rst:24
#: ../../api/scglue.models.scclue.NormalDataDecoder.rst:24
#: ../../api/scglue.models.scclue.RMSEDataDecoder.rst:24
#: ../../api/scglue.models.scclue.SCCLUE.rst:25
#: ../../api/scglue.models.scclue.SCCLUEModel.rst:28
#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:30
#: ../../api/scglue.models.scclue.Transferrable.rst:24
#: ../../api/scglue.models.scclue.VanillaCompositeDataEncoder.rst:25
#: ../../api/scglue.models.scclue.ZILNDataDecoder.rst:24
#: ../../api/scglue.models.scclue.ZINDataDecoder.rst:24
#: ../../api/scglue.models.scglue.IndSCGLUE.rst:23
#: ../../api/scglue.models.scglue.PairedSCGLUEModel.rst:24
#: ../../api/scglue.models.scglue.PairedSCGLUETrainer.rst:25
#: ../../api/scglue.models.scglue.SCGLUE.rst:23
#: ../../api/scglue.models.scglue.SCGLUEModel.rst:33
#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:26
#: ../../api/scglue.utils.ConfigManager.rst:23
#: ../../api/scglue.utils.ConstrainedDataFrame.rst:25
#: ../../api/scglue.utils.DelayedKeyboardInterrupt.rst:23
#: ../../api/scglue.utils.LogManager.rst:24
msgid "Attributes"
msgstr "属性"

#: ../../api/scglue.genomics.Bed.rst:35:<autosummary>:1
msgid ":py:obj:`COLUMNS <scglue.genomics.Bed.COLUMNS>`\\"
msgstr ""

#: ../../api/scglue.genomics.Bed.expand.rst:2
msgid "scglue.genomics.Bed.expand"
msgstr ""

#: of scglue.genomics.Bed.expand:4
msgid "Number of bps to expand in the upstream direction"
msgstr ""

#: of scglue.genomics.Bed.expand:6
msgid "Number of bps to expand in the downstream direction"
msgstr ""

#: of scglue.genomics.Bed.expand:8
msgid "Length of each chromosome"
msgstr ""

#: of scglue.genomics.Bed.expand:10 scglue.genomics.Bed.read_bed:6
#: scglue.genomics.Bed.strand_specific_end_site:3
#: scglue.genomics.Bed.strand_specific_start_site:3
#: scglue.genomics.Gtf.to_bed:7
msgid ":py:class:`scglue.genomics.Bed`"
msgstr ""

#: of scglue.genomics.Bed.expand:11
msgid ""
"*expanded_bed* -- A new :class:`Bed` object, containing expanded features"
" of the current :class:`Bed` object"
msgstr ""

#: of scglue.genomics.Bed.expand:16
msgid ""
"Starting position < 0 after expansion is always trimmed. Ending position "
"exceeding chromosome length is trimed only if ``chr_len`` is specified."
msgstr ""

#: ../../api/scglue.genomics.Bed.nucleotide_content.rst:2
msgid "scglue.genomics.Bed.nucleotide\\_content"
msgstr ""

#: of scglue.genomics.Bed.nucleotide_content:4
msgid "Genomic sequence file in FASTA format"
msgstr ""

#: of scglue.genomics.Bed.nucleotide_content:7
msgid ""
"*nucleotide_stat* -- Data frame containing nucleotide content statistics "
"for each region"
msgstr ""

#: ../../api/scglue.genomics.Bed.read_bed.rst:2
msgid "scglue.genomics.Bed.read\\_bed"
msgstr ""

#: of scglue.genomics.Bed.read_bed:4 scglue.genomics.Bed.write_bed:4
msgid "BED file"
msgstr ""

#: of scglue.genomics.Bed.read_bed:7
msgid "*bed* -- Loaded :class:`Bed` object"
msgstr ""

#: ../../api/scglue.genomics.Bed.rectify.rst:2
msgid "scglue.genomics.Bed.rectify"
msgstr ""

#: of scglue.genomics.Bed.rectify:4 scglue.genomics.Gtf.rectify:4
#: scglue.utils.ConstrainedDataFrame.rectify:4
msgid "Data frame to be rectified"
msgstr ""

#: of scglue.genomics.Bed.rectify:7 scglue.genomics.Gtf.rectify:7
#: scglue.utils.ConstrainedDataFrame.rectify:7
msgid "*rectified_df* -- Rectified data frame"
msgstr ""

#: ../../api/scglue.genomics.Bed.strand_specific_end_site.rst:2
msgid "scglue.genomics.Bed.strand\\_specific\\_end\\_site"
msgstr ""

#: of scglue.genomics.Bed.strand_specific_end_site:4
msgid ""
"*end_site_bed* -- A new :class:`Bed` object, containing strand-specific "
"end sites of the current :class:`Bed` object"
msgstr ""

#: ../../api/scglue.genomics.Bed.strand_specific_start_site.rst:2
msgid "scglue.genomics.Bed.strand\\_specific\\_start\\_site"
msgstr ""

#: of scglue.genomics.Bed.strand_specific_start_site:4
msgid ""
"*start_site_bed* -- A new :class:`Bed` object, containing strand-specific"
" start sites of the current :class:`Bed` object"
msgstr ""

#: ../../api/scglue.genomics.Bed.to_bedtool.rst:2
msgid "scglue.genomics.Bed.to\\_bedtool"
msgstr ""

#: of scglue.genomics.Bed.to_bedtool:3
msgid ":py:class:`pybedtools.bedtool.BedTool`"
msgstr ""

#: of scglue.genomics.Bed.to_bedtool:4
msgid "*bedtool* -- Converted :class:`pybedtools.BedTool` object"
msgstr ""

#: ../../api/scglue.genomics.Bed.verify.rst:2
msgid "scglue.genomics.Bed.verify"
msgstr ""

#: of scglue.genomics.Bed.verify:4 scglue.genomics.Gtf.verify:4
#: scglue.utils.ConstrainedDataFrame.verify:4
msgid "Data frame to be verified"
msgstr ""

#: ../../api/scglue.genomics.Bed.write_bed.rst:2
msgid "scglue.genomics.Bed.write\\_bed"
msgstr ""

#: of scglue.genomics.Bed.write_bed:6
msgid "Number of columns to write (by default write all columns)"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rst:2
msgid "scglue.genomics.Gtf"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rst:26:<autosummary>:1
msgid ":py:obj:`read_gtf <scglue.genomics.Gtf.read_gtf>`"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rst:26:<autosummary>:1
msgid ":py:obj:`rectify <scglue.genomics.Gtf.rectify>`"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rst:26:<autosummary>:1
msgid ":py:obj:`split_attribute <scglue.genomics.Gtf.split_attribute>`"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rst:26:<autosummary>:1 of
#: scglue.genomics.Gtf.split_attribute:1
msgid ""
"Extract all attributes from the \"attribute\" column and append them to "
"existing columns"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rst:26:<autosummary>:1
msgid ":py:obj:`to_bed <scglue.genomics.Gtf.to_bed>`"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rst:26:<autosummary>:1 of
#: scglue.genomics.Gtf.to_bed:1
msgid "Convert GTF to BED format"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rst:26:<autosummary>:1
msgid ":py:obj:`verify <scglue.genomics.Gtf.verify>`"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rst:31:<autosummary>:1
msgid ":py:obj:`COLUMNS <scglue.genomics.Gtf.COLUMNS>`\\"
msgstr ""

#: ../../api/scglue.genomics.Gtf.read_gtf.rst:2
msgid "scglue.genomics.Gtf.read\\_gtf"
msgstr ""

#: of scglue.genomics.Gtf.read_gtf:4
msgid "GTF file"
msgstr ""

#: of scglue.genomics.Gtf.read_gtf:6 scglue.genomics.Gtf.split_attribute:4
msgid ":py:class:`scglue.genomics.Gtf`"
msgstr ""

#: of scglue.genomics.Gtf.read_gtf:7
msgid "*gtf* -- Loaded :class:`Gtf` object"
msgstr ""

#: ../../api/scglue.genomics.Gtf.rectify.rst:2
msgid "scglue.genomics.Gtf.rectify"
msgstr ""

#: ../../api/scglue.genomics.Gtf.split_attribute.rst:2
msgid "scglue.genomics.Gtf.split\\_attribute"
msgstr ""

#: of scglue.genomics.Gtf.split_attribute:5
msgid "*splitted* -- Gtf with splitted attribute columns appended"
msgstr ""

#: ../../api/scglue.genomics.Gtf.to_bed.rst:2
msgid "scglue.genomics.Gtf.to\\_bed"
msgstr ""

#: of scglue.genomics.Gtf.to_bed:4
msgid ""
"Specify a column to be converted to the \"name\" column in bed format, "
"otherwise the \"name\" column would be filled with \".\""
msgstr ""

#: of scglue.genomics.Gtf.to_bed:8
msgid "*bed* -- Converted :class:`Bed` object"
msgstr ""

#: ../../api/scglue.genomics.Gtf.verify.rst:2
msgid "scglue.genomics.Gtf.verify"
msgstr ""

#: ../../api/scglue.genomics.cis_regulatory_ranking.rst:2
msgid "scglue.genomics.cis\\_regulatory\\_ranking"
msgstr ""

#: of scglue.genomics.cis_regulatory_ranking:4
msgid "A graph connecting genes to cis-regulatory regions"
msgstr ""

#: of scglue.genomics.cis_regulatory_ranking:6
msgid "A graph connecting cis-regulatory regions to transcription factors"
msgstr ""

#: of scglue.genomics.cis_regulatory_ranking:8
msgid "A list of genes"
msgstr ""

#: of scglue.genomics.cis_regulatory_ranking:10
msgid "A list of transcription factors"
msgstr ""

#: of scglue.genomics.cis_regulatory_ranking:12
msgid "A list of cis-regulatory regions"
msgstr ""

#: of scglue.genomics.cis_regulatory_ranking:14
msgid ""
"Lengths of cis-regulatory regions (if not provided, it is assumed that "
"all regions have the same length)"
msgstr ""

#: of scglue.genomics.cis_regulatory_ranking:17
msgid ""
"Number of random samples used to evaluate regulatory enrichment (setting "
"this to 0 disables enrichment evaluation)"
msgstr ""

#: of scglue.genomics.cis_regulatory_ranking:20
#: scglue.genomics.regulatory_inference:12
#: scglue.metrics.seurat_alignment_score:12
#: scglue.models.data.AnnDataset.random_split:7
#: scglue.models.data.ArrayDataset.random_split:7
msgid "Random state"
msgstr "随机状态"

#: of scglue.genomics.cis_regulatory_ranking:23
msgid ""
"*gene2tf_rank* -- Cis regulatory ranking between genes and transcription "
"factors"
msgstr ""

#: ../../api/scglue.genomics.dist_power_decay.rst:2
msgid "scglue.genomics.dist\\_power\\_decay"
msgstr ""

#: of scglue.genomics.dist_power_decay:5
msgid "Distance (in bp)"
msgstr ""

#: of scglue.genomics.dist_power_decay:7 scglue.metrics.avg_silhouette_width:10
#: scglue.metrics.avg_silhouette_width_batch:12
#: scglue.metrics.graph_connectivity:10
#: scglue.metrics.mean_average_precision:12
#: scglue.metrics.neighbor_conservation:11
#: scglue.metrics.normalized_mutual_info:10
#: scglue.metrics.seurat_alignment_score:16 scglue.num.prob_or:6
msgid ":py:class:`float`"
msgstr ""

#: of scglue.genomics.dist_power_decay:8
msgid "*weight* -- Decaying weight"
msgstr ""

#: ../../api/scglue.genomics.ens_trim_version.rst:2
msgid "scglue.genomics.ens\\_trim\\_version"
msgstr ""

#: of scglue.genomics.ens_trim_version:4
msgid "Ensembl ID"
msgstr ""

#: of scglue.genomics.ens_trim_version:6
msgid ":py:class:`str`"
msgstr ""

#: of scglue.genomics.ens_trim_version:7
msgid "*trimmed* -- Ensembl ID with version suffix trimmed"
msgstr ""

#: ../../api/scglue.genomics.get_chr_len_from_fai.rst:2
msgid "scglue.genomics.get\\_chr\\_len\\_from\\_fai"
msgstr ""

#: of scglue.genomics.get_chr_len_from_fai:4
msgid "Fasta index file"
msgstr ""

#: of scglue.genomics.get_chr_len_from_fai:6
msgid ":py:class:`typing.Mapping`\\[:py:class:`str`, :py:class:`int`]"
msgstr ""

#: of scglue.genomics.get_chr_len_from_fai:7
msgid "*chr_len* -- Length of each chromosome"
msgstr ""

#: ../../api/scglue.genomics.interval_dist.rst:2
msgid "scglue.genomics.interval\\_dist"
msgstr ""

#: of scglue.genomics.interval_dist:4
msgid "First interval"
msgstr ""

#: of scglue.genomics.interval_dist:6
msgid "Second interval"
msgstr ""

#: of scglue.genomics.interval_dist:8
msgid ":py:class:`int`"
msgstr ""

#: of scglue.genomics.interval_dist:9
msgid "*dist* -- Signed distance between ``x`` and ``y``"
msgstr ""

#: ../../api/scglue.genomics.read_bed.rst:2
msgid "scglue.genomics.read\\_bed"
msgstr ""

#: ../../api/scglue.genomics.read_ctx_grn.rst:2
msgid "scglue.genomics.read\\_ctx\\_grn"
msgstr ""

#: of scglue.genomics.read_ctx_grn:4
msgid "Input file (.csv)"
msgstr ""

#: of scglue.genomics.read_ctx_grn:7
msgid "*grn* -- Pruned TF-target GRN"
msgstr ""

#: of scglue.genomics.read_ctx_grn:9
msgid "Node attribute \"type\" can be used to distinguish TFs and genes"
msgstr ""

#: ../../api/scglue.genomics.read_gtf.rst:2
msgid "scglue.genomics.read\\_gtf"
msgstr ""

#: ../../api/scglue.genomics.regulatory_inference.rst:2
msgid "scglue.genomics.regulatory\\_inference"
msgstr ""

#: of scglue.genomics.regulatory_inference:4
msgid "Feature names"
msgstr ""

#: of scglue.genomics.regulatory_inference:6
msgid "List of feature embeddings from 1 or more models"
msgstr ""

#: of scglue.genomics.regulatory_inference:8
msgid "Skeleton graph"
msgstr ""

#: of scglue.genomics.regulatory_inference:10
msgid ""
"Alternative hypothesis, must be one of {\"two.sided\", \"less\", "
"\"greater\"}"
msgstr ""

#: of scglue.genomics.regulatory_inference:15
msgid ""
"*regulatory_graph* -- Regulatory graph containing regulatory score "
"(\"score\"), *P*-value (\"pval\"), *Q*-value (\"pval\") as edge "
"attributes for feature pairs in the skeleton graph"
msgstr ""

#: ../../api/scglue.genomics.rna_anchored_guidance_graph.rst:2
msgid "scglue.genomics.rna\\_anchored\\_guidance\\_graph"
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:4
msgid "Anchor RNA dataset"
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:5
msgid "Other datasets"
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:7
msgid ""
"Defines the genomic region of genes, must be one of ``{\"gene_body\", "
"\"promoter\", \"combined\"}``."
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:10
msgid "Defines the length of gene promoters (bp upstream of TSS)"
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:12
msgid "Maximal extend distance beyond gene regions"
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:14
msgid ""
"Distance-decreasing weight function for the extended regions (by default "
":func:`dist_power_decay`)"
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:17
msgid ""
"Sign of edges between RNA genes and features in each ``*others`` dataset,"
" must have the same length as ``*others``. Signs must be one of ``{-1, "
"1}``. By default, all edges have positive signs of ``1``."
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:21
msgid ""
"Whether to propagate highly variable genes to other datasets, datasets in"
" ``*others`` would be modified in place."
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:24
#: scglue.genomics.rna_anchored_guidance_graph:26
msgid "**CAUTION: DO NOT USE**, only for evaluation purpose"
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:28
#: scglue.genomics.rna_anchored_prior_graph:4 scglue.genomics.window_graph:24
msgid ":py:class:`~networkx.MultiDiGraph`"
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:29
msgid "*graph* -- Prior regulatory graph"
msgstr ""

#: of scglue.genomics.rna_anchored_guidance_graph:33
msgid ""
"In this function, features in the same dataset can only connect to anchor"
" genes via the same edge sign. For more flexibility, please construct the"
" guidance graph manually."
msgstr ""

#: ../../api/scglue.genomics.rna_anchored_prior_graph.rst:2
msgid "scglue.genomics.rna\\_anchored\\_prior\\_graph"
msgstr ""

#: ../../api/scglue.genomics.window_graph.rst:2
msgid "scglue.genomics.window\\_graph"
msgstr ""

#: of scglue.genomics.window_graph:5
msgid "First feature set, either a :class:`Bed` object or path to a bed file"
msgstr ""

#: of scglue.genomics.window_graph:7
msgid "Second feature set, either a :class:`Bed` object or path to a bed file"
msgstr ""

#: of scglue.genomics.window_graph:9
msgid "Window size (in bp)"
msgstr ""

#: of scglue.genomics.window_graph:11
msgid "Whether ``left`` is already sorted"
msgstr ""

#: of scglue.genomics.window_graph:13
msgid "Whether ``right`` is already sorted"
msgstr ""

#: of scglue.genomics.window_graph:15
msgid ""
"Function to compute edge attributes for connected features, should accept"
" the following three positional arguments:  - l: left interval - r: right"
" interval - d: signed distance between the intervals  By default no edge "
"attribute is created."
msgstr ""

#: of scglue.genomics.window_graph:15
msgid ""
"Function to compute edge attributes for connected features, should accept"
" the following three positional arguments:"
msgstr ""

#: of scglue.genomics.window_graph:18
msgid "l: left interval"
msgstr ""

#: of scglue.genomics.window_graph:19
msgid "r: right interval"
msgstr ""

#: of scglue.genomics.window_graph:20
msgid "d: signed distance between the intervals"
msgstr ""

#: of scglue.genomics.window_graph:22
msgid "By default no edge attribute is created."
msgstr ""

#: of scglue.genomics.window_graph:25
msgid "*graph* -- Window graph"
msgstr ""

#: ../../api/scglue.genomics.write_links.rst:2
msgid "scglue.genomics.write\\_links"
msgstr ""

#: of scglue.genomics.write_links:4
msgid "Regulatory graph"
msgstr ""

#: of scglue.genomics.write_links:6
msgid "Genomic coordinates of source nodes"
msgstr ""

#: of scglue.genomics.write_links:8
msgid "Genomic coordinates of target nodes"
msgstr ""

#: of scglue.genomics.write_links:10
msgid "Output file"
msgstr ""

#: of scglue.genomics.write_links:12
msgid "A list of attributes to keep for each link"
msgstr ""

#: ../../api/scglue.genomics.write_scenic_feather.rst:2
msgid "scglue.genomics.write\\_scenic\\_feather"
msgstr ""

#: of scglue.genomics.write_scenic_feather:4
msgid ""
"Cis regulatory ranking between genes and transcription factors, as "
"generated by :func:`cis_reg_ranking`"
msgstr ""

#: of scglue.genomics.write_scenic_feather:7
msgid "Path to the output feather file"
msgstr ""

#: of scglue.genomics.write_scenic_feather:9
msgid "SCENIC feather version"
msgstr ""

#: ../../api/scglue.graph.rst:2
msgid "scglue.graph"
msgstr ""

#: ../../api/scglue.graph.rst:21:<autosummary>:1
msgid ":py:obj:`check_graph <scglue.graph.check_graph>`"
msgstr ""

#: ../../api/scglue.graph.rst:21:<autosummary>:1 of scglue.graph.check_graph:1
msgid "Check if a graph is a valid guidance graph"
msgstr ""

#: ../../api/scglue.graph.rst:21:<autosummary>:1
msgid ":py:obj:`collapse_multigraph <scglue.graph.collapse_multigraph>`"
msgstr ""

#: ../../api/scglue.graph.rst:21:<autosummary>:1 of
#: scglue.graph.collapse_multigraph:1
msgid "Collapse multi-edges into simple-edges"
msgstr ""

#: ../../api/scglue.graph.rst:21:<autosummary>:1
msgid ":py:obj:`compose_multigraph <scglue.graph.compose_multigraph>`"
msgstr ""

#: ../../api/scglue.graph.rst:21:<autosummary>:1 of
#: scglue.graph.compose_multigraph:1
msgid "Compose multi-graph from multiple graphs with no edge collision"
msgstr ""

#: ../../api/scglue.graph.rst:21:<autosummary>:1
msgid ":py:obj:`reachable_vertices <scglue.graph.reachable_vertices>`"
msgstr ""

#: ../../api/scglue.graph.rst:21:<autosummary>:1 of
#: scglue.graph.reachable_vertices:1
msgid ""
"Identify vertices reachable from source vertices (including source "
"vertices themselves)"
msgstr ""

#: ../../api/scglue.graph.check_graph.rst:2
msgid "scglue.graph.check\\_graph"
msgstr ""

#: of scglue.graph.check_graph:4
msgid "Graph to be checked"
msgstr ""

#: of scglue.graph.check_graph:6
msgid "AnnData objects where graph nodes are variables"
msgstr ""

#: of scglue.graph.check_graph:8
msgid ""
"Action to take if graph nodes does not cover all variables, must be one "
"of {\"ignore\", \"warn\", \"error\"}"
msgstr ""

#: of scglue.graph.check_graph:11
msgid ""
"Action to take if graph edges does not contain required attributes, must "
"be one of {\"ignore\", \"warn\", \"error\"}"
msgstr ""

#: of scglue.graph.check_graph:14
msgid ""
"Action to take if graph does not contain self-loops, must be one of "
"{\"ignore\", \"warn\", \"error\"}"
msgstr ""

#: of scglue.graph.check_graph:17
msgid ""
"Action to take if graph is not symmetric, must be one of {\"ignore\", "
"\"warn\", \"error\"}"
msgstr ""

#: ../../api/scglue.graph.collapse_multigraph.rst:2
msgid "scglue.graph.collapse\\_multigraph"
msgstr ""

#: of scglue.graph.collapse_multigraph:4
msgid "Input multi-graph"
msgstr ""

#: of scglue.graph.collapse_multigraph:6
msgid ""
"Attribute-specific merge functions, indexed by attribute name. Each merge"
" function should accept a list of values and return a single value."
msgstr ""

#: of scglue.graph.collapse_multigraph:11
msgid "*collapsed* -- Collapsed graph"
msgstr ""

#: of scglue.graph.collapse_multigraph:15
msgid ""
"The collapsed graph would be directed if the input graph is directed. "
"Edges causing ValueError in ``merge_fns`` will be discarded."
msgstr ""

#: ../../api/scglue.graph.compose_multigraph.rst:2
msgid "scglue.graph.compose\\_multigraph"
msgstr ""

#: of scglue.graph.compose_multigraph:4
msgid "An arbitrary number of graphs to be composed from"
msgstr ""

#: of scglue.graph.compose_multigraph:6
msgid ":py:class:`~networkx.MultiGraph`"
msgstr ""

#: of scglue.graph.compose_multigraph:7
msgid "*composed* -- Composed multi-graph"
msgstr ""

#: of scglue.graph.compose_multigraph:11
msgid ""
"The resulting multi-graph would be directed if any of the input graphs is"
" directed."
msgstr ""

#: ../../api/scglue.graph.reachable_vertices.rst:2
msgid "scglue.graph.reachable\\_vertices"
msgstr ""

#: of scglue.graph.reachable_vertices:5
#: scglue.models.scglue.SCGLUEModel.encode_graph:4
msgid "Input graph"
msgstr ""

#: of scglue.graph.reachable_vertices:7
msgid "Source vertices"
msgstr ""

#: of scglue.graph.reachable_vertices:9
msgid ":py:class:`typing.Set`\\[:py:data:`typing.Any`]"
msgstr ""

#: of scglue.graph.reachable_vertices:10
msgid "*reachable_vertices* -- Reachable vertices"
msgstr ""

#: ../../api/scglue.metrics.rst:2
msgid "scglue.metrics"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1
msgid ":py:obj:`avg_silhouette_width <scglue.metrics.avg_silhouette_width>`"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1 of
#: scglue.metrics.avg_silhouette_width:1
msgid "Cell type average silhouette width"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1
msgid ""
":py:obj:`avg_silhouette_width_batch "
"<scglue.metrics.avg_silhouette_width_batch>`"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1 of
#: scglue.metrics.avg_silhouette_width_batch:1
msgid "Batch average silhouette width"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1
msgid ":py:obj:`foscttm <scglue.metrics.foscttm>`"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1 of scglue.metrics.foscttm:1
msgid "Fraction of samples closer than true match (smaller is better)"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1
msgid ":py:obj:`graph_connectivity <scglue.metrics.graph_connectivity>`"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1 of
#: scglue.metrics.graph_connectivity:1
msgid "Graph connectivity"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1
msgid ":py:obj:`mean_average_precision <scglue.metrics.mean_average_precision>`"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1 of
#: scglue.metrics.mean_average_precision:1
msgid "Mean average precision"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1
msgid ":py:obj:`neighbor_conservation <scglue.metrics.neighbor_conservation>`"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1 of
#: scglue.metrics.neighbor_conservation:1
msgid "Neighbor conservation score"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1
msgid ":py:obj:`normalized_mutual_info <scglue.metrics.normalized_mutual_info>`"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1 of
#: scglue.metrics.normalized_mutual_info:1
msgid "Normalized mutual information with true clustering"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1
msgid ":py:obj:`seurat_alignment_score <scglue.metrics.seurat_alignment_score>`"
msgstr ""

#: ../../api/scglue.metrics.rst:25:<autosummary>:1 of
#: scglue.metrics.seurat_alignment_score:1
msgid "Seurat alignment score"
msgstr ""

#: ../../api/scglue.metrics.avg_silhouette_width.rst:2
msgid "scglue.metrics.avg\\_silhouette\\_width"
msgstr ""

#: of scglue.metrics.avg_silhouette_width:4
#: scglue.metrics.avg_silhouette_width_batch:4
#: scglue.metrics.graph_connectivity:4 scglue.metrics.mean_average_precision:4
#: scglue.metrics.normalized_mutual_info:4
#: scglue.metrics.seurat_alignment_score:4
msgid "Coordinates"
msgstr "坐标"

#: of scglue.metrics.avg_silhouette_width:6
#: scglue.metrics.avg_silhouette_width_batch:8
#: scglue.metrics.graph_connectivity:6 scglue.metrics.mean_average_precision:6
#: scglue.metrics.normalized_mutual_info:6
msgid "Cell type labels"
msgstr "细胞类型标签"

#: of scglue.metrics.avg_silhouette_width:7
msgid ""
"Additional keyword arguments are passed to "
":func:`sklearn.metrics.silhouette_score`"
msgstr ""

#: of scglue.metrics.avg_silhouette_width:11
msgid "*asw* -- Cell type average silhouette width"
msgstr ""

#: of scglue.metrics.avg_silhouette_width:15
#: scglue.metrics.avg_silhouette_width_batch:17
#: scglue.metrics.normalized_mutual_info:15
msgid ""
"Follows the definition in `OpenProblems NeurIPS 2021 competition "
"<https://openproblems.bio/neurips_docs/about_tasks/task3_joint_embedding/>`__"
msgstr ""

#: ../../api/scglue.metrics.avg_silhouette_width_batch.rst:2
msgid "scglue.metrics.avg\\_silhouette\\_width\\_batch"
msgstr ""

#: of scglue.metrics.avg_silhouette_width_batch:6
#: scglue.metrics.seurat_alignment_score:6
msgid "Batch labels"
msgstr ""

#: of scglue.metrics.avg_silhouette_width_batch:9
msgid ""
"Additional keyword arguments are passed to "
":func:`sklearn.metrics.silhouette_samples`"
msgstr ""

#: of scglue.metrics.avg_silhouette_width_batch:13
msgid "*asw_batch* -- Batch average silhouette width"
msgstr ""

#: ../../api/scglue.metrics.foscttm.rst:2
msgid "scglue.metrics.foscttm"
msgstr ""

#: of scglue.metrics.foscttm:4
msgid "Coordinates for samples in modality X"
msgstr ""

#: of scglue.metrics.foscttm:6
msgid "Coordinates for samples in modality y"
msgstr ""

#: of scglue.metrics.foscttm:7
msgid ""
"Additional keyword arguments are passed to "
":func:`scipy.spatial.distance_matrix`"
msgstr ""

#: of scglue.metrics.foscttm:10 scglue.models.data.AnnDataset.propose_shuffle:6
msgid ""
":py:data:`typing.Tuple`\\[:py:class:`numpy.ndarray`, "
":py:class:`numpy.ndarray`]"
msgstr ""

#: of scglue.metrics.foscttm:11
msgid ""
"*foscttm_x, foscttm_y* -- FOSCTTM for samples in modality X and Y, "
"respectively"
msgstr ""

#: of scglue.metrics.foscttm:13
msgid "Samples in modality X and Y should be paired and given in the same order"
msgstr ""

#: ../../api/scglue.metrics.graph_connectivity.rst:2
msgid "scglue.metrics.graph\\_connectivity"
msgstr ""

#: of scglue.metrics.graph_connectivity:7
msgid "Additional keyword arguments are passed to :func:`scanpy.pp.neighbors`"
msgstr ""

#: of scglue.metrics.graph_connectivity:11
msgid "*conn* -- Graph connectivity"
msgstr ""

#: ../../api/scglue.metrics.mean_average_precision.rst:2
msgid "scglue.metrics.mean\\_average\\_precision"
msgstr ""

#: of scglue.metrics.mean_average_precision:8
#: scglue.metrics.seurat_alignment_score:8
msgid "Nearest neighbor fraction"
msgstr ""

#: of scglue.metrics.mean_average_precision:13
msgid "*map* -- Mean average precision"
msgstr ""

#: ../../api/scglue.metrics.neighbor_conservation.rst:2
msgid "scglue.metrics.neighbor\\_conservation"
msgstr ""

#: of scglue.metrics.neighbor_conservation:4
msgid "Cooordinates after integration"
msgstr ""

#: of scglue.metrics.neighbor_conservation:6
msgid "Coordinates before integration"
msgstr ""

#: of scglue.metrics.neighbor_conservation:7
msgid "Batch"
msgstr ""

#: of scglue.metrics.neighbor_conservation:12
msgid "*nn_cons* -- Neighbor conservation score"
msgstr ""

#: ../../api/scglue.metrics.normalized_mutual_info.rst:2
msgid "scglue.metrics.normalized\\_mutual\\_info"
msgstr ""

#: of scglue.metrics.normalized_mutual_info:7
msgid ""
"Additional keyword arguments are passed to "
":func:`sklearn.metrics.normalized_mutual_info_score`"
msgstr ""

#: of scglue.metrics.normalized_mutual_info:11
msgid "*nmi* -- Normalized mutual information"
msgstr ""

#: ../../api/scglue.metrics.seurat_alignment_score.rst:2
msgid "scglue.metrics.seurat\\_alignment\\_score"
msgstr ""

#: of scglue.metrics.seurat_alignment_score:10
msgid "Number of subsampling repeats"
msgstr ""

#: of scglue.metrics.seurat_alignment_score:17
msgid "*sas* -- Seurat alignment score"
msgstr ""

#: ../../api/scglue.models.rst:2
msgid "scglue.models"
msgstr ""

#: ../../api/scglue.models.rst:20:<autosummary>:1
msgid ":py:obj:`configure_dataset <scglue.models.configure_dataset>`"
msgstr ""

#: ../../api/scglue.models.rst:20:<autosummary>:1 of
#: scglue.models.configure_dataset:1
msgid "Configure dataset for model training"
msgstr ""

#: ../../api/scglue.models.rst:20:<autosummary>:1
msgid ":py:obj:`fit_SCGLUE <scglue.models.fit_SCGLUE>`"
msgstr ""

#: ../../api/scglue.models.rst:20:<autosummary>:1 of scglue.models.fit_SCGLUE:1
msgid "Fit GLUE model to integrate single-cell multi-omics data"
msgstr ""

#: ../../api/scglue.models.rst:20:<autosummary>:1
msgid ":py:obj:`load_model <scglue.models.load_model>`"
msgstr ""

#: ../../api/scglue.models.rst:20:<autosummary>:1 of scglue.models.load_model:1
msgid "Load model from file"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1
msgid ":py:obj:`scglue.models.base <scglue.models.base>`\\"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1 of scglue.models.base:1
msgid "Base classes for model definition and training"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1
msgid ":py:obj:`scglue.models.data <scglue.models.data>`\\"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1 of scglue.models.data:1
msgid "Data handling utilities"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1
msgid ":py:obj:`scglue.models.dx <scglue.models.dx>`\\"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1 of scglue.models.dx:1
msgid "Model diagnostics"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1
msgid ":py:obj:`scglue.models.glue <scglue.models.glue>`\\"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1 of scglue.models.glue:1
msgid "Generic framework of graph-linked unified embedding (GLUE)"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1
msgid ":py:obj:`scglue.models.nn <scglue.models.nn>`\\"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1 of scglue.models.nn:1
msgid "Neural network modules, datasets & data loaders, and other utilities"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1
msgid ":py:obj:`scglue.models.plugins <scglue.models.plugins>`\\"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1 of scglue.models.plugins:1
msgid "Training plugins"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1
msgid ":py:obj:`scglue.models.prob <scglue.models.prob>`\\"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1 of scglue.models.prob:1
msgid "Probability distributions"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1
msgid ":py:obj:`scglue.models.sc <scglue.models.sc>`\\"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1 of scglue.models.sc:1
msgid "GLUE component modules for single-cell omics data"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1
msgid ":py:obj:`scglue.models.scclue <scglue.models.scclue>`\\"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1 of scglue.models.scclue:1
msgid ""
"Concat/cross-linked unified embedding (CLUE) for single-cell multi-omics "
"data integration"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1
msgid ":py:obj:`scglue.models.scglue <scglue.models.scglue>`\\"
msgstr ""

#: ../../api/scglue.models.rst:51:<autosummary>:1 of scglue.models.scglue:1
msgid ""
"Graph-linked unified embedding (GLUE) for single-cell multi-omics data "
"integration"
msgstr ""

#: ../../api/scglue.models.base.rst:2
msgid "scglue.models.base"
msgstr ""

#: ../../api/scglue.models.base.rst:25:<autosummary>:1
msgid ":py:obj:`Model <scglue.models.base.Model>`"
msgstr ""

#: ../../api/scglue.models.base.rst:25:<autosummary>:1 of
#: scglue.models.base.Model:1
msgid "Abstract model class"
msgstr ""

#: ../../api/scglue.models.base.rst:25:<autosummary>:1
msgid ":py:obj:`Trainer <scglue.models.base.Trainer>`"
msgstr ""

#: ../../api/scglue.models.base.rst:25:<autosummary>:1 of
#: scglue.models.base.Trainer:1
msgid "Abstract trainer class"
msgstr ""

#: ../../api/scglue.models.base.rst:25:<autosummary>:1
msgid ":py:obj:`TrainingPlugin <scglue.models.base.TrainingPlugin>`"
msgstr ""

#: ../../api/scglue.models.base.rst:25:<autosummary>:1 of
#: scglue.models.base.TrainingPlugin:1
msgid "Plugin used to extend the training process with certain functions"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:2
msgid "scglue.models.base.Model"
msgstr ""

#: of scglue.models.base.Model:3
msgid "Network type"
msgstr ""

#: of scglue.models.base.Model:4
msgid "Positional arguments are passed to the network constructor"
msgstr ""

#: of scglue.models.base.Model:5
msgid "Keyword arguments are passed to the network constructor"
msgstr ""

#: of scglue.models.base.Model:7 scglue.models.base.Model.compile:7
#: scglue.models.base.Model.fit:6 scglue.models.scclue.SCCLUEModel.compile:7
#: scglue.models.scclue.SCCLUEModel.fit:6
msgid "Subclasses may override arguments for API definition."
msgstr ""

#: ../../api/scglue.models.base.Model.rst:26:<autosummary>:1
msgid ":py:obj:`compile <scglue.models.base.Model.compile>`"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:26:<autosummary>:1
#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>:1
#: ../../api/scglue.models.scglue.PairedSCGLUEModel.rst:22:<autosummary>:1
#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1 of
#: scglue.models.base.Model.compile:1
#: scglue.models.scclue.SCCLUEModel.compile:1
#: scglue.models.scglue.PairedSCGLUEModel.compile:1
#: scglue.models.scglue.SCGLUEModel.compile:1
msgid "Prepare model for training"
msgstr "为模型训练做准备"

#: ../../api/scglue.models.base.Model.rst:26:<autosummary>:1
msgid ":py:obj:`fit <scglue.models.base.Model.fit>`"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:26:<autosummary>:1
#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>:1 of
#: scglue.models.base.Model.fit:1 scglue.models.scclue.SCCLUEModel.fit:1
msgid "Alias of ``.trainer.fit``."
msgstr ""

#: ../../api/scglue.models.base.Model.rst:26:<autosummary>:1
msgid ":py:obj:`get_losses <scglue.models.base.Model.get_losses>`"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:26:<autosummary>:1 of
#: scglue.models.base.Model.get_losses:1
msgid "Alias of ``.trainer.get_losses``."
msgstr ""

#: ../../api/scglue.models.base.Model.rst:26:<autosummary>:1
msgid ":py:obj:`save <scglue.models.base.Model.save>`"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:26:<autosummary>:1 of
#: scglue.models.base.Model.save:1
msgid "Save model to file"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:26:<autosummary>:1
msgid ":py:obj:`upgrade <scglue.models.base.Model.upgrade>`"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:26:<autosummary>:1
#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1 of
#: scglue.models.base.Model.upgrade:1
#: scglue.models.scglue.SCGLUEModel.upgrade:1
msgid "Upgrade the model if generated by older versions"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:33:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.base.Model.logger>`\\"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:33:<autosummary>:1
msgid ":py:obj:`net <scglue.models.base.Model.net>`\\"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:33:<autosummary>:1
msgid "Neural network module in the model (read-only)"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:33:<autosummary>:1
msgid ":py:obj:`trainer <scglue.models.base.Model.trainer>`\\"
msgstr ""

#: ../../api/scglue.models.base.Model.rst:33:<autosummary>:1
msgid "Trainer of the neural network module (read-only)"
msgstr ""

#: ../../api/scglue.models.base.Model.compile.rst:2
msgid "scglue.models.base.Model.compile"
msgstr ""

#: of scglue.models.base.Model.compile:3
#: scglue.models.scclue.SCCLUEModel.compile:3
msgid "Trainer type"
msgstr ""

#: of scglue.models.base.Model.compile:4
#: scglue.models.scclue.SCCLUEModel.compile:4
msgid "Positional arguments are passed to the trainer constructor"
msgstr ""

#: of scglue.models.base.Model.compile:5
#: scglue.models.scclue.SCCLUEModel.compile:5
msgid "Keyword arguments are passed to the trainer constructor"
msgstr ""

#: ../../api/scglue.models.base.Model.fit.rst:2
msgid "scglue.models.base.Model.fit"
msgstr ""

#: of scglue.models.base.Model.fit:3 scglue.models.scclue.SCCLUEModel.fit:3
msgid "Positional arguments are passed to the ``.trainer.fit`` method"
msgstr ""

#: of scglue.models.base.Model.fit:4 scglue.models.scclue.SCCLUEModel.fit:4
msgid "Keyword arguments are passed to the ``.trainer.fit`` method"
msgstr ""

#: ../../api/scglue.models.base.Model.get_losses.rst:2
msgid "scglue.models.base.Model.get\\_losses"
msgstr ""

#: of scglue.models.base.Model.get_losses:3
msgid "Positional arguments are passed to the ``.trainer.get_losses`` method"
msgstr ""

#: of scglue.models.base.Model.get_losses:4
msgid "Keyword arguments are passed to the ``.trainer.get_losses`` method"
msgstr ""

#: of scglue.models.base.Model.get_losses:6
#: scglue.models.base.Trainer.get_losses:6
#: scglue.models.glue.GLUETrainer.get_losses:5
msgid ":py:class:`typing.Mapping`\\[:py:class:`str`, :py:class:`float`]"
msgstr ""

#: of scglue.models.base.Model.get_losses:7
#: scglue.models.base.Trainer.get_losses:7
#: scglue.models.glue.GLUETrainer.compute_losses:11
#: scglue.models.glue.GLUETrainer.get_losses:6
#: scglue.models.scglue.PairedSCGLUETrainer.compute_losses:11
#: scglue.models.scglue.SCGLUETrainer.compute_losses:11
msgid "*loss_dict* -- Dict containing loss values"
msgstr ""

#: ../../api/scglue.models.base.Model.save.rst:2
msgid "scglue.models.base.Model.save"
msgstr ""

#: of scglue.models.base.Model.save:3 scglue.models.load_model:4
msgid "Specifies path to the file"
msgstr ""

#: of scglue.models.base.Model.save:5
msgid "Only the network is saved but not the trainer"
msgstr ""

#: ../../api/scglue.models.base.Model.upgrade.rst:2
msgid "scglue.models.base.Model.upgrade"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:2
msgid "scglue.models.base.Trainer"
msgstr ""

#: of scglue.models.base.Trainer:4
msgid "Network module to be trained"
msgstr ""

#: of scglue.models.base.Trainer:8
msgid ""
"Subclasses should populate ``required_losses``, and additionally define "
"optimizers here."
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
msgid ":py:obj:`fit <scglue.models.base.Trainer.fit>`"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1 of
#: scglue.models.base.Trainer.fit:1 scglue.models.glue.GLUETrainer.fit:1
#: scglue.models.scclue.SCCLUETrainer.fit:1
msgid "Fit network"
msgstr "训练模型"

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
msgid ":py:obj:`get_losses <scglue.models.base.Trainer.get_losses>`"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1 of
#: scglue.models.base.Trainer.get_losses:1
#: scglue.models.glue.GLUETrainer.get_losses:1
msgid "Get loss values for given data"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
msgid ":py:obj:`load_state_dict <scglue.models.base.Trainer.load_state_dict>`"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1 of
#: scglue.models.base.Trainer.load_state_dict:1
#: scglue.models.glue.GLUETrainer.load_state_dict:1
#: scglue.models.scclue.SCCLUETrainer.load_state_dict:1
msgid "Load state from a state dict"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
msgid ":py:obj:`report_metrics <scglue.models.base.Trainer.report_metrics>`"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1 of
#: scglue.models.base.Trainer.report_metrics:1
msgid "Report loss values during training"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
msgid ":py:obj:`state_dict <scglue.models.base.Trainer.state_dict>`"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1 of
#: scglue.models.base.Trainer.load_state_dict:4
#: scglue.models.base.Trainer.state_dict:1
#: scglue.models.glue.GLUETrainer.load_state_dict:4
#: scglue.models.glue.GLUETrainer.state_dict:1
#: scglue.models.scclue.SCCLUETrainer.load_state_dict:4
#: scglue.models.scclue.SCCLUETrainer.state_dict:1
msgid "State dict"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
msgid ":py:obj:`train_step <scglue.models.base.Trainer.train_step>`"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1
#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:24:<autosummary>:1 of
#: scglue.models.base.Trainer.train_step:1
#: scglue.models.glue.GLUETrainer.train_step:1
#: scglue.models.scclue.SCCLUETrainer.train_step:1
#: scglue.models.scglue.SCGLUETrainer.train_step:1
msgid "A single training step"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
msgid ":py:obj:`val_step <scglue.models.base.Trainer.val_step>`"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:28:<autosummary>:1
#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1 of
#: scglue.models.base.Trainer.val_step:1
#: scglue.models.glue.GLUETrainer.val_step:1
#: scglue.models.scclue.SCCLUETrainer.val_step:1
msgid "A single validation step"
msgstr ""

#: ../../api/scglue.models.base.Trainer.rst:33:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.base.Trainer.logger>`\\"
msgstr ""

#: ../../api/scglue.models.base.Trainer.fit.rst:2
msgid "scglue.models.base.Trainer.fit"
msgstr ""

#: of scglue.models.base.Trainer.fit:4
#: scglue.models.base.TrainingPlugin.attach:12
#: scglue.models.plugins.EarlyStopping.attach:12
#: scglue.models.plugins.LRScheduler.attach:12
#: scglue.models.plugins.Tensorboard.attach:12
#: scglue.models.scclue.SCCLUETrainer.fit:3
msgid "Training data loader"
msgstr ""

#: of scglue.models.base.Trainer.fit:6
#: scglue.models.base.TrainingPlugin.attach:14
#: scglue.models.plugins.EarlyStopping.attach:14
#: scglue.models.plugins.LRScheduler.attach:14
#: scglue.models.plugins.Tensorboard.attach:14
#: scglue.models.scclue.SCCLUETrainer.fit:4
msgid "Validation data loader"
msgstr ""

#: of scglue.models.base.Trainer.fit:8 scglue.models.glue.GLUETrainer.fit:19
#: scglue.models.scclue.SCCLUETrainer.fit:6
#: scglue.models.scglue.SCGLUEModel.fit:21
msgid "Maximal number of epochs"
msgstr ""

#: of scglue.models.base.Trainer.fit:10
#: scglue.models.data.AnnDataset.propose_shuffle:4
#: scglue.models.data.ArrayDataset.propose_shuffle:4
#: scglue.models.data.Dataset.propose_shuffle:4
#: scglue.models.data.GraphDataset.propose_shuffle:4
#: scglue.models.glue.GLUETrainer.fit:27
#: scglue.models.scclue.SCCLUETrainer.fit:8
#: scglue.models.scglue.PairedSCGLUEModel:18
#: scglue.models.scglue.SCGLUEModel:18
msgid "Random seed"
msgstr "随机种子"

#: of scglue.models.base.Trainer.fit:12
#: scglue.models.base.TrainingPlugin.attach:16
#: scglue.models.plugins.EarlyStopping.attach:16
#: scglue.models.plugins.LRScheduler.attach:16
#: scglue.models.plugins.Tensorboard.attach:16
#: scglue.models.scclue.SCCLUETrainer.fit:10
msgid "Training directory"
msgstr ""

#: of scglue.models.base.Trainer.fit:14 scglue.models.glue.GLUETrainer.fit:31
#: scglue.models.scclue.SCCLUETrainer.fit:12
msgid "Optional list of training plugins"
msgstr ""

#: ../../api/scglue.models.base.Trainer.get_losses.rst:2
msgid "scglue.models.base.Trainer.get\\_losses"
msgstr ""

#: of scglue.models.base.Trainer.get_losses:4
#: scglue.models.glue.GLUETrainer.get_losses:3
msgid "Data loader"
msgstr ""

#: ../../api/scglue.models.base.Trainer.load_state_dict.rst:2
msgid "scglue.models.base.Trainer.load\\_state\\_dict"
msgstr ""

#: ../../api/scglue.models.base.Trainer.report_metrics.rst:2
msgid "scglue.models.base.Trainer.report\\_metrics"
msgstr ""

#: of scglue.models.base.Trainer.report_metrics:4
msgid "Training engine state"
msgstr ""

#: of scglue.models.base.Trainer.report_metrics:6
msgid "Validation engine state"
msgstr ""

#: ../../api/scglue.models.base.Trainer.state_dict.rst:2
msgid "scglue.models.base.Trainer.state\\_dict"
msgstr ""

#: of scglue.models.base.Trainer.state_dict:3
#: scglue.models.glue.GLUETrainer.state_dict:3
#: scglue.models.scclue.SCCLUETrainer.state_dict:3
msgid ":py:class:`typing.Mapping`\\[:py:class:`str`, :py:data:`typing.Any`]"
msgstr ""

#: of scglue.models.base.Trainer.state_dict:4
#: scglue.models.glue.GLUETrainer.state_dict:4
#: scglue.models.scclue.SCCLUETrainer.state_dict:4
msgid "*state_dict* -- State dict"
msgstr ""

#: ../../api/scglue.models.base.Trainer.train_step.rst:2
msgid "scglue.models.base.Trainer.train\\_step"
msgstr ""

#: of scglue.models.base.Trainer.train_step:4
#: scglue.models.base.TrainingPlugin.attach:8
#: scglue.models.glue.GLUETrainer.train_step:4
#: scglue.models.plugins.EarlyStopping.attach:8
#: scglue.models.plugins.LRScheduler.attach:8
#: scglue.models.plugins.Tensorboard.attach:8
#: scglue.models.scclue.SCCLUETrainer.train_step:4
#: scglue.models.scglue.SCGLUETrainer.train_step:4
msgid "Training engine"
msgstr ""

#: of scglue.models.base.Trainer.train_step:6
#: scglue.models.glue.GLUETrainer.train_step:6
#: scglue.models.scclue.SCCLUETrainer.train_step:6
#: scglue.models.scglue.SCGLUETrainer.train_step:6
msgid "Data of the training step"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1 of
#: scglue.models.base.Trainer.train_step:8
#: scglue.models.base.Trainer.val_step:8
#: scglue.models.glue.GLUETrainer.compute_losses:10
#: scglue.models.glue.GLUETrainer.train_step:8
#: scglue.models.glue.GLUETrainer.val_step:8
#: scglue.models.scclue.SCCLUETrainer.compute_losses:2
#: scglue.models.scclue.SCCLUETrainer.train_step:8
#: scglue.models.scclue.SCCLUETrainer.val_step:8
#: scglue.models.scglue.PairedSCGLUETrainer.compute_losses:10
#: scglue.models.scglue.SCGLUETrainer.compute_losses:10
#: scglue.models.scglue.SCGLUETrainer.train_step:8
msgid ":py:class:`typing.Mapping`\\[:py:class:`str`, :py:class:`torch.Tensor`]"
msgstr ""

#: of scglue.models.base.Trainer.train_step:9
#: scglue.models.glue.GLUETrainer.train_step:9
#: scglue.models.scclue.SCCLUETrainer.train_step:9
#: scglue.models.scglue.SCGLUETrainer.train_step:9
msgid "*loss_dict* -- Dict containing training loss values"
msgstr ""

#: ../../api/scglue.models.base.Trainer.val_step.rst:2
msgid "scglue.models.base.Trainer.val\\_step"
msgstr ""

#: of scglue.models.base.Trainer.val_step:4
#: scglue.models.base.TrainingPlugin.attach:10
#: scglue.models.glue.GLUETrainer.val_step:4
#: scglue.models.plugins.EarlyStopping.attach:10
#: scglue.models.plugins.LRScheduler.attach:10
#: scglue.models.plugins.Tensorboard.attach:10
#: scglue.models.scclue.SCCLUETrainer.val_step:4
msgid "Validation engine"
msgstr ""

#: of scglue.models.base.Trainer.val_step:6
#: scglue.models.glue.GLUETrainer.val_step:6
#: scglue.models.scclue.SCCLUETrainer.val_step:6
msgid "Data of the validation step"
msgstr ""

#: of scglue.models.base.Trainer.val_step:9
#: scglue.models.glue.GLUETrainer.val_step:9
#: scglue.models.scclue.SCCLUETrainer.val_step:9
msgid "*loss_dict* -- Dict containing validation loss values"
msgstr ""

#: ../../api/scglue.models.base.TrainingPlugin.rst:2
msgid "scglue.models.base.TrainingPlugin"
msgstr ""

#: ../../api/scglue.models.base.TrainingPlugin.rst:22:<autosummary>:1
msgid ":py:obj:`attach <scglue.models.base.TrainingPlugin.attach>`"
msgstr ""

#: ../../api/scglue.models.base.TrainingPlugin.rst:22:<autosummary>:1
#: ../../api/scglue.models.plugins.EarlyStopping.rst:22:<autosummary>:1
#: ../../api/scglue.models.plugins.LRScheduler.rst:22:<autosummary>:1
#: ../../api/scglue.models.plugins.Tensorboard.rst:22:<autosummary>:1 of
#: scglue.models.base.TrainingPlugin.attach:1
#: scglue.models.plugins.EarlyStopping.attach:1
#: scglue.models.plugins.LRScheduler.attach:1
#: scglue.models.plugins.Tensorboard.attach:1
msgid "Attach custom handlers to training or validation engine"
msgstr ""

#: ../../api/scglue.models.base.TrainingPlugin.rst:27:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.base.TrainingPlugin.logger>`\\"
msgstr ""

#: ../../api/scglue.models.base.TrainingPlugin.attach.rst:2
msgid "scglue.models.base.TrainingPlugin.attach"
msgstr ""

#: of scglue.models.base.TrainingPlugin.attach:4
#: scglue.models.nn.freeze_running_stats:4
#: scglue.models.plugins.EarlyStopping.attach:4
#: scglue.models.plugins.LRScheduler.attach:4
#: scglue.models.plugins.Tensorboard.attach:4
msgid "Network module"
msgstr ""

#: of scglue.models.base.TrainingPlugin.attach:6
#: scglue.models.plugins.EarlyStopping.attach:6
#: scglue.models.plugins.LRScheduler.attach:6
#: scglue.models.plugins.Tensorboard.attach:6
msgid "Trainer object"
msgstr ""

#: ../../api/scglue.models.configure_dataset.rst:2
msgid "scglue.models.configure\\_dataset"
msgstr ""

#: of scglue.models.configure_dataset:4
msgid "Dataset to be configured"
msgstr ""

#: of scglue.models.configure_dataset:6
msgid ""
"Probabilistic generative model used by the decoder, must be one of "
"``{\"Normal\", \"ZIN\", \"ZILN\", \"NB\", \"ZINB\"}``."
msgstr ""

#: of scglue.models.configure_dataset:9
msgid "Whether to use highly variable features"
msgstr ""

#: of scglue.models.configure_dataset:11
msgid "Data layer to use (key in ``adata.layers``)"
msgstr ""

#: of scglue.models.configure_dataset:13
msgid ""
"Data representation to use as the first encoder transformation (key in "
"``adata.obsm``)"
msgstr ""

#: of scglue.models.configure_dataset:16
msgid "Data batch to use (key in ``adata.obs``)"
msgstr ""

#: of scglue.models.configure_dataset:18
msgid "Data cell type to use (key in ``adata.obs``)"
msgstr ""

#: of scglue.models.configure_dataset:20
msgid "Discriminator sample weight to use (key in ``adata.obs``)"
msgstr ""

#: of scglue.models.configure_dataset:22
msgid ""
"Whether to use ``obs_names`` to mark paired cells across different "
"datasets"
msgstr ""

#: of scglue.models.configure_dataset:27
msgid ""
"The ``use_rep`` option applies to encoder inputs, but not the decoders, "
"which are always fitted on data in the original space."
msgstr ""

#: ../../api/scglue.models.data.rst:2
msgid "scglue.models.data"
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1
msgid ":py:obj:`AnnDataset <scglue.models.data.AnnDataset>`"
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1 of
#: scglue.models.data.AnnDataset:1
msgid "Dataset for :class:`anndata.AnnData` objects with partial pairing support."
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1
msgid ":py:obj:`ArrayDataset <scglue.models.data.ArrayDataset>`"
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1
msgid ""
"Array dataset for :class:`numpy.ndarray` and "
":class:`scipy.sparse.spmatrix` objects."
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1
msgid ":py:obj:`DataLoader <scglue.models.data.DataLoader>`"
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1 of
#: scglue.models.data.DataLoader:1
msgid ""
"Custom data loader that manually shuffles the internal dataset before "
"each round of iteration (see :class:`torch.utils.data.DataLoader` for "
"usage)"
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1
msgid ":py:obj:`Dataset <scglue.models.data.Dataset>`"
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1 of
#: scglue.models.data.Dataset:1
msgid ""
"Abstract dataset interface extending that of "
":class:`torch.utils.data.Dataset`"
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1
msgid ":py:obj:`GraphDataset <scglue.models.data.GraphDataset>`"
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1 of
#: scglue.models.data.GraphDataset:1
msgid "Dataset for graphs with support for negative sampling"
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1
msgid ":py:obj:`ParallelDataLoader <scglue.models.data.ParallelDataLoader>`"
msgstr ""

#: ../../api/scglue.models.data.rst:28:<autosummary>:1 of
#: scglue.models.data.ParallelDataLoader:1
msgid "Parallel data loader"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:2
msgid "scglue.models.data.AnnDataset"
msgstr ""

#: of scglue.models.data.AnnDataset:1 scglue.models.data.ArrayDataset:1
#: scglue.models.data.GraphDataset:1
msgid "Bases: :py:class:`~scglue.models.data.Dataset`"
msgstr ""

#: of scglue.models.data.AnnDataset:3
msgid "An arbitrary number of configured :class:`anndata.AnnData` objects"
msgstr ""

#: of scglue.models.data.AnnDataset:5
msgid "Data configurations, one per dataset"
msgstr ""

#: of scglue.models.data.AnnDataset:7
msgid "Data mode, must be one of ``{\"train\", \"eval\"}``"
msgstr ""

#: of scglue.models.data.AnnDataset:9 scglue.models.data.Dataset:4
#: scglue.models.data.GraphDataset:14
msgid "Unitary fetch size for each __getitem__ call"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:24:<autosummary>:1
msgid ":py:obj:`accept_shuffle <scglue.models.data.AnnDataset.accept_shuffle>`"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:24:<autosummary>:1
#: ../../api/scglue.models.data.ArrayDataset.rst:24:<autosummary>:1
#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1
#: ../../api/scglue.models.data.GraphDataset.rst:24:<autosummary>:1 of
#: scglue.models.data.AnnDataset.accept_shuffle:1
#: scglue.models.data.ArrayDataset.accept_shuffle:1
#: scglue.models.data.Dataset.accept_shuffle:1
#: scglue.models.data.GraphDataset.accept_shuffle:1
msgid "Accept shuffling result"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:24:<autosummary>:1
msgid ":py:obj:`propose_shuffle <scglue.models.data.AnnDataset.propose_shuffle>`"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:24:<autosummary>:1
#: ../../api/scglue.models.data.ArrayDataset.rst:24:<autosummary>:1
#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1
#: ../../api/scglue.models.data.GraphDataset.rst:24:<autosummary>:1 of
#: scglue.models.data.AnnDataset.propose_shuffle:1
#: scglue.models.data.ArrayDataset.propose_shuffle:1
#: scglue.models.data.Dataset.propose_shuffle:1
#: scglue.models.data.GraphDataset.propose_shuffle:1
msgid "Propose shuffling using a given random seed"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:24:<autosummary>:1
msgid ":py:obj:`random_split <scglue.models.data.AnnDataset.random_split>`"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:24:<autosummary>:1
#: ../../api/scglue.models.data.ArrayDataset.rst:24:<autosummary>:1 of
#: scglue.models.data.AnnDataset.random_split:1
#: scglue.models.data.ArrayDataset.random_split:1
msgid ""
"Randomly split the dataset into multiple subdatasets according to given "
"fractions."
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:31:<autosummary>:1
msgid ":py:obj:`adatas <scglue.models.data.AnnDataset.adatas>`\\"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:31:<autosummary>:1
msgid "Internal :class:`AnnData` objects"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:31:<autosummary>:1
msgid ":py:obj:`data_configs <scglue.models.data.AnnDataset.data_configs>`\\"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:31:<autosummary>:1
msgid "Data configuration for each dataset"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.rst:31:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.data.AnnDataset.logger>`\\"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.accept_shuffle.rst:2
msgid "scglue.models.data.AnnDataset.accept\\_shuffle"
msgstr ""

#: of scglue.models.data.AnnDataset.accept_shuffle:4
#: scglue.models.data.ArrayDataset.accept_shuffle:4
#: scglue.models.data.Dataset.accept_shuffle:4
#: scglue.models.data.GraphDataset.accept_shuffle:4
msgid "Shuffled result"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.propose_shuffle.rst:2
msgid "scglue.models.data.AnnDataset.propose\\_shuffle"
msgstr ""

#: of scglue.models.data.AnnDataset.propose_shuffle:7
#: scglue.models.data.ArrayDataset.propose_shuffle:7
#: scglue.models.data.Dataset.propose_shuffle:7
#: scglue.models.data.GraphDataset.propose_shuffle:7
msgid "*shuffled* -- Shuffled result"
msgstr ""

#: ../../api/scglue.models.data.AnnDataset.random_split.rst:2
msgid "scglue.models.data.AnnDataset.random\\_split"
msgstr ""

#: of scglue.models.data.AnnDataset.random_split:5
#: scglue.models.data.ArrayDataset.random_split:5
msgid "Fraction of each split"
msgstr ""

#: of scglue.models.data.AnnDataset.random_split:9
msgid ":py:class:`typing.List`\\[:py:class:`scglue.models.data.AnnDataset`]"
msgstr ""

#: of scglue.models.data.AnnDataset.random_split:10
#: scglue.models.data.ArrayDataset.random_split:10
msgid "*subdatasets* -- A list of splitted subdatasets"
msgstr ""

#: ../../api/scglue.models.data.ArrayDataset.rst:2
msgid "scglue.models.data.ArrayDataset"
msgstr ""

#: of scglue.models.data.ArrayDataset:1
msgid ""
"Array dataset for :class:`numpy.ndarray` and "
":class:`scipy.sparse.spmatrix` objects. Different arrays are considered "
"as unpaired, and thus do not need to have identical sizes in the first "
"dimension. Smaller arrays are recycled. Also, data fetched from this "
"dataset are automatically densified."
msgstr ""

#: of scglue.models.data.ArrayDataset:6
msgid "An arbitrary number of data arrays"
msgstr ""

#: of scglue.models.data.ArrayDataset:10
msgid ""
"We keep using arrays because sparse tensors do not support slicing. "
"Arrays are only converted to tensors after minibatch slicing."
msgstr ""

#: ../../api/scglue.models.data.ArrayDataset.rst:24:<autosummary>:1
msgid ":py:obj:`accept_shuffle <scglue.models.data.ArrayDataset.accept_shuffle>`"
msgstr ""

#: ../../api/scglue.models.data.ArrayDataset.rst:24:<autosummary>:1
msgid ""
":py:obj:`propose_shuffle "
"<scglue.models.data.ArrayDataset.propose_shuffle>`"
msgstr ""

#: ../../api/scglue.models.data.ArrayDataset.rst:24:<autosummary>:1
msgid ":py:obj:`random_split <scglue.models.data.ArrayDataset.random_split>`"
msgstr ""

#: ../../api/scglue.models.data.ArrayDataset.rst:30:<autosummary>:1
msgid ":py:obj:`arrays <scglue.models.data.ArrayDataset.arrays>`\\"
msgstr ""

#: ../../api/scglue.models.data.ArrayDataset.rst:30:<autosummary>:1
msgid "Internal array objects"
msgstr ""

#: ../../api/scglue.models.data.ArrayDataset.rst:30:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.data.ArrayDataset.logger>`\\"
msgstr ""

#: ../../api/scglue.models.data.ArrayDataset.accept_shuffle.rst:2
msgid "scglue.models.data.ArrayDataset.accept\\_shuffle"
msgstr ""

#: ../../api/scglue.models.data.ArrayDataset.propose_shuffle.rst:2
msgid "scglue.models.data.ArrayDataset.propose\\_shuffle"
msgstr ""

#: of scglue.models.data.ArrayDataset.propose_shuffle:6
msgid ":py:class:`typing.List`\\[:py:class:`numpy.ndarray`]"
msgstr ""

#: ../../api/scglue.models.data.ArrayDataset.random_split.rst:2
msgid "scglue.models.data.ArrayDataset.random\\_split"
msgstr ""

#: of scglue.models.data.ArrayDataset.random_split:9
msgid ":py:class:`typing.List`\\[:py:class:`scglue.models.data.ArrayDataset`]"
msgstr ""

#: ../../api/scglue.models.data.DataLoader.rst:2
msgid "scglue.models.data.DataLoader"
msgstr ""

#: of scglue.models.data.DataLoader:1
msgid "Bases: :py:class:`~torch.utils.data.dataloader.DataLoader`"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:2
msgid "scglue.models.data.Dataset"
msgstr ""

#: of scglue.models.data.Dataset:1
msgid "Bases: :py:class:`~torch.utils.data.dataset.Dataset`"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1
msgid ":py:obj:`accept_shuffle <scglue.models.data.Dataset.accept_shuffle>`"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1
msgid ":py:obj:`clean <scglue.models.data.Dataset.clean>`"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1 of
#: scglue.models.data.Dataset.clean:1
msgid "Clean up multi-process resources used in custom shuffling"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1
msgid ":py:obj:`prepare_shuffle <scglue.models.data.Dataset.prepare_shuffle>`"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1 of
#: scglue.models.data.Dataset.prepare_shuffle:1
msgid "Prepare dataset for custom shuffling"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1
msgid ":py:obj:`propose_shuffle <scglue.models.data.Dataset.propose_shuffle>`"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1
msgid ":py:obj:`shuffle <scglue.models.data.Dataset.shuffle>`"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1 of
#: scglue.models.data.Dataset.shuffle:1
msgid "Custom shuffling"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1
msgid ":py:obj:`shuffle_worker <scglue.models.data.Dataset.shuffle_worker>`"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:27:<autosummary>:1 of
#: scglue.models.data.Dataset.shuffle_worker:1
msgid "Background shuffle worker"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:33:<autosummary>:1
msgid ":py:obj:`has_workers <scglue.models.data.Dataset.has_workers>`\\"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:33:<autosummary>:1
msgid "Whether background shuffling workers have been registered"
msgstr ""

#: ../../api/scglue.models.data.Dataset.rst:33:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.data.Dataset.logger>`\\"
msgstr ""

#: ../../api/scglue.models.data.Dataset.accept_shuffle.rst:2
msgid "scglue.models.data.Dataset.accept\\_shuffle"
msgstr ""

#: ../../api/scglue.models.data.Dataset.clean.rst:2
msgid "scglue.models.data.Dataset.clean"
msgstr ""

#: ../../api/scglue.models.data.Dataset.prepare_shuffle.rst:2
msgid "scglue.models.data.Dataset.prepare\\_shuffle"
msgstr ""

#: of scglue.models.data.Dataset.prepare_shuffle:4
msgid "Number of background workers for data shuffling"
msgstr ""

#: of scglue.models.data.Dataset.prepare_shuffle:6
msgid "Initial random seed (will increase by 1 with every shuffle call)"
msgstr ""

#: ../../api/scglue.models.data.Dataset.propose_shuffle.rst:2
msgid "scglue.models.data.Dataset.propose\\_shuffle"
msgstr ""

#: of scglue.models.data.Dataset.propose_shuffle:6 scglue.num.prod:6
#: scglue.utils.get_chained_attr:8
msgid ":py:data:`typing.Any`"
msgstr ""

#: ../../api/scglue.models.data.Dataset.shuffle.rst:2
msgid "scglue.models.data.Dataset.shuffle"
msgstr ""

#: ../../api/scglue.models.data.Dataset.shuffle_worker.rst:2
msgid "scglue.models.data.Dataset.shuffle\\_worker"
msgstr ""

#: ../../api/scglue.models.data.GraphDataset.rst:2
msgid "scglue.models.data.GraphDataset"
msgstr ""

#: of scglue.models.data.GraphDataset:4
#: scglue.models.data.GraphDataset.graph2triplet:4
msgid "Graph object"
msgstr ""

#: of scglue.models.data.GraphDataset:6
msgid "Indexer of graph vertices"
msgstr ""

#: of scglue.models.data.GraphDataset:8
msgid "Number of negative samples per edge"
msgstr ""

#: of scglue.models.data.GraphDataset:10
msgid "Whether to do negative sampling based on vertex importance"
msgstr ""

#: of scglue.models.data.GraphDataset:12
msgid "Whether to deemphasize self-loops when computing vertex importance"
msgstr ""

#: of scglue.models.data.GraphDataset:16
msgid "Custom shuffling performs negative sampling."
msgstr ""

#: ../../api/scglue.models.data.GraphDataset.rst:24:<autosummary>:1
msgid ":py:obj:`accept_shuffle <scglue.models.data.GraphDataset.accept_shuffle>`"
msgstr ""

#: ../../api/scglue.models.data.GraphDataset.rst:24:<autosummary>:1
msgid ":py:obj:`graph2triplet <scglue.models.data.GraphDataset.graph2triplet>`"
msgstr ""

#: ../../api/scglue.models.data.GraphDataset.rst:24:<autosummary>:1 of
#: scglue.models.data.GraphDataset.graph2triplet:1
msgid "Convert graph object to graph triplet"
msgstr ""

#: ../../api/scglue.models.data.GraphDataset.rst:24:<autosummary>:1
msgid ""
":py:obj:`propose_shuffle "
"<scglue.models.data.GraphDataset.propose_shuffle>`"
msgstr ""

#: ../../api/scglue.models.data.GraphDataset.rst:29:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.data.GraphDataset.logger>`\\"
msgstr ""

#: ../../api/scglue.models.data.GraphDataset.accept_shuffle.rst:2
msgid "scglue.models.data.GraphDataset.accept\\_shuffle"
msgstr ""

#: ../../api/scglue.models.data.GraphDataset.graph2triplet.rst:2
msgid "scglue.models.data.GraphDataset.graph2triplet"
msgstr ""

#: of scglue.models.data.GraphDataset.graph2triplet:6
msgid "Graph vertices"
msgstr ""

#: of scglue.models.data.GraphDataset.graph2triplet:8
#: scglue.models.data.GraphDataset.propose_shuffle:6
msgid ""
":py:data:`typing.Tuple`\\[:py:class:`numpy.ndarray`, "
":py:class:`numpy.ndarray`, :py:class:`numpy.ndarray`]"
msgstr ""

#: of scglue.models.data.GraphDataset.graph2triplet:9
msgid ""
"* *eidx* -- Vertex indices of edges (:math:`2 \\times n_{edges}`) * *ewt*"
" -- Weight of edges (:math:`n_{edges}`) * *esgn* -- Sign of edges "
"(:math:`n_{edges}`)"
msgstr ""

#: of scglue.models.data.GraphDataset.graph2triplet:9
msgid "*eidx* -- Vertex indices of edges (:math:`2 \\times n_{edges}`)"
msgstr ""

#: of scglue.models.data.GraphDataset.graph2triplet:10
msgid "*ewt* -- Weight of edges (:math:`n_{edges}`)"
msgstr ""

#: of scglue.models.data.GraphDataset.graph2triplet:11
msgid "*esgn* -- Sign of edges (:math:`n_{edges}`)"
msgstr ""

#: ../../api/scglue.models.data.GraphDataset.propose_shuffle.rst:2
msgid "scglue.models.data.GraphDataset.propose\\_shuffle"
msgstr ""

#: ../../api/scglue.models.data.ParallelDataLoader.rst:2
msgid "scglue.models.data.ParallelDataLoader"
msgstr ""

#: of scglue.models.data.ParallelDataLoader:3
msgid "An arbitrary number of data loaders"
msgstr ""

#: of scglue.models.data.ParallelDataLoader:5
msgid ""
"Whether each data loader should be cycled in case they are of different "
"lengths, by default none of them are cycled."
msgstr ""

#: ../../api/scglue.models.dx.rst:2
msgid "scglue.models.dx"
msgstr ""

#: ../../api/scglue.models.dx.rst:18:<autosummary>:1
msgid ""
":py:obj:`integration_consistency "
"<scglue.models.dx.integration_consistency>`"
msgstr ""

#: ../../api/scglue.models.dx.rst:18:<autosummary>:1 of
#: scglue.models.dx.integration_consistency:1
msgid ""
"Integration consistency score, defined as the consistency between "
"aligned-space meta-cell correlation and the guidance graph"
msgstr ""

#: ../../api/scglue.models.dx.integration_consistency.rst:2
msgid "scglue.models.dx.integration\\_consistency"
msgstr ""

#: of scglue.models.dx.integration_consistency:5
msgid "Integration model to be evaluated"
msgstr ""

#: of scglue.models.dx.integration_consistency:7
#: scglue.models.scglue.PairedSCGLUEModel:4 scglue.models.scglue.SCGLUEModel:4
#: scglue.models.scglue.SCGLUEModel.fit:4
#: scglue.models.scglue.SCGLUEModel.get_losses:4
msgid "Datasets (indexed by modality name)"
msgstr ""

#: of scglue.models.dx.integration_consistency:9 scglue.models.fit_SCGLUE:6
#: scglue.models.scglue.SCGLUEModel.decode_data:10
#: scglue.models.scglue.SCGLUEModel.fit:6
#: scglue.models.scglue.SCGLUEModel.get_losses:6
msgid "Guidance graph"
msgstr ""

#: of scglue.models.dx.integration_consistency:10
msgid ""
"Additional keyword arguments are passed to "
":func:`scglue.data.metacell_corr`"
msgstr ""

#: of scglue.models.dx.integration_consistency:14
msgid "*consistency_df* -- Consistency score at different numbers of meta cells"
msgstr ""

#: ../../api/scglue.models.fit_SCGLUE.rst:2
msgid "scglue.models.fit\\_SCGLUE"
msgstr ""

#: of scglue.models.fit_SCGLUE:4
msgid "Single-cell datasets (indexed by modality name)"
msgstr ""

#: of scglue.models.fit_SCGLUE:8
msgid ""
"Model class, must be one of {:class:`scglue.models.scglue.SCGLUEModel`, "
":class:`scglue.models.scglue.PairedSCGLUEModel`}"
msgstr ""

#: of scglue.models.fit_SCGLUE:12
msgid ""
"Model initialization keyword arguments (see the constructor of the "
"``model`` class, either :class:`scglue.models.scglue.SCGLUEModel` or "
":class:`scglue.models.scglue.PairedSCGLUEModel`)"
msgstr ""

#: of scglue.models.fit_SCGLUE:17
msgid ""
"Model compile keyword arguments (see the ``compile`` method of the "
"``model`` class, either :meth:`scglue.models.scglue.SCGLUEModel.compile` "
"or :meth:`scglue.models.scglue.PairedSCGLUEModel.compile`)"
msgstr ""

#: of scglue.models.fit_SCGLUE:22
msgid ""
"Model fitting keyword arguments (see "
":meth:`scglue.models.scglue.SCGLUEModel.fit`)"
msgstr ""

#: of scglue.models.fit_SCGLUE:25
msgid ""
"Balancing weight estimation keyword arguments (see "
":func:`scglue.data.estimate_balancing_weight`)"
msgstr ""

#: of scglue.models.fit_SCGLUE:28
msgid ":py:class:`scglue.models.scglue.SCGLUEModel`"
msgstr ""

#: of scglue.models.fit_SCGLUE:29
msgid "*model* -- Fitted model object"
msgstr ""

#: ../../api/scglue.models.glue.rst:2
msgid "scglue.models.glue"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1
msgid ":py:obj:`DataDecoder <scglue.models.glue.DataDecoder>`"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1
#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.glue.DataDecoder:1 scglue.models.sc.DataDecoder:1
msgid "Abstract data decoder"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1
msgid ":py:obj:`DataEncoder <scglue.models.glue.DataEncoder>`"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1
#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.glue.DataEncoder:1 scglue.models.sc.DataEncoder:1
msgid "Abstract data encoder"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1
msgid ":py:obj:`Discriminator <scglue.models.glue.Discriminator>`"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1 of
#: scglue.models.glue.Discriminator:1
msgid "Abstract modality discriminator"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1
msgid ":py:obj:`GLUE <scglue.models.glue.GLUE>`"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1 of
#: scglue.models.glue.GLUE:1
msgid "Base class for GLUE (Graph-Linked Unified Embedding) network"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1
msgid ":py:obj:`GLUETrainer <scglue.models.glue.GLUETrainer>`"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1 of
#: scglue.models.glue.GLUETrainer:1
msgid "Trainer for :class:`GLUE`"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1
msgid ":py:obj:`GraphDecoder <scglue.models.glue.GraphDecoder>`"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1 of
#: scglue.models.glue.GraphDecoder:1
msgid "Abstract graph decoder"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1
msgid ":py:obj:`GraphEncoder <scglue.models.glue.GraphEncoder>`"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1 of
#: scglue.models.glue.GraphEncoder:1
msgid "Abstract graph encoder"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1
msgid ":py:obj:`Prior <scglue.models.glue.Prior>`"
msgstr ""

#: ../../api/scglue.models.glue.rst:30:<autosummary>:1 of
#: scglue.models.glue.Prior:1
msgid "Abstract prior distribution"
msgstr ""

#: ../../api/scglue.models.glue.DataDecoder.rst:2
msgid "scglue.models.glue.DataDecoder"
msgstr ""

#: of scglue.models.glue.DataDecoder:1 scglue.models.glue.DataEncoder:1
#: scglue.models.glue.Discriminator:1 scglue.models.glue.GLUE:1
#: scglue.models.glue.GraphDecoder:1 scglue.models.glue.GraphEncoder:1
#: scglue.models.glue.Prior:1 scglue.models.nn.GraphAttent:1
#: scglue.models.nn.GraphConv:1 scglue.models.scclue.SCCLUE:1
#: scglue.models.scclue.Transferrable:1
msgid "Bases: :py:class:`~torch.nn.modules.module.Module`"
msgstr ""

#: ../../api/scglue.models.glue.DataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.glue.DataDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.glue.DataDecoder.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.DataDecoder.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.NBDataDecoder.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.NormalDataDecoder.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.ZILNDataDecoder.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.ZINBDataDecoder.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.ZINDataDecoder.rst:22:<autosummary>:1 of
#: scglue.models.glue.DataDecoder.forward:1
#: scglue.models.sc.DataDecoder.forward:1
#: scglue.models.sc.NBDataDecoder.forward:1
#: scglue.models.sc.NormalDataDecoder.forward:1
#: scglue.models.sc.ZILNDataDecoder.forward:1
#: scglue.models.sc.ZINBDataDecoder.forward:1
#: scglue.models.sc.ZINDataDecoder.forward:1
msgid "Decode data from sample and feature latent"
msgstr ""

#: ../../api/scglue.models.glue.DataDecoder.forward.rst:2
msgid "scglue.models.glue.DataDecoder.forward"
msgstr ""

#: of scglue.models.glue.DataDecoder.forward:4
#: scglue.models.glue.Discriminator.forward:4
#: scglue.models.sc.DataDecoder.forward:4
#: scglue.models.sc.Discriminator.forward:3
#: scglue.models.sc.IndDataDecoder.forward:4
#: scglue.models.sc.NBDataDecoder.forward:4
#: scglue.models.sc.NormalDataDecoder.forward:4
#: scglue.models.sc.ZILNDataDecoder.forward:4
#: scglue.models.sc.ZINBDataDecoder.forward:4
#: scglue.models.sc.ZINDataDecoder.forward:4
msgid "Sample latent"
msgstr ""

#: of scglue.models.glue.DataDecoder.forward:6
#: scglue.models.sc.DataDecoder.forward:6
#: scglue.models.sc.NBDataDecoder.forward:6
#: scglue.models.sc.NormalDataDecoder.forward:6
#: scglue.models.sc.ZILNDataDecoder.forward:6
#: scglue.models.sc.ZINBDataDecoder.forward:6
#: scglue.models.sc.ZINDataDecoder.forward:6
msgid "Feature latent"
msgstr ""

#: ../../api/scglue.models.scclue.DataDecoder.rst:23:<autosummary>:1 of
#: scglue.models.glue.DataDecoder.forward:8
#: scglue.models.glue.DataEncoder.forward:6
#: scglue.models.glue.GraphDecoder.forward:10
#: scglue.models.glue.GraphEncoder.forward:10
#: scglue.models.glue.Prior.forward:3
#: scglue.models.sc.IndDataDecoder.forward:10
#: scglue.models.scclue.DataDecoder.compute_dist:2
#: scglue.models.scclue.DataDecoder.forward:12
msgid ":py:class:`torch.distributions.distribution.Distribution`"
msgstr ""

#: of scglue.models.glue.DataDecoder.forward:9
#: scglue.models.sc.DataDecoder.forward:13
#: scglue.models.sc.IndDataDecoder.forward:11
#: scglue.models.sc.NBDataDecoder.forward:13
#: scglue.models.sc.NormalDataDecoder.forward:13
#: scglue.models.sc.ZILNDataDecoder.forward:13
#: scglue.models.sc.ZINBDataDecoder.forward:13
#: scglue.models.sc.ZINDataDecoder.forward:13
msgid "*recon* -- Data reconstruction distribution"
msgstr ""

#: ../../api/scglue.models.glue.DataEncoder.rst:2
msgid "scglue.models.glue.DataEncoder"
msgstr ""

#: ../../api/scglue.models.glue.DataEncoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.glue.DataEncoder.forward>`"
msgstr ""

#: ../../api/scglue.models.glue.DataEncoder.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.DataEncoder.rst:24:<autosummary>:1 of
#: scglue.models.glue.DataEncoder.forward:1
#: scglue.models.sc.DataEncoder.forward:1
msgid "Encode data to sample latent distribution"
msgstr ""

#: ../../api/scglue.models.glue.DataEncoder.forward.rst:2
msgid "scglue.models.glue.DataEncoder.forward"
msgstr ""

#: of scglue.models.glue.DataEncoder.forward:4
#: scglue.models.sc.DataEncoder.compute_l:4
#: scglue.models.sc.DataEncoder.forward:4
#: scglue.models.sc.DataEncoder.normalize:4
#: scglue.models.sc.NBDataEncoder.compute_l:4
#: scglue.models.sc.NBDataEncoder.normalize:4
#: scglue.models.sc.VanillaDataEncoder.compute_l:4
#: scglue.models.sc.VanillaDataEncoder.normalize:4
msgid "Input data"
msgstr ""

#: of scglue.models.glue.DataEncoder.forward:7
#: scglue.models.sc.DataEncoder.forward:12
msgid "*u* -- Sample latent distribution"
msgstr ""

#: ../../api/scglue.models.glue.Discriminator.rst:2
msgid "scglue.models.glue.Discriminator"
msgstr ""

#: ../../api/scglue.models.glue.Discriminator.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.glue.Discriminator.forward>`"
msgstr ""

#: ../../api/scglue.models.glue.Discriminator.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.Discriminator.rst:22:<autosummary>:1 of
#: scglue.models.glue.Discriminator.forward:1
#: scglue.models.sc.Discriminator.forward:1
msgid "Discriminate among modalities"
msgstr ""

#: ../../api/scglue.models.glue.Discriminator.forward.rst:2
msgid "scglue.models.glue.Discriminator.forward"
msgstr ""

#: ../../api/scglue.models.scclue.CompositeDataEncoder.rst:24:<autosummary>:1
#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.rst:23:<autosummary>:1
#: ../../api/scglue.models.scclue.VanillaCompositeDataEncoder.rst:23:<autosummary>:1
#: of scglue.models.glue.Discriminator.forward:6
#: scglue.models.nn.GraphAttent.forward:12
#: scglue.models.nn.GraphConv.forward:12 scglue.models.prob.ZILN.log_prob:5
#: scglue.models.prob.ZIN.log_prob:9 scglue.models.prob.ZINB.log_prob:9
#: scglue.models.sc.DataEncoder.normalize:8
#: scglue.models.sc.Discriminator.forward:5
#: scglue.models.sc.NBDataEncoder.compute_l:6
#: scglue.models.sc.NBDataEncoder.normalize:8
#: scglue.models.sc.VanillaDataEncoder.normalize:8
#: scglue.models.scclue.CompositeDataEncoder.normalize:2
#: scglue.models.scclue.Discriminator.forward:12
#: scglue.models.scclue.NBCompositeDataEncoder.normalize:2
#: scglue.models.scclue.VanillaCompositeDataEncoder.normalize:2
msgid ":py:class:`torch.Tensor`"
msgstr ""

#: of scglue.models.glue.Discriminator.forward:7
#: scglue.models.sc.Discriminator.forward:6
msgid "*logits* -- Modality logits"
msgstr ""

#: ../../api/scglue.models.glue.GLUE.rst:2
msgid "scglue.models.glue.GLUE"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.glue.GLUE:4 scglue.models.sc.GraphEncoder:1
#: scglue.models.scglue.IndSCGLUE:4 scglue.models.scglue.SCGLUE:4
msgid "Graph encoder"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.glue.GLUE:6 scglue.models.sc.GraphDecoder:1
#: scglue.models.scglue.IndSCGLUE:6 scglue.models.scglue.SCGLUE:6
msgid "Graph decoder"
msgstr ""

#: of scglue.models.glue.GLUE:8 scglue.models.scglue.IndSCGLUE:8
#: scglue.models.scglue.SCGLUE:8
msgid "Data encoders (indexed by modality name)"
msgstr ""

#: of scglue.models.glue.GLUE:10 scglue.models.scglue.IndSCGLUE:10
#: scglue.models.scglue.SCGLUE:10
msgid "Data decoders (indexed by modality name)"
msgstr ""

#: of scglue.models.glue.GLUE:12 scglue.models.scglue.IndSCGLUE:12
#: scglue.models.scglue.SCGLUE:12
msgid "Feature indices among graph vertices (indexed by modality name)"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.glue.GLUE:14 scglue.models.sc.Discriminator:1
#: scglue.models.scglue.IndSCGLUE:14 scglue.models.scglue.SCGLUE:14
msgid "Modality discriminator"
msgstr ""

#: of scglue.models.glue.GLUE:16 scglue.models.scglue.IndSCGLUE:16
#: scglue.models.scglue.SCGLUE:16
msgid "Latent prior"
msgstr ""

#: ../../api/scglue.models.glue.GLUE.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.glue.GLUE.forward>`"
msgstr ""

#: ../../api/scglue.models.glue.GLUE.rst:22:<autosummary>:1 of
#: scglue.models.glue.GLUE.forward:1
msgid "Invalidated forward operation"
msgstr ""

#: ../../api/scglue.models.glue.GLUE.rst:27:<autosummary>:1
msgid ":py:obj:`device <scglue.models.glue.GLUE.device>`\\"
msgstr ""

#: ../../api/scglue.models.glue.GLUE.rst:27:<autosummary>:1
msgid "Device of the module"
msgstr ""

#: ../../api/scglue.models.glue.GLUE.forward.rst:2
msgid "scglue.models.glue.GLUE.forward"
msgstr ""

#: of scglue.models.glue.GLUE.forward:4 scglue.models.scclue.SCCLUE.forward:12
msgid ":py:data:`typing.NoReturn`"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:2
msgid "scglue.models.glue.GLUETrainer"
msgstr ""

#: of scglue.models.glue.GLUETrainer:1 scglue.models.scclue.SCCLUETrainer:1
msgid "Bases: :py:class:`~scglue.models.base.Trainer`"
msgstr ""

#: of scglue.models.glue.GLUETrainer:4
msgid ":class:`GLUE` network to be trained"
msgstr ""

#: of scglue.models.glue.GLUETrainer:6
#: scglue.models.scglue.PairedSCGLUEModel.compile:4
#: scglue.models.scglue.PairedSCGLUETrainer:6
#: scglue.models.scglue.SCGLUEModel.compile:4
#: scglue.models.scglue.SCGLUETrainer:6
msgid "Data weight"
msgstr ""

#: of scglue.models.glue.GLUETrainer:8
#: scglue.models.scglue.PairedSCGLUEModel.compile:8
#: scglue.models.scglue.PairedSCGLUETrainer:10
#: scglue.models.scglue.SCGLUEModel.compile:8
#: scglue.models.scglue.SCGLUETrainer:10
msgid "Graph weight"
msgstr ""

#: of scglue.models.glue.GLUETrainer:10
#: scglue.models.scglue.PairedSCGLUEModel.compile:10
#: scglue.models.scglue.PairedSCGLUETrainer:12
#: scglue.models.scglue.SCGLUEModel.compile:10
#: scglue.models.scglue.SCGLUETrainer:12
msgid "Adversarial alignment weight"
msgstr ""

#: of scglue.models.glue.GLUETrainer:12
#: scglue.models.scglue.PairedSCGLUEModel.compile:22
#: scglue.models.scglue.PairedSCGLUETrainer:24
#: scglue.models.scglue.SCGLUEModel.compile:16
#: scglue.models.scglue.SCGLUETrainer:18
msgid "Relative modality weight (indexed by modality name)"
msgstr ""

#: of scglue.models.glue.GLUETrainer:14
#: scglue.models.scglue.PairedSCGLUETrainer:26
#: scglue.models.scglue.SCGLUETrainer:20
msgid "Optimizer"
msgstr ""

#: of scglue.models.glue.GLUETrainer:16
#: scglue.models.scglue.PairedSCGLUEModel.compile:24
#: scglue.models.scglue.PairedSCGLUETrainer:28
#: scglue.models.scglue.SCGLUEModel.compile:18
#: scglue.models.scglue.SCGLUETrainer:22
msgid "Learning rate"
msgstr ""

#: of scglue.models.glue.GLUETrainer:17
#: scglue.models.scglue.PairedSCGLUETrainer:29
#: scglue.models.scglue.SCGLUETrainer:23
msgid "Additional keyword arguments are passed to the optimizer constructor"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
msgid ":py:obj:`compute_losses <scglue.models.glue.GLUETrainer.compute_losses>`"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
#: ../../api/scglue.models.scglue.PairedSCGLUETrainer.rst:23:<autosummary>:1
#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:24:<autosummary>:1 of
#: scglue.models.glue.GLUETrainer.compute_losses:1
#: scglue.models.scglue.PairedSCGLUETrainer.compute_losses:1
#: scglue.models.scglue.SCGLUETrainer.compute_losses:1
msgid "Compute loss functions"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
msgid ":py:obj:`fit <scglue.models.glue.GLUETrainer.fit>`"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
msgid ":py:obj:`format_data <scglue.models.glue.GLUETrainer.format_data>`"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
#: ../../api/scglue.models.scglue.PairedSCGLUETrainer.rst:23:<autosummary>:1
#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:24:<autosummary>:1 of
#: scglue.models.glue.GLUETrainer.format_data:1
#: scglue.models.scglue.PairedSCGLUETrainer.format_data:1
#: scglue.models.scglue.SCGLUETrainer.format_data:1
msgid "Format data tensors"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
msgid ":py:obj:`get_losses <scglue.models.glue.GLUETrainer.get_losses>`"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
msgid ":py:obj:`load_state_dict <scglue.models.glue.GLUETrainer.load_state_dict>`"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
msgid ":py:obj:`state_dict <scglue.models.glue.GLUETrainer.state_dict>`"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
msgid ":py:obj:`train_step <scglue.models.glue.GLUETrainer.train_step>`"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:29:<autosummary>:1
msgid ":py:obj:`val_step <scglue.models.glue.GLUETrainer.val_step>`"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.rst:34:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.glue.GLUETrainer.logger>`\\"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.compute_losses.rst:2
msgid "scglue.models.glue.GLUETrainer.compute\\_losses"
msgstr ""

#: of scglue.models.glue.GLUETrainer.compute_losses:4
#: scglue.models.scglue.PairedSCGLUETrainer.compute_losses:4
#: scglue.models.scglue.SCGLUETrainer.compute_losses:4
msgid "Data tensors"
msgstr ""

#: of scglue.models.glue.GLUETrainer.compute_losses:6
#: scglue.models.scglue.PairedSCGLUETrainer.compute_losses:6
#: scglue.models.scglue.SCGLUETrainer.compute_losses:6
msgid "Current epoch number"
msgstr ""

#: of scglue.models.glue.GLUETrainer.compute_losses:8
#: scglue.models.scglue.PairedSCGLUETrainer.compute_losses:8
#: scglue.models.scglue.SCGLUETrainer.compute_losses:8
msgid "Whether to compute the discriminator loss only"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.fit.rst:2
msgid "scglue.models.glue.GLUETrainer.fit"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:4
msgid "Data dataset"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:6
msgid "Graph dataset"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:8
#: scglue.models.scglue.SCGLUEModel.fit:10
msgid "Validation split"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:10
msgid "Number of samples in each data minibatch"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:12
#: scglue.models.scglue.SCGLUEModel.fit:14
#: scglue.models.scglue.SCGLUEModel.get_losses:12
msgid "Number of edges in each graph minibatch"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:14
#: scglue.models.scglue.SCGLUEModel.fit:16
msgid "Number of epochs to wait before starting alignment"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:16
#: scglue.models.scglue.SCGLUEModel.fit:18
msgid ""
"Whether to postpone learning rate scheduling and earlystopping until "
"after the burnin stage"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:21
#: scglue.models.scglue.SCGLUEModel.fit:23
msgid "Patience of early stopping"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:23 scglue.models.plugins.LRScheduler:7
#: scglue.models.scglue.SCGLUEModel.fit:25
msgid "Patience to reduce learning rate"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:25
#: scglue.models.plugins.EarlyStopping:10
#: scglue.models.scglue.SCGLUEModel.fit:27
msgid "Wait n learning rate scheduling events before starting early stopping"
msgstr ""

#: of scglue.models.glue.GLUETrainer.fit:29
#: scglue.models.scglue.SCGLUEModel.fit:29
msgid "Directory to store checkpoints and tensorboard logs"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.format_data.rst:2
msgid "scglue.models.glue.GLUETrainer.format\\_data"
msgstr ""

#: of scglue.models.glue.GLUETrainer.format_data:5
msgid ""
"The data dataset should contain data arrays for each modality in the same"
" order as modality keys of the network."
msgstr ""

#: of scglue.models.glue.GLUETrainer.format_data:9
msgid ""
":py:data:`typing.Tuple`\\[:py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`torch.Tensor`, "
":py:class:`torch.Tensor`, :py:class:`torch.Tensor`]"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.get_losses.rst:2
msgid "scglue.models.glue.GLUETrainer.get\\_losses"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.load_state_dict.rst:2
msgid "scglue.models.glue.GLUETrainer.load\\_state\\_dict"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.state_dict.rst:2
msgid "scglue.models.glue.GLUETrainer.state\\_dict"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.train_step.rst:2
msgid "scglue.models.glue.GLUETrainer.train\\_step"
msgstr ""

#: ../../api/scglue.models.glue.GLUETrainer.val_step.rst:2
msgid "scglue.models.glue.GLUETrainer.val\\_step"
msgstr ""

#: ../../api/scglue.models.glue.GraphDecoder.rst:2
msgid "scglue.models.glue.GraphDecoder"
msgstr ""

#: ../../api/scglue.models.glue.GraphDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.glue.GraphDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.glue.GraphDecoder.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.GraphDecoder.rst:22:<autosummary>:1 of
#: scglue.models.glue.GraphDecoder.forward:1
#: scglue.models.sc.GraphDecoder.forward:1
msgid "Decode graph from vertex latent"
msgstr ""

#: ../../api/scglue.models.glue.GraphDecoder.forward.rst:2
msgid "scglue.models.glue.GraphDecoder.forward"
msgstr ""

#: of scglue.models.glue.GraphDecoder.forward:4
#: scglue.models.sc.GraphDecoder.forward:4
msgid "Vertex latent (:math:`n_{vertices} \\times n_{features}`)"
msgstr ""

#: of scglue.models.glue.GraphDecoder.forward:6
#: scglue.models.glue.GraphEncoder.forward:4
#: scglue.models.nn.GraphAttent.forward:6 scglue.models.nn.GraphConv.forward:6
#: scglue.models.sc.GraphDecoder.forward:6
#: scglue.models.sc.GraphEncoder.forward:4 scglue.num.normalize_edges:4
#: scglue.num.vertex_degrees:4
msgid "Vertex indices of edges (:math:`2 \\times n_{edges}`)"
msgstr ""

#: of scglue.models.glue.GraphDecoder.forward:8
#: scglue.models.glue.GraphEncoder.forward:8
#: scglue.models.nn.GraphAttent.forward:10
#: scglue.models.nn.GraphConv.forward:10
#: scglue.models.sc.GraphDecoder.forward:8
#: scglue.models.sc.GraphEncoder.forward:8
msgid "Sign of edges (:math:`n_{edges}`)"
msgstr ""

#: of scglue.models.glue.GraphDecoder.forward:11
#: scglue.models.sc.GraphDecoder.forward:11
msgid "*recon* -- Edge reconstruction distribution (:math:`n_{edges}`)"
msgstr ""

#: ../../api/scglue.models.glue.GraphEncoder.rst:2
msgid "scglue.models.glue.GraphEncoder"
msgstr ""

#: ../../api/scglue.models.glue.GraphEncoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.glue.GraphEncoder.forward>`"
msgstr ""

#: ../../api/scglue.models.glue.GraphEncoder.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.GraphEncoder.rst:22:<autosummary>:1 of
#: scglue.models.glue.GraphEncoder.forward:1
#: scglue.models.sc.GraphEncoder.forward:1
msgid "Encode graph to vertex latent distribution"
msgstr ""

#: ../../api/scglue.models.glue.GraphEncoder.forward.rst:2
msgid "scglue.models.glue.GraphEncoder.forward"
msgstr ""

#: of scglue.models.glue.GraphEncoder.forward:6
#: scglue.models.nn.GraphConv.forward:8 scglue.models.sc.GraphEncoder.forward:6
msgid "Normalized weight of edges (:math:`n_{edges}`)"
msgstr ""

#: of scglue.models.glue.GraphEncoder.forward:11
#: scglue.models.sc.GraphEncoder.forward:11
msgid ""
"*v* -- Vertex latent distribution (:math:`n_{vertices} \\times "
"n_{features}`)"
msgstr ""

#: ../../api/scglue.models.glue.Prior.rst:2
msgid "scglue.models.glue.Prior"
msgstr ""

#: ../../api/scglue.models.glue.Prior.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.glue.Prior.forward>`"
msgstr ""

#: ../../api/scglue.models.glue.Prior.rst:22:<autosummary>:1
#: ../../api/scglue.models.sc.Prior.rst:22:<autosummary>:1 of
#: scglue.models.glue.Prior.forward:1 scglue.models.sc.Prior.forward:1
msgid "Get prior distribution"
msgstr ""

#: ../../api/scglue.models.glue.Prior.forward.rst:2
msgid "scglue.models.glue.Prior.forward"
msgstr ""

#: of scglue.models.glue.Prior.forward:4 scglue.models.sc.Prior.forward:4
msgid "*prior* -- Prior distribution"
msgstr ""

#: ../../api/scglue.models.load_model.rst:2
msgid "scglue.models.load\\_model"
msgstr ""

#: of scglue.models.load_model:6
msgid ":py:class:`scglue.models.base.Model`"
msgstr ""

#: of scglue.models.load_model:7
msgid "*model* -- Loaded model"
msgstr ""

#: ../../api/scglue.models.nn.rst:2
msgid "scglue.models.nn"
msgstr ""

#: ../../api/scglue.models.nn.rst:25:<autosummary>:1
msgid ":py:obj:`autodevice <scglue.models.nn.autodevice>`"
msgstr ""

#: ../../api/scglue.models.nn.rst:25:<autosummary>:1 of
#: scglue.models.nn.autodevice:1
msgid ""
"Get torch computation device automatically based on GPU availability and "
"memory usage"
msgstr ""

#: ../../api/scglue.models.nn.rst:25:<autosummary>:1
msgid ":py:obj:`freeze_running_stats <scglue.models.nn.freeze_running_stats>`"
msgstr ""

#: ../../api/scglue.models.nn.rst:25:<autosummary>:1 of
#: scglue.models.nn.freeze_running_stats:1
msgid "Selectively stops normalization layers from updating running stats"
msgstr ""

#: ../../api/scglue.models.nn.rst:25:<autosummary>:1
msgid ""
":py:obj:`get_default_numpy_dtype "
"<scglue.models.nn.get_default_numpy_dtype>`"
msgstr ""

#: ../../api/scglue.models.nn.rst:25:<autosummary>:1 of
#: scglue.models.nn.get_default_numpy_dtype:1
msgid "Get numpy dtype matching that of the pytorch default dtype"
msgstr ""

#: ../../api/scglue.models.nn.rst:34:<autosummary>:1
msgid ":py:obj:`GraphAttent <scglue.models.nn.GraphAttent>`"
msgstr ""

#: ../../api/scglue.models.nn.rst:34:<autosummary>:1 of
#: scglue.models.nn.GraphAttent:1
msgid "Graph attention"
msgstr ""

#: ../../api/scglue.models.nn.rst:34:<autosummary>:1
msgid ":py:obj:`GraphConv <scglue.models.nn.GraphConv>`"
msgstr ""

#: ../../api/scglue.models.nn.rst:34:<autosummary>:1 of
#: scglue.models.nn.GraphConv:1
msgid "Graph convolution (propagation only)"
msgstr ""

#: ../../api/scglue.models.nn.GraphAttent.rst:2
msgid "scglue.models.nn.GraphAttent"
msgstr ""

#: of scglue.models.nn.GraphAttent:4 scglue.models.sc.Classifier:4
#: scglue.models.sc.DataEncoder:4 scglue.models.sc.Discriminator:4
#: scglue.models.sc.IndDataDecoder:4 scglue.models.sc.NBDataEncoder:4
#: scglue.models.sc.VanillaDataEncoder:4 scglue.models.scclue.Classifier:4
msgid "Input dimensionality"
msgstr ""

#: of scglue.models.nn.GraphAttent:5 scglue.models.sc.Classifier:7
#: scglue.models.sc.DataDecoder:4 scglue.models.sc.DataEncoder:6
#: scglue.models.sc.Discriminator:6 scglue.models.sc.GraphEncoder:6
#: scglue.models.sc.IndDataDecoder:6 scglue.models.sc.NBDataDecoder:4
#: scglue.models.sc.NBDataEncoder:6 scglue.models.sc.NormalDataDecoder:4
#: scglue.models.sc.VanillaDataEncoder:6 scglue.models.sc.ZILNDataDecoder:4
#: scglue.models.sc.ZINBDataDecoder:4 scglue.models.sc.ZINDataDecoder:4
#: scglue.models.scclue.Classifier:7
msgid "Output dimensionality"
msgstr ""

#: of scglue.models.nn.GraphAttent:7 scglue.models.scclue:4
msgid "**EXPERIMENTAL**"
msgstr ""

#: ../../api/scglue.models.nn.GraphAttent.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.nn.GraphAttent.forward>`"
msgstr ""

#: ../../api/scglue.models.nn.GraphAttent.rst:22:<autosummary>:1
#: ../../api/scglue.models.nn.GraphConv.rst:22:<autosummary>:1 of
#: scglue.models.nn.GraphAttent.forward:1 scglue.models.nn.GraphConv.forward:1
msgid "Forward propagation"
msgstr ""

#: ../../api/scglue.models.nn.GraphAttent.forward.rst:2
msgid "scglue.models.nn.GraphAttent.forward"
msgstr ""

#: of scglue.models.nn.GraphAttent.forward:4
#: scglue.models.nn.GraphConv.forward:4
msgid "Input data (:math:`n_{vertices} \\times n_{features}`)"
msgstr ""

#: of scglue.models.nn.GraphAttent.forward:8 scglue.num.normalize_edges:6
#: scglue.num.vertex_degrees:6
msgid "Weight of edges (:math:`n_{edges}`)"
msgstr ""

#: of scglue.models.nn.GraphAttent.forward:13
msgid ""
"*result* -- Graph attention result (:math:`n_{vertices} \\times "
"n_{features}`)"
msgstr ""

#: ../../api/scglue.models.nn.GraphConv.rst:2
msgid "scglue.models.nn.GraphConv"
msgstr ""

#: ../../api/scglue.models.nn.GraphConv.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.nn.GraphConv.forward>`"
msgstr ""

#: ../../api/scglue.models.nn.GraphConv.forward.rst:2
msgid "scglue.models.nn.GraphConv.forward"
msgstr ""

#: of scglue.models.nn.GraphConv.forward:13
msgid ""
"*result* -- Graph convolution result (:math:`n_{vertices} \\times "
"n_{features}`)"
msgstr ""

#: ../../api/scglue.models.nn.autodevice.rst:2
msgid "scglue.models.nn.autodevice"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUE.rst:28:<autosummary>:1 of
#: scglue.models.nn.autodevice:4
msgid ":py:class:`~torch.torch.device`"
msgstr ""

#: of scglue.models.nn.autodevice:5
msgid "*device* -- Computation device"
msgstr ""

#: ../../api/scglue.models.nn.freeze_running_stats.rst:2
msgid "scglue.models.nn.freeze\\_running\\_stats"
msgstr ""

#: ../../api/scglue.models.nn.get_default_numpy_dtype.rst:2
msgid "scglue.models.nn.get\\_default\\_numpy\\_dtype"
msgstr ""

#: of scglue.models.nn.get_default_numpy_dtype:3
msgid ":py:class:`type`"
msgstr ""

#: of scglue.models.nn.get_default_numpy_dtype:4
msgid "*dtype* -- Default numpy dtype"
msgstr ""

#: ../../api/scglue.models.plugins.rst:2
msgid "scglue.models.plugins"
msgstr ""

#: ../../api/scglue.models.plugins.rst:25:<autosummary>:1
msgid ":py:obj:`EarlyStopping <scglue.models.plugins.EarlyStopping>`"
msgstr ""

#: ../../api/scglue.models.plugins.rst:25:<autosummary>:1 of
#: scglue.models.plugins.EarlyStopping:1
msgid "Early stop model training when loss no longer decreases"
msgstr ""

#: ../../api/scglue.models.plugins.rst:25:<autosummary>:1
msgid ":py:obj:`LRScheduler <scglue.models.plugins.LRScheduler>`"
msgstr ""

#: ../../api/scglue.models.plugins.rst:25:<autosummary>:1 of
#: scglue.models.plugins.LRScheduler:1
msgid "Reduce learning rate on loss plateau"
msgstr ""

#: ../../api/scglue.models.plugins.rst:25:<autosummary>:1
msgid ":py:obj:`Tensorboard <scglue.models.plugins.Tensorboard>`"
msgstr ""

#: ../../api/scglue.models.plugins.rst:25:<autosummary>:1 of
#: scglue.models.plugins.Tensorboard:1
msgid "Training logging via tensorboard"
msgstr ""

#: ../../api/scglue.models.plugins.EarlyStopping.rst:2
msgid "scglue.models.plugins.EarlyStopping"
msgstr ""

#: of scglue.models.plugins.EarlyStopping:1 scglue.models.plugins.LRScheduler:1
#: scglue.models.plugins.Tensorboard:1
msgid "Bases: :py:class:`~scglue.models.base.TrainingPlugin`"
msgstr ""

#: of scglue.models.plugins.EarlyStopping:4 scglue.models.plugins.LRScheduler:5
msgid "Loss to monitor"
msgstr ""

#: of scglue.models.plugins.EarlyStopping:6
msgid "Patience to stop early"
msgstr ""

#: of scglue.models.plugins.EarlyStopping:8
msgid "Burn-in epochs to skip before initializing early stopping"
msgstr ""

#: ../../api/scglue.models.plugins.EarlyStopping.rst:22:<autosummary>:1
msgid ":py:obj:`attach <scglue.models.plugins.EarlyStopping.attach>`"
msgstr ""

#: ../../api/scglue.models.plugins.EarlyStopping.rst:27:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.plugins.EarlyStopping.logger>`\\"
msgstr ""

#: ../../api/scglue.models.plugins.EarlyStopping.attach.rst:2
msgid "scglue.models.plugins.EarlyStopping.attach"
msgstr ""

#: ../../api/scglue.models.plugins.LRScheduler.rst:2
msgid "scglue.models.plugins.LRScheduler"
msgstr ""

#: of scglue.models.plugins.LRScheduler:3
msgid "Optimizers"
msgstr ""

#: of scglue.models.plugins.LRScheduler:9
msgid "Burn-in epochs to skip before initializing learning rate scheduling"
msgstr ""

#: ../../api/scglue.models.plugins.LRScheduler.rst:22:<autosummary>:1
msgid ":py:obj:`attach <scglue.models.plugins.LRScheduler.attach>`"
msgstr ""

#: ../../api/scglue.models.plugins.LRScheduler.rst:27:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.plugins.LRScheduler.logger>`\\"
msgstr ""

#: ../../api/scglue.models.plugins.LRScheduler.attach.rst:2
msgid "scglue.models.plugins.LRScheduler.attach"
msgstr ""

#: ../../api/scglue.models.plugins.Tensorboard.rst:2
msgid "scglue.models.plugins.Tensorboard"
msgstr ""

#: ../../api/scglue.models.plugins.Tensorboard.rst:22:<autosummary>:1
msgid ":py:obj:`attach <scglue.models.plugins.Tensorboard.attach>`"
msgstr ""

#: ../../api/scglue.models.plugins.Tensorboard.attach.rst:2
msgid "scglue.models.plugins.Tensorboard.attach"
msgstr ""

#: ../../api/scglue.models.prob.rst:2
msgid "scglue.models.prob"
msgstr ""

#: ../../api/scglue.models.prob.rst:27:<autosummary>:1
msgid ":py:obj:`MSE <scglue.models.prob.MSE>`"
msgstr ""

#: ../../api/scglue.models.prob.rst:27:<autosummary>:1 of
#: scglue.models.prob.MSE:1
msgid "A \"sham\" distribution that outputs negative MSE on ``log_prob``"
msgstr ""

#: ../../api/scglue.models.prob.rst:27:<autosummary>:1
msgid ":py:obj:`RMSE <scglue.models.prob.RMSE>`"
msgstr ""

#: ../../api/scglue.models.prob.rst:27:<autosummary>:1 of
#: scglue.models.prob.RMSE:1
msgid "A \"sham\" distribution that outputs negative RMSE on ``log_prob``"
msgstr ""

#: ../../api/scglue.models.prob.rst:27:<autosummary>:1
msgid ":py:obj:`ZILN <scglue.models.prob.ZILN>`"
msgstr ""

#: ../../api/scglue.models.prob.rst:27:<autosummary>:1 of
#: scglue.models.prob.ZILN:1
msgid "Zero-inflated log-normal distribution with subsetting support"
msgstr ""

#: ../../api/scglue.models.prob.rst:27:<autosummary>:1
msgid ":py:obj:`ZIN <scglue.models.prob.ZIN>`"
msgstr ""

#: ../../api/scglue.models.prob.rst:27:<autosummary>:1 of
#: scglue.models.prob.ZIN:1
msgid "Zero-inflated normal distribution with subsetting support"
msgstr ""

#: ../../api/scglue.models.prob.rst:27:<autosummary>:1
msgid ":py:obj:`ZINB <scglue.models.prob.ZINB>`"
msgstr ""

#: ../../api/scglue.models.prob.rst:27:<autosummary>:1 of
#: scglue.models.prob.ZINB:1
msgid "Zero-inflated negative binomial distribution"
msgstr ""

#: ../../api/scglue.models.prob.MSE.rst:2
msgid "scglue.models.prob.MSE"
msgstr ""

#: of scglue.models.prob.MSE:1
msgid "Bases: :py:class:`~torch.distributions.distribution.Distribution`"
msgstr ""

#: of scglue.models.prob.MSE:4 scglue.models.prob.RMSE:4
msgid "Mean of the distribution"
msgstr ""

#: ../../api/scglue.models.prob.MSE.rst:22:<autosummary>:1
msgid ":py:obj:`log_prob <scglue.models.prob.MSE.log_prob>`"
msgstr ""

#: ../../api/scglue.models.prob.MSE.rst:22:<autosummary>:1
#: ../../api/scglue.models.prob.RMSE.rst:22:<autosummary>:1
#: ../../api/scglue.models.prob.ZIN.rst:22:<autosummary>:1
#: ../../api/scglue.models.prob.ZINB.rst:22:<autosummary>:1 of
#: scglue.models.prob.MSE.log_prob:1 scglue.models.prob.RMSE.log_prob:1
#: scglue.models.prob.ZIN.log_prob:1 scglue.models.prob.ZINB.log_prob:1
msgid ""
"Returns the log of the probability density/mass function evaluated at "
"`value`."
msgstr ""

#: ../../api/scglue.models.prob.MSE.rst:27:<autosummary>:1
msgid ":py:obj:`mean <scglue.models.prob.MSE.mean>`\\"
msgstr ""

#: ../../api/scglue.models.prob.MSE.rst:27:<autosummary>:1
msgid "Returns the mean of the distribution."
msgstr ""

#: ../../api/scglue.models.prob.MSE.log_prob.rst:2
msgid "scglue.models.prob.MSE.log\\_prob"
msgstr ""

#: ../../api/scglue.models.prob.RMSE.rst:2
msgid "scglue.models.prob.RMSE"
msgstr ""

#: of scglue.models.prob.RMSE:1
msgid "Bases: :py:class:`~scglue.models.prob.MSE`"
msgstr ""

#: ../../api/scglue.models.prob.RMSE.rst:22:<autosummary>:1
msgid ":py:obj:`log_prob <scglue.models.prob.RMSE.log_prob>`"
msgstr ""

#: ../../api/scglue.models.prob.RMSE.log_prob.rst:2
msgid "scglue.models.prob.RMSE.log\\_prob"
msgstr ""

#: ../../api/scglue.models.prob.ZILN.rst:2
msgid "scglue.models.prob.ZILN"
msgstr ""

#: of scglue.models.prob.ZILN:1
msgid "Bases: :py:class:`~torch.distributions.log_normal.LogNormal`"
msgstr ""

#: of scglue.models.prob.ZILN:4 scglue.models.prob.ZIN:4
#: scglue.models.prob.ZINB:4
msgid "Zero-inflation logits"
msgstr ""

#: of scglue.models.prob.ZILN:6
msgid "Location of the log-normal distribution"
msgstr ""

#: of scglue.models.prob.ZILN:8
msgid "Scale of the log-normal distribution"
msgstr ""

#: ../../api/scglue.models.prob.ZILN.rst:22:<autosummary>:1
msgid ":py:obj:`log_prob <scglue.models.prob.ZILN.log_prob>`"
msgstr ""

#: ../../api/scglue.models.prob.ZILN.rst:22:<autosummary>:1 of
#: scglue.models.prob.ZILN.log_prob:1
msgid ""
"Scores the sample by inverting the transform(s) and computing the score "
"using the score of the base distribution and the log abs det jacobian."
msgstr ""

#: ../../api/scglue.models.prob.ZILN.log_prob.rst:2
msgid "scglue.models.prob.ZILN.log\\_prob"
msgstr ""

#: ../../api/scglue.models.prob.ZIN.rst:2
msgid "scglue.models.prob.ZIN"
msgstr ""

#: of scglue.models.prob.ZIN:1
msgid "Bases: :py:class:`~torch.distributions.normal.Normal`"
msgstr ""

#: of scglue.models.prob.ZIN:6
msgid "Location of the normal distribution"
msgstr ""

#: of scglue.models.prob.ZIN:8
msgid "Scale of the normal distribution"
msgstr ""

#: ../../api/scglue.models.prob.ZIN.rst:22:<autosummary>:1
msgid ":py:obj:`log_prob <scglue.models.prob.ZIN.log_prob>`"
msgstr ""

#: ../../api/scglue.models.prob.ZIN.log_prob.rst:2
msgid "scglue.models.prob.ZIN.log\\_prob"
msgstr ""

#: ../../api/scglue.models.prob.ZINB.rst:2
msgid "scglue.models.prob.ZINB"
msgstr ""

#: of scglue.models.prob.ZINB:1
msgid "Bases: :py:class:`~torch.distributions.negative_binomial.NegativeBinomial`"
msgstr ""

#: of scglue.models.prob.ZINB:6
msgid "Total count of the negative binomial distribution"
msgstr ""

#: of scglue.models.prob.ZINB:8
msgid "Logits of the negative binomial distribution"
msgstr ""

#: ../../api/scglue.models.prob.ZINB.rst:22:<autosummary>:1
msgid ":py:obj:`log_prob <scglue.models.prob.ZINB.log_prob>`"
msgstr ""

#: ../../api/scglue.models.prob.ZINB.log_prob.rst:2
msgid "scglue.models.prob.ZINB.log\\_prob"
msgstr ""

#: ../../api/scglue.models.sc.rst:2
msgid "scglue.models.sc"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`Classifier <scglue.models.sc.Classifier>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1 of
#: scglue.models.sc.Classifier:1 scglue.models.scclue.Classifier:1
msgid "Linear label classifier"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`DataDecoder <scglue.models.sc.DataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`DataEncoder <scglue.models.sc.DataEncoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`Discriminator <scglue.models.sc.Discriminator>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`GraphDecoder <scglue.models.sc.GraphDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`GraphEncoder <scglue.models.sc.GraphEncoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`IndDataDecoder <scglue.models.sc.IndDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.IndDataDecoder:1
msgid "Data decoder mixin that makes decoding independent of feature latent"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`IndNBDataDecoder <scglue.models.sc.IndNBDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.IndNBDataDecoder:1
msgid "Negative binomial data decoder independent of feature latent"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`IndNormalDataDocoder <scglue.models.sc.IndNormalDataDocoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.IndNormalDataDocoder:1
msgid "Normal data decoder independent of feature latent"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`IndZILNDataDecoder <scglue.models.sc.IndZILNDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.IndZILNDataDecoder:1
msgid "Zero-inflated log-normal data decoder independent of feature latent"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`IndZINBDataDecoder <scglue.models.sc.IndZINBDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.IndZINBDataDecoder:1
msgid "Zero-inflated negative binomial data decoder independent of feature latent"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`IndZINDataDecoder <scglue.models.sc.IndZINDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.IndZINDataDecoder:1
msgid "Zero-inflated normal data decoder independent of feature latent"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`NBDataDecoder <scglue.models.sc.NBDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.NBDataDecoder:1
msgid "Negative binomial data decoder"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`NBDataEncoder <scglue.models.sc.NBDataEncoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.NBDataEncoder:1
msgid "Data encoder for negative binomial data"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`NormalDataDecoder <scglue.models.sc.NormalDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.NormalDataDecoder:1
msgid "Normal data decoder"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`Prior <scglue.models.sc.Prior>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.Prior:1
msgid "Prior distribution"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`VanillaDataEncoder <scglue.models.sc.VanillaDataEncoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.VanillaDataEncoder:1
msgid "Vanilla data encoder"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`ZILNDataDecoder <scglue.models.sc.ZILNDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.ZILNDataDecoder:1
msgid "Zero-inflated log-normal data decoder"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`ZINBDataDecoder <scglue.models.sc.ZINBDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.ZINBDataDecoder:1
msgid "Zero-inflated negative binomial data decoder"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1
msgid ":py:obj:`ZINDataDecoder <scglue.models.sc.ZINDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.sc.rst:42:<autosummary>:1 of
#: scglue.models.sc.ZINDataDecoder:1
msgid "Zero-inflated normal data decoder"
msgstr ""

#: ../../api/scglue.models.sc.Classifier.rst:2
msgid "scglue.models.sc.Classifier"
msgstr ""

#: of scglue.models.sc.Classifier:1
msgid "Bases: :py:class:`~torch.nn.modules.linear.Linear`"
msgstr ""

#: ../../api/scglue.models.sc.DataDecoder.rst:2
msgid "scglue.models.sc.DataDecoder"
msgstr ""

#: of scglue.models.sc.DataDecoder:1
msgid "Bases: :py:class:`~scglue.models.glue.DataDecoder`"
msgstr ""

#: of scglue.models.sc.DataDecoder:6 scglue.models.sc.IndDataDecoder:8
#: scglue.models.sc.NBDataDecoder:6 scglue.models.sc.NormalDataDecoder:6
#: scglue.models.sc.ZILNDataDecoder:6 scglue.models.sc.ZINBDataDecoder:6
#: scglue.models.sc.ZINDataDecoder:6
msgid "Number of batches"
msgstr ""

#: ../../api/scglue.models.sc.DataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.DataDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.DataDecoder.forward.rst:2
msgid "scglue.models.sc.DataDecoder.forward"
msgstr ""

#: of scglue.models.sc.DataDecoder.forward:8
#: scglue.models.sc.IndDataDecoder.forward:6
#: scglue.models.sc.NBDataDecoder.forward:8
#: scglue.models.sc.NormalDataDecoder.forward:8
#: scglue.models.sc.ZILNDataDecoder.forward:8
#: scglue.models.sc.ZINBDataDecoder.forward:8
#: scglue.models.sc.ZINDataDecoder.forward:8
msgid "Batch index"
msgstr ""

#: of scglue.models.sc.DataDecoder.forward:10
#: scglue.models.sc.IndDataDecoder.forward:8
#: scglue.models.sc.NBDataDecoder.forward:10
#: scglue.models.sc.NormalDataDecoder.forward:10
#: scglue.models.sc.ZILNDataDecoder.forward:10
#: scglue.models.sc.ZINBDataDecoder.forward:10
#: scglue.models.sc.ZINDataDecoder.forward:10
msgid "Optional normalizer"
msgstr ""

#: ../../api/scglue.models.scclue.NormalDataDecoder.rst:22:<autosummary>:1 of
#: scglue.models.sc.DataDecoder.forward:12
#: scglue.models.sc.GraphEncoder.forward:10
#: scglue.models.sc.NormalDataDecoder.forward:12
#: scglue.models.sc.Prior.forward:3
#: scglue.models.scclue.NormalDataDecoder.compute_dist:2
msgid ":py:class:`torch.distributions.normal.Normal`"
msgstr ""

#: ../../api/scglue.models.sc.DataEncoder.rst:2
msgid "scglue.models.sc.DataEncoder"
msgstr ""

#: of scglue.models.sc.DataEncoder:1
msgid "Bases: :py:class:`~scglue.models.glue.DataEncoder`"
msgstr ""

#: of scglue.models.sc.DataEncoder:8 scglue.models.sc.Discriminator:8
#: scglue.models.sc.NBDataEncoder:8 scglue.models.sc.VanillaDataEncoder:8
msgid "Hidden layer depth"
msgstr ""

#: of scglue.models.sc.DataEncoder:10 scglue.models.sc.Discriminator:10
#: scglue.models.sc.NBDataEncoder:10 scglue.models.sc.VanillaDataEncoder:10
msgid "Hidden layer dimensionality"
msgstr ""

#: of scglue.models.sc.DataEncoder:12 scglue.models.sc.Discriminator:12
#: scglue.models.sc.NBDataEncoder:12 scglue.models.sc.VanillaDataEncoder:12
#: scglue.models.scglue.PairedSCGLUEModel:14
#: scglue.models.scglue.SCGLUEModel:14
msgid "Dropout rate"
msgstr ""

#: ../../api/scglue.models.sc.DataEncoder.rst:24:<autosummary>:1
msgid ":py:obj:`compute_l <scglue.models.sc.DataEncoder.compute_l>`"
msgstr ""

#: ../../api/scglue.models.sc.DataEncoder.rst:24:<autosummary>:1
#: ../../api/scglue.models.sc.NBDataEncoder.rst:23:<autosummary>:1
#: ../../api/scglue.models.sc.VanillaDataEncoder.rst:23:<autosummary>:1 of
#: scglue.models.sc.DataEncoder.compute_l:1
#: scglue.models.sc.NBDataEncoder.compute_l:1
#: scglue.models.sc.VanillaDataEncoder.compute_l:1
msgid "Compute normalizer"
msgstr ""

#: ../../api/scglue.models.sc.DataEncoder.rst:24:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.DataEncoder.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.DataEncoder.rst:24:<autosummary>:1
msgid ":py:obj:`normalize <scglue.models.sc.DataEncoder.normalize>`"
msgstr ""

#: ../../api/scglue.models.sc.DataEncoder.rst:24:<autosummary>:1
#: ../../api/scglue.models.sc.NBDataEncoder.rst:23:<autosummary>:1
#: ../../api/scglue.models.sc.VanillaDataEncoder.rst:23:<autosummary>:1 of
#: scglue.models.sc.DataEncoder.normalize:1
#: scglue.models.sc.NBDataEncoder.normalize:1
#: scglue.models.sc.VanillaDataEncoder.normalize:1
msgid "Normalize data"
msgstr ""

#: ../../api/scglue.models.sc.DataEncoder.compute_l.rst:2
msgid "scglue.models.sc.DataEncoder.compute\\_l"
msgstr ""

#: ../../api/scglue.models.scclue.CompositeDataEncoder.rst:24:<autosummary>:1
#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.rst:23:<autosummary>:1
#: ../../api/scglue.models.scclue.VanillaCompositeDataEncoder.rst:23:<autosummary>:1
#: of scglue.models.sc.DataEncoder.compute_l:6
#: scglue.models.sc.VanillaDataEncoder.compute_l:6
#: scglue.models.scclue.CompositeDataEncoder.compute_l:2
#: scglue.models.scclue.NBCompositeDataEncoder.compute_l:2
#: scglue.models.scclue.VanillaCompositeDataEncoder.compute_l:2
msgid ":py:data:`typing.Optional`\\[:py:class:`torch.Tensor`]"
msgstr ""

#: of scglue.models.sc.DataEncoder.compute_l:7
#: scglue.models.sc.NBDataEncoder.compute_l:7
#: scglue.models.sc.VanillaDataEncoder.compute_l:7
msgid "*l* -- Normalizer"
msgstr ""

#: ../../api/scglue.models.sc.DataEncoder.forward.rst:2
msgid "scglue.models.sc.DataEncoder.forward"
msgstr ""

#: of scglue.models.sc.DataEncoder.forward:6
msgid "Alternative input data"
msgstr ""

#: of scglue.models.sc.DataEncoder.forward:8
msgid ""
"Whether to skip computing `x` normalizer (just return None) if `xrep` is "
"non-empty"
msgstr ""

#: of scglue.models.sc.DataEncoder.forward:11
#: scglue.models.scclue.CompositeDataEncoder.forward:12
msgid ""
":py:data:`typing.Tuple`\\[:py:class:`torch.distributions.normal.Normal`, "
":py:data:`typing.Optional`\\[:py:class:`torch.Tensor`]]"
msgstr ""

#: of scglue.models.sc.DataEncoder.forward:12
msgid "* *u* -- Sample latent distribution * *normalizer* -- Data normalizer"
msgstr ""

#: of scglue.models.sc.DataEncoder.forward:13
msgid "*normalizer* -- Data normalizer"
msgstr ""

#: of scglue.models.sc.DataEncoder.forward:17
msgid ""
"Normalization is always computed on `x`. If xrep is empty, the normalized"
" `x` will be used as input to the encoder neural network, otherwise xrep "
"is used instead."
msgstr ""

#: ../../api/scglue.models.sc.DataEncoder.normalize.rst:2
msgid "scglue.models.sc.DataEncoder.normalize"
msgstr ""

#: of scglue.models.sc.DataEncoder.normalize:6
#: scglue.models.sc.NBDataEncoder.normalize:6
#: scglue.models.sc.VanillaDataEncoder.normalize:6
msgid "Normalizer"
msgstr ""

#: of scglue.models.sc.DataEncoder.normalize:9
#: scglue.models.sc.NBDataEncoder.normalize:9
#: scglue.models.sc.VanillaDataEncoder.normalize:9
msgid "*xnorm* -- Normalized data"
msgstr ""

#: ../../api/scglue.models.sc.Discriminator.rst:2
msgid "scglue.models.sc.Discriminator"
msgstr ""

#: of scglue.models.sc.Discriminator:1
msgid ""
"Bases: :py:class:`~torch.nn.modules.container.Sequential`, "
":py:class:`~scglue.models.glue.Discriminator`"
msgstr ""

#: ../../api/scglue.models.sc.Discriminator.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.Discriminator.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.Discriminator.forward.rst:2
msgid "scglue.models.sc.Discriminator.forward"
msgstr ""

#: ../../api/scglue.models.sc.GraphDecoder.rst:2
msgid "scglue.models.sc.GraphDecoder"
msgstr ""

#: of scglue.models.sc.GraphDecoder:1
msgid "Bases: :py:class:`~scglue.models.glue.GraphDecoder`"
msgstr ""

#: ../../api/scglue.models.sc.GraphDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.GraphDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.GraphDecoder.forward.rst:2
msgid "scglue.models.sc.GraphDecoder.forward"
msgstr ""

#: ../../api/scglue.models.scclue.BernoulliDataDecoder.rst:22:<autosummary>:1
#: of scglue.models.sc.GraphDecoder.forward:10
#: scglue.models.scclue.BernoulliDataDecoder.compute_dist:2
msgid ":py:class:`torch.distributions.bernoulli.Bernoulli`"
msgstr ""

#: ../../api/scglue.models.sc.GraphEncoder.rst:2
msgid "scglue.models.sc.GraphEncoder"
msgstr ""

#: of scglue.models.sc.GraphEncoder:1
msgid "Bases: :py:class:`~scglue.models.glue.GraphEncoder`"
msgstr ""

#: of scglue.models.sc.GraphEncoder:4
msgid "Number of vertices"
msgstr ""

#: ../../api/scglue.models.sc.GraphEncoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.GraphEncoder.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.GraphEncoder.forward.rst:2
msgid "scglue.models.sc.GraphEncoder.forward"
msgstr ""

#: ../../api/scglue.models.sc.IndDataDecoder.rst:2
msgid "scglue.models.sc.IndDataDecoder"
msgstr ""

#: of scglue.models.sc.IndDataDecoder:1 scglue.models.sc.NBDataDecoder:1
#: scglue.models.sc.NormalDataDecoder:1 scglue.models.sc.ZILNDataDecoder:1
msgid "Bases: :py:class:`~scglue.models.sc.DataDecoder`"
msgstr ""

#: ../../api/scglue.models.sc.IndDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.IndDataDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.IndDataDecoder.rst:22:<autosummary>:1 of
#: scglue.models.sc.IndDataDecoder.forward:1
msgid "Decode data from sample latent"
msgstr ""

#: ../../api/scglue.models.sc.IndDataDecoder.forward.rst:2
msgid "scglue.models.sc.IndDataDecoder.forward"
msgstr ""

#: ../../api/scglue.models.sc.IndNBDataDecoder.rst:2
msgid "scglue.models.sc.IndNBDataDecoder"
msgstr ""

#: of scglue.models.sc.IndNBDataDecoder:1
msgid ""
"Bases: :py:class:`~scglue.models.sc.IndDataDecoder`, "
":py:class:`~scglue.models.sc.NBDataDecoder`"
msgstr ""

#: ../../api/scglue.models.sc.IndNormalDataDocoder.rst:2
msgid "scglue.models.sc.IndNormalDataDocoder"
msgstr ""

#: of scglue.models.sc.IndNormalDataDocoder:1
msgid ""
"Bases: :py:class:`~scglue.models.sc.IndDataDecoder`, "
":py:class:`~scglue.models.sc.NormalDataDecoder`"
msgstr ""

#: ../../api/scglue.models.sc.IndZILNDataDecoder.rst:2
msgid "scglue.models.sc.IndZILNDataDecoder"
msgstr ""

#: of scglue.models.sc.IndZILNDataDecoder:1
msgid ""
"Bases: :py:class:`~scglue.models.sc.IndDataDecoder`, "
":py:class:`~scglue.models.sc.ZILNDataDecoder`"
msgstr ""

#: ../../api/scglue.models.sc.IndZINBDataDecoder.rst:2
msgid "scglue.models.sc.IndZINBDataDecoder"
msgstr ""

#: of scglue.models.sc.IndZINBDataDecoder:1
msgid ""
"Bases: :py:class:`~scglue.models.sc.IndDataDecoder`, "
":py:class:`~scglue.models.sc.ZINBDataDecoder`"
msgstr ""

#: ../../api/scglue.models.sc.IndZINDataDecoder.rst:2
msgid "scglue.models.sc.IndZINDataDecoder"
msgstr ""

#: of scglue.models.sc.IndZINDataDecoder:1
msgid ""
"Bases: :py:class:`~scglue.models.sc.IndDataDecoder`, "
":py:class:`~scglue.models.sc.ZINDataDecoder`"
msgstr ""

#: ../../api/scglue.models.sc.NBDataDecoder.rst:2
msgid "scglue.models.sc.NBDataDecoder"
msgstr ""

#: ../../api/scglue.models.sc.NBDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.NBDataDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.NBDataDecoder.forward.rst:2
msgid "scglue.models.sc.NBDataDecoder.forward"
msgstr ""

#: ../../api/scglue.models.scclue.NBDataDecoder.rst:22:<autosummary>:1 of
#: scglue.models.sc.NBDataDecoder.forward:12
#: scglue.models.scclue.NBDataDecoder.compute_dist:2
msgid ":py:class:`torch.distributions.negative_binomial.NegativeBinomial`"
msgstr ""

#: ../../api/scglue.models.sc.NBDataEncoder.rst:2
msgid "scglue.models.sc.NBDataEncoder"
msgstr ""

#: of scglue.models.sc.NBDataEncoder:1 scglue.models.sc.VanillaDataEncoder:1
msgid "Bases: :py:class:`~scglue.models.sc.DataEncoder`"
msgstr ""

#: ../../api/scglue.models.sc.NBDataEncoder.rst:23:<autosummary>:1
msgid ":py:obj:`compute_l <scglue.models.sc.NBDataEncoder.compute_l>`"
msgstr ""

#: ../../api/scglue.models.sc.NBDataEncoder.rst:23:<autosummary>:1
msgid ":py:obj:`normalize <scglue.models.sc.NBDataEncoder.normalize>`"
msgstr ""

#: ../../api/scglue.models.sc.NBDataEncoder.rst:28:<autosummary>:1
msgid ":py:obj:`TOTAL_COUNT <scglue.models.sc.NBDataEncoder.TOTAL_COUNT>`\\"
msgstr ""

#: ../../api/scglue.models.sc.NBDataEncoder.compute_l.rst:2
msgid "scglue.models.sc.NBDataEncoder.compute\\_l"
msgstr ""

#: ../../api/scglue.models.sc.NBDataEncoder.normalize.rst:2
msgid "scglue.models.sc.NBDataEncoder.normalize"
msgstr ""

#: ../../api/scglue.models.sc.NormalDataDecoder.rst:2
msgid "scglue.models.sc.NormalDataDecoder"
msgstr ""

#: ../../api/scglue.models.sc.NormalDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.NormalDataDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.NormalDataDecoder.forward.rst:2
msgid "scglue.models.sc.NormalDataDecoder.forward"
msgstr ""

#: ../../api/scglue.models.sc.Prior.rst:2
msgid "scglue.models.sc.Prior"
msgstr ""

#: of scglue.models.sc.Prior:1
msgid "Bases: :py:class:`~scglue.models.glue.Prior`"
msgstr ""

#: of scglue.models.sc.Prior:4
msgid "Mean of the normal distribution"
msgstr ""

#: of scglue.models.sc.Prior:6
msgid "Standard deviation of the normal distribution"
msgstr ""

#: ../../api/scglue.models.sc.Prior.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.Prior.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.Prior.forward.rst:2
msgid "scglue.models.sc.Prior.forward"
msgstr ""

#: ../../api/scglue.models.sc.VanillaDataEncoder.rst:2
msgid "scglue.models.sc.VanillaDataEncoder"
msgstr ""

#: ../../api/scglue.models.sc.VanillaDataEncoder.rst:23:<autosummary>:1
msgid ":py:obj:`compute_l <scglue.models.sc.VanillaDataEncoder.compute_l>`"
msgstr ""

#: ../../api/scglue.models.sc.VanillaDataEncoder.rst:23:<autosummary>:1
msgid ":py:obj:`normalize <scglue.models.sc.VanillaDataEncoder.normalize>`"
msgstr ""

#: ../../api/scglue.models.sc.VanillaDataEncoder.compute_l.rst:2
msgid "scglue.models.sc.VanillaDataEncoder.compute\\_l"
msgstr ""

#: ../../api/scglue.models.sc.VanillaDataEncoder.normalize.rst:2
msgid "scglue.models.sc.VanillaDataEncoder.normalize"
msgstr ""

#: ../../api/scglue.models.sc.ZILNDataDecoder.rst:2
msgid "scglue.models.sc.ZILNDataDecoder"
msgstr ""

#: ../../api/scglue.models.sc.ZILNDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.ZILNDataDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.ZILNDataDecoder.forward.rst:2
msgid "scglue.models.sc.ZILNDataDecoder.forward"
msgstr ""

#: ../../api/scglue.models.scclue.ZILNDataDecoder.rst:22:<autosummary>:1 of
#: scglue.models.sc.ZILNDataDecoder.forward:12
#: scglue.models.scclue.ZILNDataDecoder.compute_dist:2
msgid ":py:class:`scglue.models.prob.ZILN`"
msgstr ""

#: ../../api/scglue.models.sc.ZINBDataDecoder.rst:2
msgid "scglue.models.sc.ZINBDataDecoder"
msgstr ""

#: of scglue.models.sc.ZINBDataDecoder:1
msgid "Bases: :py:class:`~scglue.models.sc.NBDataDecoder`"
msgstr ""

#: ../../api/scglue.models.sc.ZINBDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.ZINBDataDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.ZINBDataDecoder.forward.rst:2
msgid "scglue.models.sc.ZINBDataDecoder.forward"
msgstr ""

#: of scglue.models.sc.ZINBDataDecoder.forward:12
msgid ":py:class:`scglue.models.prob.ZINB`"
msgstr ""

#: ../../api/scglue.models.sc.ZINDataDecoder.rst:2
msgid "scglue.models.sc.ZINDataDecoder"
msgstr ""

#: of scglue.models.sc.ZINDataDecoder:1
msgid "Bases: :py:class:`~scglue.models.sc.NormalDataDecoder`"
msgstr ""

#: ../../api/scglue.models.sc.ZINDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.sc.ZINDataDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.sc.ZINDataDecoder.forward.rst:2
msgid "scglue.models.sc.ZINDataDecoder.forward"
msgstr ""

#: ../../api/scglue.models.scclue.ZINDataDecoder.rst:22:<autosummary>:1 of
#: scglue.models.sc.ZINDataDecoder.forward:12
#: scglue.models.scclue.ZINDataDecoder.compute_dist:2
msgid ":py:class:`scglue.models.prob.ZIN`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:2
msgid "scglue.models.scclue"
msgstr ""

#: ../../api/scglue.models.scclue.rst:23:<autosummary>:1
msgid ":py:obj:`register_prob_model <scglue.models.scclue.register_prob_model>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:23:<autosummary>:1
#: ../../api/scglue.models.scglue.rst:23:<autosummary>:1 of
#: scglue.models.scclue.register_prob_model:1
#: scglue.models.scglue.register_prob_model:1
msgid "Register probabilistic model"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`BatchedTransferrable <scglue.models.scclue.BatchedTransferrable>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1 of
#: scglue.models.scclue.BatchedTransferrable:1
msgid ""
"Mixin class for transferrable weights containing expandable batch-"
"specific weights at the end of second dimension"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`BernoulliDataDecoder <scglue.models.scclue.BernoulliDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`Classifier <scglue.models.scclue.Classifier>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`CompositeDataEncoder <scglue.models.scclue.CompositeDataEncoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`DataDecoder <scglue.models.scclue.DataDecoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`Discriminator <scglue.models.scclue.Discriminator>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`ElementDataEncoder <scglue.models.scclue.ElementDataEncoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`MSEDataDecoder <scglue.models.scclue.MSEDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ""
":py:obj:`NBCompositeDataEncoder "
"<scglue.models.scclue.NBCompositeDataEncoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`NBDataDecoder <scglue.models.scclue.NBDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`NormalDataDecoder <scglue.models.scclue.NormalDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`RMSEDataDecoder <scglue.models.scclue.RMSEDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`SCCLUE <scglue.models.scclue.SCCLUE>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`SCCLUEModel <scglue.models.scclue.SCCLUEModel>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`SCCLUETrainer <scglue.models.scclue.SCCLUETrainer>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`Transferrable <scglue.models.scclue.Transferrable>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1 of
#: scglue.models.scclue.Transferrable:1
msgid "Mixin class for transferrable weights"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ""
":py:obj:`VanillaCompositeDataEncoder "
"<scglue.models.scclue.VanillaCompositeDataEncoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`ZILNDataDecoder <scglue.models.scclue.ZILNDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.rst:49:<autosummary>:1
msgid ":py:obj:`ZINDataDecoder <scglue.models.scclue.ZINDataDecoder>`"
msgstr ""

#: ../../api/scglue.models.scclue.BatchedTransferrable.rst:2
msgid "scglue.models.scclue.BatchedTransferrable"
msgstr ""

#: of scglue.models.scclue.BatchedTransferrable:1
#: scglue.models.scclue.CompositeDataEncoder:1
#: scglue.models.scclue.ElementDataEncoder:1
msgid "Bases: :py:class:`~scglue.models.scclue.Transferrable`"
msgstr ""

#: ../../api/scglue.models.scclue.BatchedTransferrable.rst:22:<autosummary>:1
msgid ""
":py:obj:`transfer_weights_from "
"<scglue.models.scclue.BatchedTransferrable.transfer_weights_from>`"
msgstr ""

#: ../../api/scglue.models.scclue.BatchedTransferrable.rst:22:<autosummary>:1
#: ../../api/scglue.models.scclue.Transferrable.rst:22:<autosummary>:1 of
#: scglue.models.scclue.BatchedTransferrable.transfer_weights_from:1
#: scglue.models.scclue.Transferrable.transfer_weights_from:1
msgid "Transfer weights from another module"
msgstr ""

#: ../../api/scglue.models.scclue.BatchedTransferrable.rst:29:<autosummary>:1
msgid ""
":py:obj:`batched_weights "
"<scglue.models.scclue.BatchedTransferrable.batched_weights>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.BatchedTransferrable.rst:29:<autosummary>:1
#: ../../api/scglue.models.scclue.BernoulliDataDecoder.rst:27:<autosummary>:1
#: ../../api/scglue.models.scclue.DataDecoder.rst:28:<autosummary>:1
#: ../../api/scglue.models.scclue.Discriminator.rst:27:<autosummary>:1
#: ../../api/scglue.models.scclue.NBDataDecoder.rst:27:<autosummary>:1
#: ../../api/scglue.models.scclue.NormalDataDecoder.rst:27:<autosummary>:1
#: ../../api/scglue.models.scclue.ZILNDataDecoder.rst:27:<autosummary>:1
#: ../../api/scglue.models.scclue.ZINDataDecoder.rst:27:<autosummary>:1
msgid "List of batch-specific weights"
msgstr ""

#: ../../api/scglue.models.scclue.BatchedTransferrable.rst:29:<autosummary>:1
msgid ":py:obj:`batches <scglue.models.scclue.BatchedTransferrable.batches>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.BatchedTransferrable.rst:29:<autosummary>:1
msgid "List of batch labels"
msgstr ""

#: ../../api/scglue.models.scclue.BatchedTransferrable.rst:29:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.scclue.BatchedTransferrable.logger>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.BatchedTransferrable.transfer_weights_from.rst:2
msgid "scglue.models.scclue.BatchedTransferrable.transfer\\_weights\\_from"
msgstr ""

#: of scglue.models.scclue.BatchedTransferrable.transfer_weights_from:4
#: scglue.models.scclue.Transferrable.transfer_weights_from:4
msgid "Module to transfer weight from"
msgstr ""

#: ../../api/scglue.models.scclue.BernoulliDataDecoder.rst:2
msgid "scglue.models.scclue.BernoulliDataDecoder"
msgstr ""

#: of scglue.models.scclue.BernoulliDataDecoder:1
#: scglue.models.scclue.MSEDataDecoder:1 scglue.models.scclue.NBDataDecoder:1
#: scglue.models.scclue.NormalDataDecoder:1
#: scglue.models.scclue.RMSEDataDecoder:1
#: scglue.models.scclue.ZILNDataDecoder:1
msgid "Bases: :py:class:`~scglue.models.scclue.DataDecoder`"
msgstr ""

#: ../../api/scglue.models.scclue.BernoulliDataDecoder.rst:22:<autosummary>:1
msgid ""
":py:obj:`compute_dist "
"<scglue.models.scclue.BernoulliDataDecoder.compute_dist>`"
msgstr ""

#: ../../api/scglue.models.scclue.BernoulliDataDecoder.rst:22:<autosummary>
#: ../../api/scglue.models.scclue.CompositeDataEncoder.rst:24:<autosummary>
#: ../../api/scglue.models.scclue.DataDecoder.rst:23:<autosummary>
#: ../../api/scglue.models.scclue.MSEDataDecoder.rst:22:<autosummary>
#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.rst:23:<autosummary>
#: ../../api/scglue.models.scclue.NBDataDecoder.rst:22:<autosummary>
#: ../../api/scglue.models.scclue.NormalDataDecoder.rst:22:<autosummary>
#: ../../api/scglue.models.scclue.RMSEDataDecoder.rst:22:<autosummary>
#: ../../api/scglue.models.scclue.SCCLUE.rst:23:<autosummary>
#: ../../api/scglue.models.scclue.SCCLUE.rst:28:<autosummary>
#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>
#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>
#: ../../api/scglue.models.scclue.VanillaCompositeDataEncoder.rst:23:<autosummary>
#: ../../api/scglue.models.scclue.ZILNDataDecoder.rst:22:<autosummary>
#: ../../api/scglue.models.scclue.ZINDataDecoder.rst:22:<autosummary>
msgid "rtype"
msgstr ""

#: ../../api/scglue.models.scclue.BernoulliDataDecoder.rst:27:<autosummary>:1
msgid ""
":py:obj:`batched_weights "
"<scglue.models.scclue.BernoulliDataDecoder.batched_weights>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.BernoulliDataDecoder.compute_dist.rst:2
msgid "scglue.models.scclue.BernoulliDataDecoder.compute\\_dist"
msgstr ""

#: ../../api/scglue.models.scclue.Classifier.rst:2
msgid "scglue.models.scclue.Classifier"
msgstr ""

#: of scglue.models.scclue.Classifier:1
msgid ""
"Bases: :py:class:`~torch.nn.modules.linear.Linear`, "
":py:class:`~scglue.models.scclue.Transferrable`"
msgstr ""

#: ../../api/scglue.models.scclue.CompositeDataEncoder.rst:2
msgid "scglue.models.scclue.CompositeDataEncoder"
msgstr ""

#: ../../api/scglue.models.scclue.CompositeDataEncoder.rst:24:<autosummary>:1
msgid ":py:obj:`compute_l <scglue.models.scclue.CompositeDataEncoder.compute_l>`"
msgstr ""

#: ../../api/scglue.models.scclue.CompositeDataEncoder.rst:24:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.scclue.CompositeDataEncoder.forward>`"
msgstr ""

#: ../../api/scglue.models.scclue.CompositeDataEncoder.rst:24:<autosummary>:1
#: ../../api/scglue.models.scclue.DataDecoder.rst:23:<autosummary>:1
#: ../../api/scglue.models.scclue.Discriminator.rst:22:<autosummary>:1
#: ../../api/scglue.models.scclue.ElementDataEncoder.rst:22:<autosummary>:1
#: ../../api/scglue.models.scclue.SCCLUE.rst:23:<autosummary>:1 of
#: scglue.models.scclue.CompositeDataEncoder.forward:1
#: scglue.models.scclue.DataDecoder.forward:1
#: scglue.models.scclue.Discriminator.forward:1
#: scglue.models.scclue.ElementDataEncoder.forward:1
#: scglue.models.scclue.SCCLUE.forward:1
msgid "Defines the computation performed at every call."
msgstr ""

#: ../../api/scglue.models.scclue.CompositeDataEncoder.rst:24:<autosummary>:1
msgid ":py:obj:`normalize <scglue.models.scclue.CompositeDataEncoder.normalize>`"
msgstr ""

#: ../../api/scglue.models.scclue.CompositeDataEncoder.compute_l.rst:2
msgid "scglue.models.scclue.CompositeDataEncoder.compute\\_l"
msgstr ""

#: ../../api/scglue.models.scclue.CompositeDataEncoder.forward.rst:2
msgid "scglue.models.scclue.CompositeDataEncoder.forward"
msgstr ""

#: of scglue.models.scclue.CompositeDataEncoder.forward:3
#: scglue.models.scclue.DataDecoder.forward:3
#: scglue.models.scclue.Discriminator.forward:3
#: scglue.models.scclue.ElementDataEncoder.forward:3
#: scglue.models.scclue.SCCLUE.forward:3
msgid "Should be overridden by all subclasses."
msgstr ""

#: of scglue.models.scclue.CompositeDataEncoder.forward:6
#: scglue.models.scclue.DataDecoder.forward:6
#: scglue.models.scclue.Discriminator.forward:6
#: scglue.models.scclue.ElementDataEncoder.forward:6
#: scglue.models.scclue.SCCLUE.forward:6
msgid ""
"Although the recipe for forward pass needs to be defined within this "
"function, one should call the :class:`Module` instance afterwards instead"
" of this since the former takes care of running the registered hooks "
"while the latter silently ignores them."
msgstr ""

#: ../../api/scglue.models.scclue.CompositeDataEncoder.normalize.rst:2
msgid "scglue.models.scclue.CompositeDataEncoder.normalize"
msgstr ""

#: ../../api/scglue.models.scclue.DataDecoder.rst:2
msgid "scglue.models.scclue.DataDecoder"
msgstr ""

#: of scglue.models.scclue.DataDecoder:1
msgid "Bases: :py:class:`~scglue.models.scclue.BatchedTransferrable`"
msgstr ""

#: ../../api/scglue.models.scclue.DataDecoder.rst:23:<autosummary>:1
msgid ":py:obj:`compute_dist <scglue.models.scclue.DataDecoder.compute_dist>`"
msgstr ""

#: ../../api/scglue.models.scclue.DataDecoder.rst:23:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.scclue.DataDecoder.forward>`"
msgstr ""

#: ../../api/scglue.models.scclue.DataDecoder.rst:28:<autosummary>:1
msgid ""
":py:obj:`batched_weights "
"<scglue.models.scclue.DataDecoder.batched_weights>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.DataDecoder.compute_dist.rst:2
msgid "scglue.models.scclue.DataDecoder.compute\\_dist"
msgstr ""

#: ../../api/scglue.models.scclue.DataDecoder.forward.rst:2
msgid "scglue.models.scclue.DataDecoder.forward"
msgstr ""

#: ../../api/scglue.models.scclue.Discriminator.rst:2
msgid "scglue.models.scclue.Discriminator"
msgstr ""

#: of scglue.models.scclue.Discriminator:1
msgid ""
"Bases: :py:class:`~torch.nn.modules.container.Sequential`, "
":py:class:`~scglue.models.scclue.BatchedTransferrable`"
msgstr ""

#: ../../api/scglue.models.scclue.Discriminator.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.scclue.Discriminator.forward>`"
msgstr ""

#: ../../api/scglue.models.scclue.Discriminator.rst:27:<autosummary>:1
msgid ""
":py:obj:`batched_weights "
"<scglue.models.scclue.Discriminator.batched_weights>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.Discriminator.forward.rst:2
msgid "scglue.models.scclue.Discriminator.forward"
msgstr ""

#: ../../api/scglue.models.scclue.ElementDataEncoder.rst:2
msgid "scglue.models.scclue.ElementDataEncoder"
msgstr ""

#: ../../api/scglue.models.scclue.ElementDataEncoder.rst:22:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.scclue.ElementDataEncoder.forward>`"
msgstr ""

#: ../../api/scglue.models.scclue.ElementDataEncoder.forward.rst:2
msgid "scglue.models.scclue.ElementDataEncoder.forward"
msgstr ""

#: of scglue.models.scclue.ElementDataEncoder.forward:12
msgid ""
":py:data:`typing.Tuple`\\[:py:class:`torch.Tensor`, "
":py:class:`torch.Tensor`]"
msgstr ""

#: ../../api/scglue.models.scclue.MSEDataDecoder.rst:2
msgid "scglue.models.scclue.MSEDataDecoder"
msgstr ""

#: ../../api/scglue.models.scclue.MSEDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`compute_dist <scglue.models.scclue.MSEDataDecoder.compute_dist>`"
msgstr ""

#: ../../api/scglue.models.scclue.MSEDataDecoder.rst:22:<autosummary>:1 of
#: scglue.models.scclue.MSEDataDecoder.compute_dist:2
msgid ":py:class:`scglue.models.prob.MSE`"
msgstr ""

#: ../../api/scglue.models.scclue.MSEDataDecoder.compute_dist.rst:2
msgid "scglue.models.scclue.MSEDataDecoder.compute\\_dist"
msgstr ""

#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.rst:2
msgid "scglue.models.scclue.NBCompositeDataEncoder"
msgstr ""

#: of scglue.models.scclue.NBCompositeDataEncoder:1
#: scglue.models.scclue.VanillaCompositeDataEncoder:1
msgid "Bases: :py:class:`~scglue.models.scclue.CompositeDataEncoder`"
msgstr ""

#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.rst:23:<autosummary>:1
msgid ""
":py:obj:`compute_l "
"<scglue.models.scclue.NBCompositeDataEncoder.compute_l>`"
msgstr ""

#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.rst:23:<autosummary>:1
msgid ""
":py:obj:`normalize "
"<scglue.models.scclue.NBCompositeDataEncoder.normalize>`"
msgstr ""

#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.rst:28:<autosummary>:1
msgid ""
":py:obj:`TOTAL_COUNT "
"<scglue.models.scclue.NBCompositeDataEncoder.TOTAL_COUNT>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.compute_l.rst:2
msgid "scglue.models.scclue.NBCompositeDataEncoder.compute\\_l"
msgstr ""

#: ../../api/scglue.models.scclue.NBCompositeDataEncoder.normalize.rst:2
msgid "scglue.models.scclue.NBCompositeDataEncoder.normalize"
msgstr ""

#: ../../api/scglue.models.scclue.NBDataDecoder.rst:2
msgid "scglue.models.scclue.NBDataDecoder"
msgstr ""

#: ../../api/scglue.models.scclue.NBDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`compute_dist <scglue.models.scclue.NBDataDecoder.compute_dist>`"
msgstr ""

#: ../../api/scglue.models.scclue.NBDataDecoder.rst:27:<autosummary>:1
msgid ""
":py:obj:`batched_weights "
"<scglue.models.scclue.NBDataDecoder.batched_weights>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.NBDataDecoder.compute_dist.rst:2
msgid "scglue.models.scclue.NBDataDecoder.compute\\_dist"
msgstr ""

#: ../../api/scglue.models.scclue.NormalDataDecoder.rst:2
msgid "scglue.models.scclue.NormalDataDecoder"
msgstr ""

#: ../../api/scglue.models.scclue.NormalDataDecoder.rst:22:<autosummary>:1
msgid ""
":py:obj:`compute_dist "
"<scglue.models.scclue.NormalDataDecoder.compute_dist>`"
msgstr ""

#: ../../api/scglue.models.scclue.NormalDataDecoder.rst:27:<autosummary>:1
msgid ""
":py:obj:`batched_weights "
"<scglue.models.scclue.NormalDataDecoder.batched_weights>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.NormalDataDecoder.compute_dist.rst:2
msgid "scglue.models.scclue.NormalDataDecoder.compute\\_dist"
msgstr ""

#: ../../api/scglue.models.scclue.RMSEDataDecoder.rst:2
msgid "scglue.models.scclue.RMSEDataDecoder"
msgstr ""

#: ../../api/scglue.models.scclue.RMSEDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`compute_dist <scglue.models.scclue.RMSEDataDecoder.compute_dist>`"
msgstr ""

#: ../../api/scglue.models.scclue.RMSEDataDecoder.rst:22:<autosummary>:1 of
#: scglue.models.scclue.RMSEDataDecoder.compute_dist:2
msgid ":py:class:`scglue.models.prob.RMSE`"
msgstr ""

#: ../../api/scglue.models.scclue.RMSEDataDecoder.compute_dist.rst:2
msgid "scglue.models.scclue.RMSEDataDecoder.compute\\_dist"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUE.rst:2
msgid "scglue.models.scclue.SCCLUE"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUE.rst:23:<autosummary>:1
msgid ":py:obj:`forward <scglue.models.scclue.SCCLUE.forward>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUE.rst:23:<autosummary>:1
msgid ""
":py:obj:`transfer_weights_from "
"<scglue.models.scclue.SCCLUE.transfer_weights_from>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUE.rst:28:<autosummary>:1
msgid ":py:obj:`device <scglue.models.scclue.SCCLUE.device>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUE.forward.rst:2
msgid "scglue.models.scclue.SCCLUE.forward"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUE.transfer_weights_from.rst:2
msgid "scglue.models.scclue.SCCLUE.transfer\\_weights\\_from"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:2
msgid "scglue.models.scclue.SCCLUEModel"
msgstr ""

#: of scglue.models.scclue.SCCLUEModel:1 scglue.models.scglue.SCGLUEModel:1
msgid "Bases: :py:class:`~scglue.models.base.Model`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>:1
msgid ""
":py:obj:`adopt_pretrained_model "
"<scglue.models.scclue.SCCLUEModel.adopt_pretrained_model>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>:1
msgid ":py:obj:`compile <scglue.models.scclue.SCCLUEModel.compile>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>:1
msgid ":py:obj:`cross_predict <scglue.models.scclue.SCCLUEModel.cross_predict>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>:1
msgid ":py:obj:`encode_data <scglue.models.scclue.SCCLUEModel.encode_data>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>:1 of
#: scglue.models.scclue.SCCLUEModel.encode_data:1
msgid "Compute data sample (cell) embedding"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:26:<autosummary>:1
msgid ":py:obj:`fit <scglue.models.scclue.SCCLUEModel.fit>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:35:<autosummary>:1
msgid ""
":py:obj:`ALIGN_BURNIN_PRG "
"<scglue.models.scclue.SCCLUEModel.ALIGN_BURNIN_PRG>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:35:<autosummary>:1
msgid ":py:obj:`MAX_EPOCH_PRG <scglue.models.scclue.SCCLUEModel.MAX_EPOCH_PRG>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:35:<autosummary>:1
msgid ":py:obj:`PATIENCE_PRG <scglue.models.scclue.SCCLUEModel.PATIENCE_PRG>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:35:<autosummary>:1
msgid ""
":py:obj:`REDUCE_LR_PATIENCE_PRG "
"<scglue.models.scclue.SCCLUEModel.REDUCE_LR_PATIENCE_PRG>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.rst:35:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.scclue.SCCLUEModel.logger>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.adopt_pretrained_model.rst:2
msgid "scglue.models.scclue.SCCLUEModel.adopt\\_pretrained\\_model"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.compile.rst:2
msgid "scglue.models.scclue.SCCLUEModel.compile"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.cross_predict.rst:2
msgid "scglue.models.scclue.SCCLUEModel.cross\\_predict"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.encode_data.rst:2
msgid "scglue.models.scclue.SCCLUEModel.encode\\_data"
msgstr ""

#: of scglue.models.scclue.SCCLUEModel.encode_data:4
#: scglue.models.scglue.SCGLUEModel.encode_data:4
msgid "Modality key"
msgstr ""

#: of scglue.models.scclue.SCCLUEModel.encode_data:8
#: scglue.models.scglue.SCGLUEModel.decode_data:16
#: scglue.models.scglue.SCGLUEModel.encode_data:8
msgid "Size of minibatches"
msgstr ""

#: of scglue.models.scclue.SCCLUEModel.encode_data:10
#: scglue.models.scglue.SCGLUEModel.decode_data:18
#: scglue.models.scglue.SCGLUEModel.encode_data:13
#: scglue.models.scglue.SCGLUEModel.encode_graph:9 scglue.num.col_pcc:8
#: scglue.num.col_spr:8 scglue.num.col_var:10 scglue.num.cov_mat:10
#: scglue.num.densify:6 scglue.num.normalize_edges:10 scglue.num.pcc_mat:8
#: scglue.num.sigmoid:6 scglue.num.spr_mat:8 scglue.num.vertex_degrees:12
msgid ":py:class:`numpy.ndarray`"
msgstr ""

#: of scglue.models.scclue.SCCLUEModel.encode_data:11
msgid "*embedding* -- Data sample (cell) embedding"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUEModel.fit.rst:2
msgid "scglue.models.scclue.SCCLUEModel.fit"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:2
msgid "scglue.models.scclue.SCCLUETrainer"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1
msgid ""
":py:obj:`compute_losses "
"<scglue.models.scclue.SCCLUETrainer.compute_losses>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1
msgid ":py:obj:`fit <scglue.models.scclue.SCCLUETrainer.fit>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1
msgid ":py:obj:`format_data <scglue.models.scclue.SCCLUETrainer.format_data>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1 of
#: scglue.models.scclue.SCCLUETrainer.format_data:2
msgid ""
":py:data:`typing.Tuple`\\[:py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`torch.Tensor`]"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1
msgid ""
":py:obj:`load_state_dict "
"<scglue.models.scclue.SCCLUETrainer.load_state_dict>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1
msgid ":py:obj:`state_dict <scglue.models.scclue.SCCLUETrainer.state_dict>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1
msgid ":py:obj:`train_step <scglue.models.scclue.SCCLUETrainer.train_step>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:28:<autosummary>:1
msgid ":py:obj:`val_step <scglue.models.scclue.SCCLUETrainer.val_step>`"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.rst:33:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.scclue.SCCLUETrainer.logger>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.compute_losses.rst:2
msgid "scglue.models.scclue.SCCLUETrainer.compute\\_losses"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.fit.rst:2
msgid "scglue.models.scclue.SCCLUETrainer.fit"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.format_data.rst:2
msgid "scglue.models.scclue.SCCLUETrainer.format\\_data"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.load_state_dict.rst:2
msgid "scglue.models.scclue.SCCLUETrainer.load\\_state\\_dict"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.state_dict.rst:2
msgid "scglue.models.scclue.SCCLUETrainer.state\\_dict"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.train_step.rst:2
msgid "scglue.models.scclue.SCCLUETrainer.train\\_step"
msgstr ""

#: ../../api/scglue.models.scclue.SCCLUETrainer.val_step.rst:2
msgid "scglue.models.scclue.SCCLUETrainer.val\\_step"
msgstr ""

#: ../../api/scglue.models.scclue.Transferrable.rst:2
msgid "scglue.models.scclue.Transferrable"
msgstr ""

#: ../../api/scglue.models.scclue.Transferrable.rst:22:<autosummary>:1
msgid ""
":py:obj:`transfer_weights_from "
"<scglue.models.scclue.Transferrable.transfer_weights_from>`"
msgstr ""

#: ../../api/scglue.models.scclue.Transferrable.rst:27:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.scclue.Transferrable.logger>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.Transferrable.transfer_weights_from.rst:2
msgid "scglue.models.scclue.Transferrable.transfer\\_weights\\_from"
msgstr ""

#: ../../api/scglue.models.scclue.VanillaCompositeDataEncoder.rst:2
msgid "scglue.models.scclue.VanillaCompositeDataEncoder"
msgstr ""

#: ../../api/scglue.models.scclue.VanillaCompositeDataEncoder.rst:23:<autosummary>:1
msgid ""
":py:obj:`compute_l "
"<scglue.models.scclue.VanillaCompositeDataEncoder.compute_l>`"
msgstr ""

#: ../../api/scglue.models.scclue.VanillaCompositeDataEncoder.rst:23:<autosummary>:1
msgid ""
":py:obj:`normalize "
"<scglue.models.scclue.VanillaCompositeDataEncoder.normalize>`"
msgstr ""

#: ../../api/scglue.models.scclue.VanillaCompositeDataEncoder.compute_l.rst:2
msgid "scglue.models.scclue.VanillaCompositeDataEncoder.compute\\_l"
msgstr ""

#: ../../api/scglue.models.scclue.VanillaCompositeDataEncoder.normalize.rst:2
msgid "scglue.models.scclue.VanillaCompositeDataEncoder.normalize"
msgstr ""

#: ../../api/scglue.models.scclue.ZILNDataDecoder.rst:2
msgid "scglue.models.scclue.ZILNDataDecoder"
msgstr ""

#: ../../api/scglue.models.scclue.ZILNDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`compute_dist <scglue.models.scclue.ZILNDataDecoder.compute_dist>`"
msgstr ""

#: ../../api/scglue.models.scclue.ZILNDataDecoder.rst:27:<autosummary>:1
msgid ""
":py:obj:`batched_weights "
"<scglue.models.scclue.ZILNDataDecoder.batched_weights>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.ZILNDataDecoder.compute_dist.rst:2
msgid "scglue.models.scclue.ZILNDataDecoder.compute\\_dist"
msgstr ""

#: ../../api/scglue.models.scclue.ZINDataDecoder.rst:2
msgid "scglue.models.scclue.ZINDataDecoder"
msgstr ""

#: of scglue.models.scclue.ZINDataDecoder:1
msgid "Bases: :py:class:`~scglue.models.scclue.NormalDataDecoder`"
msgstr ""

#: ../../api/scglue.models.scclue.ZINDataDecoder.rst:22:<autosummary>:1
msgid ":py:obj:`compute_dist <scglue.models.scclue.ZINDataDecoder.compute_dist>`"
msgstr ""

#: ../../api/scglue.models.scclue.ZINDataDecoder.rst:27:<autosummary>:1
msgid ""
":py:obj:`batched_weights "
"<scglue.models.scclue.ZINDataDecoder.batched_weights>`\\"
msgstr ""

#: ../../api/scglue.models.scclue.ZINDataDecoder.compute_dist.rst:2
msgid "scglue.models.scclue.ZINDataDecoder.compute\\_dist"
msgstr ""

#: ../../api/scglue.models.scclue.register_prob_model.rst:2
msgid "scglue.models.scclue.register\\_prob\\_model"
msgstr ""

#: of scglue.models.scclue.register_prob_model:4
#: scglue.models.scglue.register_prob_model:4
msgid "Data probabilistic model"
msgstr ""

#: of scglue.models.scclue.register_prob_model:6
#: scglue.models.scglue.register_prob_model:6
msgid "Encoder type of the probabilistic model"
msgstr ""

#: of scglue.models.scclue.register_prob_model:8
#: scglue.models.scglue.register_prob_model:8
msgid "Decoder type of the probabilistic model"
msgstr ""

#: ../../api/scglue.models.scglue.rst:2
msgid "scglue.models.scglue"
msgstr ""

#: ../../api/scglue.models.scglue.rst:23:<autosummary>:1
msgid ":py:obj:`register_prob_model <scglue.models.scglue.register_prob_model>`"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1
msgid ":py:obj:`IndSCGLUE <scglue.models.scglue.IndSCGLUE>`"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1 of
#: scglue.models.scglue.IndSCGLUE:1
msgid ""
"GLUE network where cell and feature in different modalities are "
"independent"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1
msgid ":py:obj:`PairedSCGLUEModel <scglue.models.scglue.PairedSCGLUEModel>`"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1 of
#: scglue.models.scglue.PairedSCGLUEModel:1
msgid "GLUE model for partially-paired single-cell multi-omics data integration"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1
msgid ":py:obj:`PairedSCGLUETrainer <scglue.models.scglue.PairedSCGLUETrainer>`"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1 of
#: scglue.models.scglue.PairedSCGLUETrainer:1
msgid "Paired trainer for :class:`SCGLUE`"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1
msgid ":py:obj:`SCGLUE <scglue.models.scglue.SCGLUE>`"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1 of
#: scglue.models.scglue.SCGLUE:1
msgid "GLUE network for single-cell multi-omics data integration"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1
msgid ":py:obj:`SCGLUEModel <scglue.models.scglue.SCGLUEModel>`"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1 of
#: scglue.models.scglue.SCGLUEModel:1
msgid "GLUE model for single-cell multi-omics data integration"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1
msgid ":py:obj:`SCGLUETrainer <scglue.models.scglue.SCGLUETrainer>`"
msgstr ""

#: ../../api/scglue.models.scglue.rst:36:<autosummary>:1 of
#: scglue.models.scglue.SCGLUETrainer:1
msgid "Trainer for :class:`SCGLUE`"
msgstr ""

#: ../../api/scglue.models.scglue.IndSCGLUE.rst:2
msgid "scglue.models.scglue.IndSCGLUE"
msgstr ""

#: of scglue.models.scglue.IndSCGLUE:1
msgid "Bases: :py:class:`~scglue.models.scglue.SCGLUE`"
msgstr ""

#: of scglue.models.scglue.IndSCGLUE:18 scglue.models.scglue.SCGLUE:18
msgid "Data classifier"
msgstr ""

#: ../../api/scglue.models.scglue.PairedSCGLUEModel.rst:2
msgid "scglue.models.scglue.PairedSCGLUEModel"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel:1
msgid "Bases: :py:class:`~scglue.models.scglue.SCGLUEModel`"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel:6
#: scglue.models.scglue.SCGLUEModel:6
msgid "Guidance graph vertices (must cover feature names in all modalities)"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel:8
#: scglue.models.scglue.SCGLUEModel:8
msgid "Latent dimensionality"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel:10
#: scglue.models.scglue.SCGLUEModel:10
msgid "Hidden layer depth for encoder and discriminator"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel:12
#: scglue.models.scglue.SCGLUEModel:12
msgid "Hidden layer dimensionality for encoder and discriminator"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel:16
#: scglue.models.scglue.SCGLUEModel:16
msgid "Whether the same batches are shared across modalities"
msgstr ""

#: ../../api/scglue.models.scglue.PairedSCGLUEModel.rst:22:<autosummary>:1
msgid ":py:obj:`compile <scglue.models.scglue.PairedSCGLUEModel.compile>`"
msgstr ""

#: ../../api/scglue.models.scglue.PairedSCGLUEModel.rst:27:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.scglue.PairedSCGLUEModel.logger>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.PairedSCGLUEModel.compile.rst:2
msgid "scglue.models.scglue.PairedSCGLUEModel.compile"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel.compile:6
#: scglue.models.scglue.PairedSCGLUETrainer:8
#: scglue.models.scglue.SCGLUEModel.compile:6
#: scglue.models.scglue.SCGLUETrainer:8
msgid "KL weight"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel.compile:12
#: scglue.models.scglue.PairedSCGLUETrainer:14
#: scglue.models.scglue.SCGLUEModel.compile:12
#: scglue.models.scglue.SCGLUETrainer:14
msgid "Cell type supervision weight"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel.compile:14
#: scglue.models.scglue.PairedSCGLUETrainer:16
msgid "Joint cross-prediction weight"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel.compile:16
#: scglue.models.scglue.PairedSCGLUETrainer:18
msgid "Real cross-prediction weight"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel.compile:18
#: scglue.models.scglue.PairedSCGLUETrainer:20
msgid "Cosine similarity weight"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUEModel.compile:20
#: scglue.models.scglue.PairedSCGLUETrainer:22
#: scglue.models.scglue.SCGLUEModel.compile:14
#: scglue.models.scglue.SCGLUETrainer:16
msgid "Whether to L2 normalize cell embeddings before decoder"
msgstr ""

#: ../../api/scglue.models.scglue.PairedSCGLUETrainer.rst:2
msgid "scglue.models.scglue.PairedSCGLUETrainer"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUETrainer:1
msgid "Bases: :py:class:`~scglue.models.scglue.SCGLUETrainer`"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUETrainer:4
#: scglue.models.scglue.SCGLUETrainer:4
msgid ":class:`SCGLUE` network to be trained"
msgstr ""

#: ../../api/scglue.models.scglue.PairedSCGLUETrainer.rst:23:<autosummary>:1
msgid ""
":py:obj:`compute_losses "
"<scglue.models.scglue.PairedSCGLUETrainer.compute_losses>`"
msgstr ""

#: ../../api/scglue.models.scglue.PairedSCGLUETrainer.rst:23:<autosummary>:1
msgid ""
":py:obj:`format_data "
"<scglue.models.scglue.PairedSCGLUETrainer.format_data>`"
msgstr ""

#: ../../api/scglue.models.scglue.PairedSCGLUETrainer.rst:28:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.scglue.PairedSCGLUETrainer.logger>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.PairedSCGLUETrainer.compute_losses.rst:2
msgid "scglue.models.scglue.PairedSCGLUETrainer.compute\\_losses"
msgstr ""

#: ../../api/scglue.models.scglue.PairedSCGLUETrainer.format_data.rst:2
msgid "scglue.models.scglue.PairedSCGLUETrainer.format\\_data"
msgstr ""

#: of scglue.models.scglue.PairedSCGLUETrainer.format_data:5
#: scglue.models.scglue.SCGLUETrainer.format_data:5
msgid ""
"The data dataset should contain data arrays for each modality, followed "
"by alternative input arrays for each modality, in the same order as "
"modality keys of the network."
msgstr ""

#: of scglue.models.scglue.PairedSCGLUETrainer.format_data:10
#: scglue.models.scglue.SCGLUETrainer.format_data:10
msgid ""
":py:data:`typing.Tuple`\\[:py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`typing.Mapping`\\[:py:class:`str`, "
":py:class:`torch.Tensor`], :py:class:`torch.Tensor`, "
":py:class:`torch.Tensor`, :py:class:`torch.Tensor`]"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUE.rst:2
msgid "scglue.models.scglue.SCGLUE"
msgstr ""

#: of scglue.models.scglue.SCGLUE:1
msgid "Bases: :py:class:`~scglue.models.glue.GLUE`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:2
msgid "scglue.models.scglue.SCGLUEModel"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1
msgid ""
":py:obj:`adopt_pretrained_model "
"<scglue.models.scglue.SCGLUEModel.adopt_pretrained_model>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1 of
#: scglue.models.scglue.SCGLUEModel.adopt_pretrained_model:1
msgid "Adopt buffers and parameters from a pretrained model"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1
msgid ":py:obj:`compile <scglue.models.scglue.SCGLUEModel.compile>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1
msgid ":py:obj:`decode_data <scglue.models.scglue.SCGLUEModel.decode_data>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1 of
#: scglue.models.scglue.SCGLUEModel.decode_data:1
msgid "Decode data"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1
msgid ":py:obj:`encode_data <scglue.models.scglue.SCGLUEModel.encode_data>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1 of
#: scglue.models.scglue.SCGLUEModel.encode_data:1
msgid "Compute data (cell) embedding"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1
msgid ":py:obj:`encode_graph <scglue.models.scglue.SCGLUEModel.encode_graph>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1 of
#: scglue.models.scglue.SCGLUEModel.encode_graph:1
msgid "Compute graph (feature) embedding"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1
msgid ":py:obj:`fit <scglue.models.scglue.SCGLUEModel.fit>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1 of
#: scglue.models.scglue.SCGLUEModel.fit:1
msgid "Fit model on given datasets"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1
msgid ":py:obj:`freeze_cells <scglue.models.scglue.SCGLUEModel.freeze_cells>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1 of
#: scglue.models.scglue.SCGLUEModel.freeze_cells:1
msgid "Freeze cell embeddings"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1
msgid ":py:obj:`get_losses <scglue.models.scglue.SCGLUEModel.get_losses>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1 of
#: scglue.models.scglue.SCGLUEModel.get_losses:1
msgid "Compute loss function values"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1
msgid ":py:obj:`unfreeze_cells <scglue.models.scglue.SCGLUEModel.unfreeze_cells>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1 of
#: scglue.models.scglue.SCGLUEModel.unfreeze_cells:1
msgid "Unfreeze cell embeddings"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:31:<autosummary>:1
msgid ":py:obj:`upgrade <scglue.models.scglue.SCGLUEModel.upgrade>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:41:<autosummary>:1
msgid ""
":py:obj:`ALIGN_BURNIN_PRG "
"<scglue.models.scglue.SCGLUEModel.ALIGN_BURNIN_PRG>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:41:<autosummary>:1
msgid ":py:obj:`GRAPH_BATCHES <scglue.models.scglue.SCGLUEModel.GRAPH_BATCHES>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:41:<autosummary>:1
msgid ""
":py:obj:`MAX_EPOCHS_PRG "
"<scglue.models.scglue.SCGLUEModel.MAX_EPOCHS_PRG>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:41:<autosummary>:1
msgid ":py:obj:`PATIENCE_PRG <scglue.models.scglue.SCGLUEModel.PATIENCE_PRG>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:41:<autosummary>:1
msgid ""
":py:obj:`REDUCE_LR_PATIENCE_PRG "
"<scglue.models.scglue.SCGLUEModel.REDUCE_LR_PATIENCE_PRG>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.rst:41:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.scglue.SCGLUEModel.logger>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.adopt_pretrained_model.rst:2
msgid "scglue.models.scglue.SCGLUEModel.adopt\\_pretrained\\_model"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.adopt_pretrained_model:4
msgid "Source model to be adopted"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.adopt_pretrained_model:6
msgid "Only adopt a specific submodule (e.g., ``\"x2u\"``)"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.compile.rst:2
msgid "scglue.models.scglue.SCGLUEModel.compile"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.compile:19
msgid "Additional keyword arguments passed to trainer"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.decode_data.rst:2
msgid "scglue.models.scglue.SCGLUEModel.decode\\_data"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.decode_data:4
msgid "Source modality key"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.decode_data:6
msgid "Target modality key"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.decode_data:8
msgid "Source modality data"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.decode_data:12
msgid "Target modality library size, by default 1.0"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.decode_data:14
msgid "Target modality batch, by default batch 0"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.decode_data:19
msgid "*decoded* -- Decoded data"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.decode_data:21
msgid "This is EXPERIMENTAL!"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.encode_data.rst:2
msgid "scglue.models.scglue.SCGLUEModel.encode\\_data"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.encode_data:10
#: scglue.models.scglue.SCGLUEModel.encode_graph:6
msgid ""
"Number of samples from the embedding distribution, by default ``None``, "
"returns the mean of the embedding distribution."
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.encode_data:14
msgid ""
"*data_embedding* -- Data (cell) embedding with shape :math:`n_{cell} "
"\\times n_{dim}` if ``n_sample`` is ``None``, or shape :math:`n_{cell} "
"\\times n_{sample} \\times n_{dim}` if ``n_sample`` is not ``None``."
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.encode_graph.rst:2
msgid "scglue.models.scglue.SCGLUEModel.encode\\_graph"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.encode_graph:10
msgid ""
"*graph_embedding* -- Graph (feature) embedding with shape "
":math:`n_{feature} \\times n_{dim}` if ``n_sample`` is ``None``, or shape"
" :math:`n_{feature} \\times n_{sample} \\times n_{dim}` if ``n_sample`` "
"is not ``None``."
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.fit.rst:2
msgid "scglue.models.scglue.SCGLUEModel.fit"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.fit:8
#: scglue.models.scglue.SCGLUEModel.get_losses:8
msgid "Number of negative samples for each edge"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.fit:12
#: scglue.models.scglue.SCGLUEModel.get_losses:10
msgid "Number of cells in each data minibatch"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.freeze_cells.rst:2
msgid "scglue.models.scglue.SCGLUEModel.freeze\\_cells"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.get_losses.rst:2
msgid "scglue.models.scglue.SCGLUEModel.get\\_losses"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.get_losses:14
msgid ":py:class:`typing.Mapping`\\[:py:class:`str`, :py:class:`numpy.ndarray`]"
msgstr ""

#: of scglue.models.scglue.SCGLUEModel.get_losses:15
msgid "*losses* -- Loss function values"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.unfreeze_cells.rst:2
msgid "scglue.models.scglue.SCGLUEModel.unfreeze\\_cells"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUEModel.upgrade.rst:2
msgid "scglue.models.scglue.SCGLUEModel.upgrade"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:2
msgid "scglue.models.scglue.SCGLUETrainer"
msgstr ""

#: of scglue.models.scglue.SCGLUETrainer:1
msgid "Bases: :py:class:`~scglue.models.glue.GLUETrainer`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:24:<autosummary>:1
msgid ""
":py:obj:`compute_losses "
"<scglue.models.scglue.SCGLUETrainer.compute_losses>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:24:<autosummary>:1
msgid ":py:obj:`format_data <scglue.models.scglue.SCGLUETrainer.format_data>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:24:<autosummary>:1
msgid ":py:obj:`train_step <scglue.models.scglue.SCGLUETrainer.train_step>`"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:31:<autosummary>:1
msgid ""
":py:obj:`BURNIN_NOISE_EXAG "
"<scglue.models.scglue.SCGLUETrainer.BURNIN_NOISE_EXAG>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:31:<autosummary>:1
msgid ":py:obj:`freeze_u <scglue.models.scglue.SCGLUETrainer.freeze_u>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:31:<autosummary>:1
msgid "Whether to freeze cell embeddings"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.rst:31:<autosummary>:1
msgid ":py:obj:`logger <scglue.models.scglue.SCGLUETrainer.logger>`\\"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.compute_losses.rst:2
msgid "scglue.models.scglue.SCGLUETrainer.compute\\_losses"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.format_data.rst:2
msgid "scglue.models.scglue.SCGLUETrainer.format\\_data"
msgstr ""

#: ../../api/scglue.models.scglue.SCGLUETrainer.train_step.rst:2
msgid "scglue.models.scglue.SCGLUETrainer.train\\_step"
msgstr ""

#: ../../api/scglue.models.scglue.register_prob_model.rst:2
msgid "scglue.models.scglue.register\\_prob\\_model"
msgstr ""

#: ../../api/scglue.num.rst:2
msgid "scglue.num"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`all_counts <scglue.num.all_counts>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.all_counts:1
msgid "Check whether an array contains all counts"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`col_pcc <scglue.num.col_pcc>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.col_pcc:1
msgid "Column-wise Pearson's correlation coefficient (sparse friendly)"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`col_spr <scglue.num.col_spr>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.col_spr:1
msgid "Column-wise Spearman's rank correlation"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`col_var <scglue.num.col_var>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.col_var:1
msgid "Column-wise variance (sparse friendly)"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`cov_mat <scglue.num.cov_mat>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.cov_mat:1
msgid "Covariance matrix (sparse friendly)"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`densify <scglue.num.densify>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.densify:1
msgid "Convert a matrix to dense regardless of original type."
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`normalize_edges <scglue.num.normalize_edges>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.normalize_edges:1
msgid "Normalize graph edge weights"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`pcc_mat <scglue.num.pcc_mat>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.pcc_mat:1
msgid "Pearson's correlation coefficient (sparse friendly)"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`prob_or <scglue.num.prob_or>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.prob_or:1
msgid "Combined multiple probabilities in a logical OR manner."
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`prod <scglue.num.prod>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.prod:1
msgid "Product of elements"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`sigmoid <scglue.num.sigmoid>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.sigmoid:1
msgid "The sigmoid function in numpy"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`spr_mat <scglue.num.spr_mat>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.spr_mat:1
msgid "Spearman's rank correlation"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`tfidf <scglue.num.tfidf>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.tfidf:1
msgid "TF-IDF normalization (following the Seurat v3 approach)"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1
msgid ":py:obj:`vertex_degrees <scglue.num.vertex_degrees>`"
msgstr ""

#: ../../api/scglue.num.rst:31:<autosummary>:1 of scglue.num.vertex_degrees:1
msgid "Compute vertex degrees"
msgstr ""

#: ../../api/scglue.num.all_counts.rst:2
msgid "scglue.num.all\\_counts"
msgstr ""

#: of scglue.num.all_counts:4
msgid "Array to check"
msgstr ""

#: of scglue.num.all_counts:6
msgid ":py:class:`bool`"
msgstr ""

#: of scglue.num.all_counts:7
msgid "*is_counts* -- Whether the array contains all counts"
msgstr ""

#: ../../api/scglue.num.col_pcc.rst:2
msgid "scglue.num.col\\_pcc"
msgstr ""

#: of scglue.num.col_pcc:4 scglue.num.col_spr:4 scglue.num.col_var:4
#: scglue.num.cov_mat:4 scglue.num.pcc_mat:4 scglue.num.spr_mat:4
msgid "First design matrix"
msgstr ""

#: of scglue.num.col_pcc:6 scglue.num.col_spr:6
msgid "Second design matrix"
msgstr ""

#: of scglue.num.col_pcc:9
msgid "*pcc* -- Column-wise Pearson's correlation coefficients"
msgstr ""

#: ../../api/scglue.num.col_spr.rst:2
msgid "scglue.num.col\\_spr"
msgstr ""

#: of scglue.num.col_spr:9
msgid "*spr* -- Column-wise Spearman's rank correlations"
msgstr ""

#: ../../api/scglue.num.col_var.rst:2
msgid "scglue.num.col\\_var"
msgstr ""

#: of scglue.num.col_var:6 scglue.num.cov_mat:6 scglue.num.pcc_mat:6
#: scglue.num.spr_mat:6
msgid "Second design matrix (optional)"
msgstr ""

#: of scglue.num.col_var:8 scglue.num.cov_mat:8
msgid "Whether to return unbiased or biased covariance estimation"
msgstr ""

#: of scglue.num.col_var:11
msgid ""
"*col_var* -- Column-wise variance, if only X is given. Column-wise "
"covariance, if both X and Y are given."
msgstr ""

#: ../../api/scglue.num.cov_mat.rst:2
msgid "scglue.num.cov\\_mat"
msgstr ""

#: of scglue.num.cov_mat:11
msgid ""
"*cov* -- Covariance matrix, if only X is given. Cross-covariance matrix, "
"if both X and Y are given."
msgstr ""

#: ../../api/scglue.num.densify.rst:2
msgid "scglue.num.densify"
msgstr ""

#: of scglue.num.densify:4
msgid "Input array (either sparse or dense)"
msgstr ""

#: of scglue.num.densify:7
msgid "*densified* -- Densified array"
msgstr ""

#: ../../api/scglue.num.normalize_edges.rst:2
msgid "scglue.num.normalize\\_edges"
msgstr ""

#: of scglue.num.normalize_edges:8
msgid ""
"Normalization method, should be one of {\"in\", \"out\", \"sym\", "
"\"keepvar\"}"
msgstr ""

#: of scglue.num.normalize_edges:11
msgid "*enorm* -- Normalized weight of edges (:math:`n_{edges}`)"
msgstr ""

#: ../../api/scglue.num.pcc_mat.rst:2
msgid "scglue.num.pcc\\_mat"
msgstr ""

#: of scglue.num.pcc_mat:9
msgid ""
"*pcc* -- Pearson's correlation matrix among columns of X, if only X is "
"given. Pearson's correlation matrix between columns of X and columns of "
"Y, if both X and Y are given."
msgstr ""

#: ../../api/scglue.num.prob_or.rst:2
msgid "scglue.num.prob\\_or"
msgstr ""

#: of scglue.num.prob_or:4
msgid "Array of probabilities"
msgstr ""

#: of scglue.num.prob_or:7
msgid "*prob* -- Combined probability"
msgstr ""

#: ../../api/scglue.num.prod.rst:2
msgid "scglue.num.prod"
msgstr ""

#: of scglue.num.prod:4
msgid "Input elements"
msgstr ""

#: of scglue.num.prod:7
msgid "*prod* -- Product"
msgstr ""

#: of scglue.num.prod:9
msgid "For compatibility with Python<=3.7"
msgstr ""

#: ../../api/scglue.num.sigmoid.rst:2
msgid "scglue.num.sigmoid"
msgstr ""

#: of scglue.num.sigmoid:4
msgid "Input"
msgstr ""

#: of scglue.num.sigmoid:7
msgid "*s* -- Sigmoid(x)"
msgstr ""

#: ../../api/scglue.num.spr_mat.rst:2
msgid "scglue.num.spr\\_mat"
msgstr ""

#: of scglue.num.spr_mat:9
msgid ""
"*spr* -- Spearman's correlation matrix among columns of X, if only X is "
"given. Spearman's correlation matrix between columns of X and columns of "
"Y, if both X and Y are given."
msgstr ""

#: ../../api/scglue.num.tfidf.rst:2
msgid "scglue.num.tfidf"
msgstr ""

#: of scglue.num.tfidf:4
msgid "Input matrix"
msgstr ""

#: of scglue.num.tfidf:6
msgid ""
":py:data:`typing.Union`\\[:py:class:`numpy.ndarray`, "
":py:class:`scipy.sparse._base.spmatrix`]"
msgstr ""

#: of scglue.num.tfidf:7
msgid "*X_tfidf* -- TF-IDF normalized matrix"
msgstr ""

#: ../../api/scglue.num.vertex_degrees.rst:2
msgid "scglue.num.vertex\\_degrees"
msgstr ""

#: of scglue.num.vertex_degrees:8
msgid "Total number of vertices (determined by max edge index if not specified)"
msgstr ""

#: of scglue.num.vertex_degrees:10
msgid "Direction of vertex degree, should be one of {\"in\", \"out\", \"both\"}"
msgstr ""

#: of scglue.num.vertex_degrees:13
msgid "*degrees* -- Vertex degrees"
msgstr ""

#: ../../api/scglue.plot.rst:2
msgid "scglue.plot"
msgstr ""

#: ../../api/scglue.plot.rst:21:<autosummary>:1
msgid ":py:obj:`prc <scglue.plot.prc>`"
msgstr ""

#: ../../api/scglue.plot.rst:21:<autosummary>:1 of scglue.plot.prc:1
msgid "Plot a precision-recall curve"
msgstr ""

#: ../../api/scglue.plot.rst:21:<autosummary>:1
msgid ":py:obj:`roc <scglue.plot.roc>`"
msgstr ""

#: ../../api/scglue.plot.rst:21:<autosummary>:1 of scglue.plot.roc:1
msgid "Plot an ROC curve"
msgstr ""

#: ../../api/scglue.plot.rst:21:<autosummary>:1
msgid ":py:obj:`sankey <scglue.plot.sankey>`"
msgstr ""

#: ../../api/scglue.plot.rst:21:<autosummary>:1 of scglue.plot.sankey:1
msgid "Make a sankey diagram"
msgstr ""

#: ../../api/scglue.plot.rst:21:<autosummary>:1
msgid ":py:obj:`set_publication_params <scglue.plot.set_publication_params>`"
msgstr ""

#: ../../api/scglue.plot.rst:21:<autosummary>:1 of
#: scglue.plot.set_publication_params:1
msgid "Set publication-level figure parameters"
msgstr ""

#: ../../api/scglue.plot.prc.rst:2
msgid "scglue.plot.prc"
msgstr ""

#: of scglue.plot.prc:4 scglue.plot.roc:4
msgid "True labels"
msgstr ""

#: of scglue.plot.prc:6 scglue.plot.roc:6
msgid "Prediction values"
msgstr ""

#: of scglue.plot.prc:8
msgid ""
"Maximal number of points on the precision-recall curve, beyond which the "
"points are equidistantly subsampled."
msgstr ""

#: of scglue.plot.prc:11 scglue.plot.roc:11
msgid "Existing axes to plot on"
msgstr ""

#: of scglue.plot.prc:12 scglue.plot.roc:12
msgid "Additional keyword arguments passed to :func:`seaborn.lineplot`"
msgstr ""

#: of scglue.plot.prc:14 scglue.plot.roc:14
msgid ":py:class:`~matplotlib.axes.Axes`"
msgstr ""

#: of scglue.plot.prc:15 scglue.plot.roc:15
msgid "*ax* -- Plot axes"
msgstr ""

#: ../../api/scglue.plot.roc.rst:2
msgid "scglue.plot.roc"
msgstr ""

#: of scglue.plot.roc:8
msgid ""
"Maximal number of points on the ROC curve, beyond which the points are "
"equidistantly subsampled."
msgstr ""

#: ../../api/scglue.plot.sankey.rst:2
msgid "scglue.plot.sankey"
msgstr ""

#: of scglue.plot.sankey:4
msgid "Mapping source"
msgstr ""

#: of scglue.plot.sankey:6
msgid "Mapping target"
msgstr ""

#: of scglue.plot.sankey:8
msgid "Diagram title"
msgstr ""

#: of scglue.plot.sankey:10
msgid ""
"Color of left nodes, either a single color or a mapping function that "
"returns a color given the node name."
msgstr ""

#: of scglue.plot.sankey:13
msgid ""
"Color of right nodes, either a single color or a mapping function that "
"returns a color given the node name."
msgstr ""

#: of scglue.plot.sankey:16
msgid ""
"Color of links, either a single color or a mapping function that returns "
"a color given the link info."
msgstr ""

#: of scglue.plot.sankey:19
msgid "Font family used for the plot"
msgstr ""

#: of scglue.plot.sankey:21
msgid "Font size for the plot"
msgstr ""

#: of scglue.plot.sankey:23
msgid "Graph width"
msgstr ""

#: of scglue.plot.sankey:25
msgid "Graph height"
msgstr ""

#: of scglue.plot.sankey:27
msgid "Whether to show interactive figure or only return the figure dict"
msgstr ""

#: of scglue.plot.sankey:29
msgid "Whether to embed plotly.js library (only relevant when ``show=True``)"
msgstr ""

#: of scglue.plot.sankey:31
msgid ":py:class:`dict`"
msgstr ""

#: of scglue.plot.sankey:32
msgid ""
"*fig* -- Figure dict that can be fed to :func:`plotly.offline.iplot` to "
"show an interactive figure, or to :func:`plotly.io.write_image` to "
"produce a static image file."
msgstr ""

#: of scglue.plot.sankey:38
msgid ""
"If a mapping function is specified for ``link_color``, it should expect a"
" :class:`pd.Series` object as the only argument, which contains the "
"following fields:"
msgstr ""

#: of scglue.plot.sankey:42
msgid "left: the left node"
msgstr ""

#: of scglue.plot.sankey:43
msgid "right: the right node"
msgstr ""

#: of scglue.plot.sankey:44
msgid "value: population size connecting the two nodes"
msgstr ""

#: ../../api/scglue.plot.set_publication_params.rst:2
msgid "scglue.plot.set\\_publication\\_params"
msgstr ""

#: ../../api/scglue.typehint.rst:2
msgid "scglue.typehint"
msgstr ""

#: ../../api/scglue.utils.rst:2
msgid "scglue.utils"
msgstr ""

#: ../../api/scglue.utils.rst:26:<autosummary>:1
msgid ":py:obj:`get_chained_attr <scglue.utils.get_chained_attr>`"
msgstr ""

#: ../../api/scglue.utils.rst:26:<autosummary>:1 of
#: scglue.utils.get_chained_attr:1
msgid "Get attribute from an object, with support for chained attribute names."
msgstr ""

#: ../../api/scglue.utils.rst:26:<autosummary>:1
msgid ":py:obj:`get_rs <scglue.utils.get_rs>`"
msgstr ""

#: ../../api/scglue.utils.rst:26:<autosummary>:1 of scglue.utils.get_rs:1
msgid "Get random state object"
msgstr ""

#: ../../api/scglue.utils.rst:26:<autosummary>:1
msgid ":py:obj:`logged <scglue.utils.logged>`"
msgstr ""

#: ../../api/scglue.utils.rst:26:<autosummary>:1 of scglue.utils.logged:1
msgid "Add logger as an attribute"
msgstr ""

#: ../../api/scglue.utils.rst:26:<autosummary>:1
msgid ":py:obj:`run_command <scglue.utils.run_command>`"
msgstr ""

#: ../../api/scglue.utils.rst:26:<autosummary>:1 of scglue.utils.run_command:1
msgid "Run an external command and get realtime output"
msgstr ""

#: ../../api/scglue.utils.rst:38:<autosummary>:1
msgid ":py:obj:`ConfigManager <scglue.utils.ConfigManager>`"
msgstr ""

#: ../../api/scglue.utils.rst:38:<autosummary>:1 of
#: scglue.utils.ConfigManager:1
msgid "Global configurations"
msgstr ""

#: ../../api/scglue.utils.rst:38:<autosummary>:1
msgid ":py:obj:`ConstrainedDataFrame <scglue.utils.ConstrainedDataFrame>`"
msgstr ""

#: ../../api/scglue.utils.rst:38:<autosummary>:1 of
#: scglue.utils.ConstrainedDataFrame:1
msgid "Data frame with certain format constraints"
msgstr ""

#: ../../api/scglue.utils.rst:38:<autosummary>:1
msgid ":py:obj:`DelayedKeyboardInterrupt <scglue.utils.DelayedKeyboardInterrupt>`"
msgstr ""

#: ../../api/scglue.utils.rst:38:<autosummary>:1 of
#: scglue.utils.DelayedKeyboardInterrupt:1
msgid ""
"Shield a code block from keyboard interruptions, delaying handling till "
"the block is finished (adapted from `https://stackoverflow.com/a/21919644"
" <https://stackoverflow.com/a/21919644>`__)."
msgstr ""

#: ../../api/scglue.utils.rst:38:<autosummary>:1
msgid ":py:obj:`LogManager <scglue.utils.LogManager>`"
msgstr ""

#: ../../api/scglue.utils.rst:38:<autosummary>:1 of scglue.utils.LogManager:1
msgid "Manage loggers used in the package"
msgstr ""

#: ../../api/scglue.utils.rst:38:<autosummary>:1
msgid ":py:obj:`SingletonMeta <scglue.utils.SingletonMeta>`"
msgstr ""

#: ../../api/scglue.utils.rst:38:<autosummary>:1 of
#: scglue.utils.SingletonMeta:1
msgid "Ensure singletons via a meta class"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:2
msgid "scglue.utils.ConfigManager"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`ALLOW_TRAINING_INTERRUPTION "
"<scglue.utils.ConfigManager.ALLOW_TRAINING_INTERRUPTION>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Allow interruption before model training converges."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ":py:obj:`ANNDATA_KEY <scglue.utils.ConfigManager.ANNDATA_KEY>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Key in ``adata.uns`` for storing dataset configurations."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`ARRAY_SHUFFLE_NUM_WORKERS "
"<scglue.utils.ConfigManager.ARRAY_SHUFFLE_NUM_WORKERS>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Number of background workers for array data shuffling."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ":py:obj:`BEDTOOLS_PATH <scglue.utils.ConfigManager.BEDTOOLS_PATH>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Path to bedtools executable."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`CHECKPOINT_SAVE_INTERVAL "
"<scglue.utils.ConfigManager.CHECKPOINT_SAVE_INTERVAL>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Automatically save checkpoints every n epochs."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`CHECKPOINT_SAVE_NUMBERS "
"<scglue.utils.ConfigManager.CHECKPOINT_SAVE_NUMBERS>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Maximal number of checkpoints to preserve at any point."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ":py:obj:`CPU_ONLY <scglue.utils.ConfigManager.CPU_ONLY>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Whether computation should use only CPUs."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ":py:obj:`CUDNN_MODE <scglue.utils.ConfigManager.CUDNN_MODE>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
"CuDNN computation mode, should be one of {\"repeatability\", "
"\"performance\"}."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`DATALOADER_FETCHES_PER_BATCH "
"<scglue.utils.ConfigManager.DATALOADER_FETCHES_PER_BATCH>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Number of fetches per batch in data loader (read-only)."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`DATALOADER_FETCHES_PER_WORKER "
"<scglue.utils.ConfigManager.DATALOADER_FETCHES_PER_WORKER>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Number of fetches per worker per batch to use in data loader."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`DATALOADER_NUM_WORKERS "
"<scglue.utils.ConfigManager.DATALOADER_NUM_WORKERS>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Number of worker processes to use in data loader."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`DATALOADER_PIN_MEMORY "
"<scglue.utils.ConfigManager.DATALOADER_PIN_MEMORY>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Whether to use pin memory in data loader."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`FORCE_TERMINATE_WORKER_PATIENCE "
"<scglue.utils.ConfigManager.FORCE_TERMINATE_WORKER_PATIENCE>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Seconds to wait before force terminating unresponsive workers."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`GRAPH_SHUFFLE_NUM_WORKERS "
"<scglue.utils.ConfigManager.GRAPH_SHUFFLE_NUM_WORKERS>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Number of background workers for graph data shuffling."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ":py:obj:`MASKED_GPUS <scglue.utils.ConfigManager.MASKED_GPUS>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "A list of GPUs that should not be used when selecting computation device."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`PRINT_LOSS_INTERVAL "
"<scglue.utils.ConfigManager.PRINT_LOSS_INTERVAL>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Print loss values every n epochs."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ""
":py:obj:`TENSORBOARD_FLUSH_SECS "
"<scglue.utils.ConfigManager.TENSORBOARD_FLUSH_SECS>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Flush tensorboard logs to file every n seconds."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ":py:obj:`TMP_PREFIX <scglue.utils.ConfigManager.TMP_PREFIX>`\\"
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid "Prefix of temporary files and directories created."
msgstr ""

#: ../../api/scglue.utils.ConfigManager.rst:44:<autosummary>:1
msgid ":py:obj:`logger <scglue.utils.ConfigManager.logger>`\\"
msgstr ""

#: ../../api/scglue.utils.ConstrainedDataFrame.rst:2
msgid "scglue.utils.ConstrainedDataFrame"
msgstr ""

#: of scglue.utils.ConstrainedDataFrame:1
msgid "Bases: :py:class:`~pandas.core.frame.DataFrame`"
msgstr ""

#: of scglue.utils.ConstrainedDataFrame:3
msgid "Format constraints are checked and maintained automatically."
msgstr ""

#: ../../api/scglue.utils.ConstrainedDataFrame.rst:23:<autosummary>:1
msgid ":py:obj:`rectify <scglue.utils.ConstrainedDataFrame.rectify>`"
msgstr ""

#: ../../api/scglue.utils.ConstrainedDataFrame.rst:23:<autosummary>:1
msgid ":py:obj:`verify <scglue.utils.ConstrainedDataFrame.verify>`"
msgstr ""

#: ../../api/scglue.utils.ConstrainedDataFrame.rst:29:<autosummary>:1
msgid ":py:obj:`df <scglue.utils.ConstrainedDataFrame.df>`\\"
msgstr ""

#: ../../api/scglue.utils.ConstrainedDataFrame.rst:29:<autosummary>:1
msgid "Convert to regular data frame"
msgstr ""

#: ../../api/scglue.utils.ConstrainedDataFrame.rst:29:<autosummary>:1
msgid ":py:obj:`logger <scglue.utils.ConstrainedDataFrame.logger>`\\"
msgstr ""

#: ../../api/scglue.utils.ConstrainedDataFrame.rectify.rst:2
msgid "scglue.utils.ConstrainedDataFrame.rectify"
msgstr ""

#: ../../api/scglue.utils.ConstrainedDataFrame.verify.rst:2
msgid "scglue.utils.ConstrainedDataFrame.verify"
msgstr ""

#: ../../api/scglue.utils.DelayedKeyboardInterrupt.rst:2
msgid "scglue.utils.DelayedKeyboardInterrupt"
msgstr ""

#: ../../api/scglue.utils.DelayedKeyboardInterrupt.rst:26:<autosummary>:1
msgid ":py:obj:`logger <scglue.utils.DelayedKeyboardInterrupt.logger>`\\"
msgstr ""

#: ../../api/scglue.utils.LogManager.rst:2
msgid "scglue.utils.LogManager"
msgstr ""

#: ../../api/scglue.utils.LogManager.rst:22:<autosummary>:1
msgid ":py:obj:`get_logger <scglue.utils.LogManager.get_logger>`"
msgstr ""

#: ../../api/scglue.utils.LogManager.rst:22:<autosummary>:1 of
#: scglue.utils.LogManager.get_logger:1
msgid "Get a logger by name"
msgstr ""

#: ../../api/scglue.utils.LogManager.rst:29:<autosummary>:1
msgid ":py:obj:`console_log_level <scglue.utils.LogManager.console_log_level>`\\"
msgstr ""

#: ../../api/scglue.utils.LogManager.rst:29:<autosummary>:1
msgid "Configure logging level printed in the console"
msgstr ""

#: ../../api/scglue.utils.LogManager.rst:29:<autosummary>:1
msgid ":py:obj:`file_log_level <scglue.utils.LogManager.file_log_level>`\\"
msgstr ""

#: ../../api/scglue.utils.LogManager.rst:29:<autosummary>:1
msgid "Configure logging level in the log file"
msgstr ""

#: ../../api/scglue.utils.LogManager.rst:29:<autosummary>:1
msgid ":py:obj:`log_file <scglue.utils.LogManager.log_file>`\\"
msgstr ""

#: ../../api/scglue.utils.LogManager.rst:29:<autosummary>:1
msgid "Configure log file"
msgstr ""

#: ../../api/scglue.utils.LogManager.get_logger.rst:2
msgid "scglue.utils.LogManager.get\\_logger"
msgstr ""

#: of scglue.utils.LogManager.get_logger:4
msgid ":py:class:`logging.Logger`"
msgstr ""

#: ../../api/scglue.utils.SingletonMeta.rst:2
msgid "scglue.utils.SingletonMeta"
msgstr ""

#: of scglue.utils.SingletonMeta:1
msgid "Bases: :py:class:`type`"
msgstr ""

#: ../../api/scglue.utils.get_chained_attr.rst:2
msgid "scglue.utils.get\\_chained\\_attr"
msgstr ""

#: of scglue.utils.get_chained_attr:4
msgid "Object to get attribute from"
msgstr ""

#: of scglue.utils.get_chained_attr:6
msgid "Attribute name"
msgstr ""

#: of scglue.utils.get_chained_attr:9
msgid "*attr_value* -- Attribute value"
msgstr ""

#: ../../api/scglue.utils.get_rs.rst:2
msgid "scglue.utils.get\\_rs"
msgstr ""

#: of scglue.utils.get_rs:4
msgid "Object that can be converted to a random state object"
msgstr ""

#: of scglue.utils.get_rs:6
msgid ":py:class:`~numpy.random.RandomState`"
msgstr ""

#: of scglue.utils.get_rs:7
msgid "*rs* -- Random state object"
msgstr ""

#: ../../api/scglue.utils.logged.rst:2
msgid "scglue.utils.logged"
msgstr ""

#: of scglue.utils.logged:4
msgid ":py:class:`typing.TypeVar`\\(``T``)"
msgstr ""

#: ../../api/scglue.utils.run_command.rst:2
msgid "scglue.utils.run\\_command"
msgstr ""

#: of scglue.utils.run_command:4
msgid "A string containing the command to be executed"
msgstr ""

#: of scglue.utils.run_command:5
msgid "Where to redirect stdout"
msgstr ""

#: of scglue.utils.run_command:6
msgid "Where to redirect stderr"
msgstr ""

#: of scglue.utils.run_command:7
msgid "Whether to log the command being printed (log level is INFO)"
msgstr ""

#: of scglue.utils.run_command:9
msgid ""
"Whether to print stdout of the command. If ``stdout`` is PIPE and "
"``print_output`` is set to False, the output will be returned as a list "
"of output lines."
msgstr ""

#: of scglue.utils.run_command:13
msgid "Look up dict of error message (indexed by error code)"
msgstr ""

#: of scglue.utils.run_command:14
msgid "Other keyword arguments to be passed to :class:`subprocess.Popen`"
msgstr ""

#: of scglue.utils.run_command:16
msgid ":py:data:`typing.Optional`\\[:py:class:`typing.List`\\[:py:class:`str`]]"
msgstr ""

#: of scglue.utils.run_command:17
msgid ""
"*output_lines* -- A list of output lines (only returned if ``stdout`` is "
"PIPE and ``print_output`` is False)"
msgstr ""
